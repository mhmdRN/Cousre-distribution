[{"D:\\senior\\course-distribution\\course-distribution\\src\\index.js":"1","D:\\senior\\course-distribution\\course-distribution\\src\\App.js":"2","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\index.js":"3","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\App.js":"4","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Navbar.js":"5","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Course.js":"6","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Create.js":"7","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Details.js":"8","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Update.js":"9","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Create.js":"10","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Doctors.js":"11","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Update.js":"12","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Details.js":"13","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\index.js":"14","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\App.js":"15","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Navbar.js":"16","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Update.js":"17","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Create.js":"18","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Doctors.js":"19","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Create.js":"20","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Details.js":"21","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Course.js":"22","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Update.js":"23","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Details.js":"24","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Distributions.js":"25","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Create.js":"26","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Distributions\\Distributions.js":"27","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Distributions\\Create.js":"28","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Distributions\\Details.js":"29","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Details.js":"30","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\Registrations.js":"31","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\Create.js":"32","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\update.js":"33","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\Update.js":"34","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Update.js":"35","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Signup.js":"36","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Login.js":"37","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Error.js":"38","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\index.js":"39","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\App.js":"40","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Error.js":"41","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Signup.js":"42","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Navbar.js":"43","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Login.js":"44","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Registrations\\Registrations.js":"45","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Registrations\\Create.js":"46","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Create.js":"47","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Doctors.js":"48","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Create.js":"49","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Course.js":"50","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Registrations\\Update.js":"51","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Update.js":"52","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Details.js":"53","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Update.js":"54","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Distributions.js":"55","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Details.js":"56","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Update.js":"57","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Details.js":"58","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Create.js":"59","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\index.js":"60","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\App.js":"61","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Navbar.js":"62","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Signup.js":"63","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Error.js":"64","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Login.js":"65","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Registrations\\Registrations.js":"66","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Registrations\\Create.js":"67","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Registrations\\Update.js":"68","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Courses\\Course.js":"69","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Doctors\\Doctors.js":"70","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Doctors\\Details.js":"71","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Doctors\\Update.js":"72","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Doctors\\Create.js":"73","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Courses\\Create.js":"74","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Distributions\\Distributions.js":"75","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Courses\\Details.js":"76","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Courses\\Update.js":"77","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Distributions\\Create.js":"78","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Distributions\\Details.js":"79","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Distributions\\Update.js":"80"},{"size":432,"mtime":1607775545000,"results":"81","hashOfConfig":"82"},{"size":427,"mtime":1623498022864,"results":"83","hashOfConfig":"82"},{"size":432,"mtime":1629822463000,"results":"84","hashOfConfig":"85"},{"size":1588,"mtime":1630692101817,"results":"86","hashOfConfig":"85"},{"size":1607,"mtime":1630576914098,"results":"87","hashOfConfig":"85"},{"size":4241,"mtime":1630506406744,"results":"88","hashOfConfig":"85"},{"size":6229,"mtime":1630502190084,"results":"89","hashOfConfig":"85"},{"size":3240,"mtime":1630413437977,"results":"90","hashOfConfig":"85"},{"size":6203,"mtime":1630501076653,"results":"91","hashOfConfig":"85"},{"size":4332,"mtime":1630670387567,"results":"92","hashOfConfig":"85"},{"size":4035,"mtime":1630507923607,"results":"93","hashOfConfig":"85"},{"size":4408,"mtime":1630687304933,"results":"94","hashOfConfig":"85"},{"size":2624,"mtime":1630509617969,"results":"95","hashOfConfig":"85"},{"size":432,"mtime":1629822463000,"results":"96","hashOfConfig":"97"},{"size":2767,"mtime":1632148498858,"results":"98","hashOfConfig":"97"},{"size":1833,"mtime":1633515843278,"results":"99","hashOfConfig":"97"},{"size":4957,"mtime":1633866605245,"results":"100","hashOfConfig":"97"},{"size":7111,"mtime":1634133031890,"results":"101","hashOfConfig":"97"},{"size":6589,"mtime":1633515740964,"results":"102","hashOfConfig":"97"},{"size":4913,"mtime":1633515750298,"results":"103","hashOfConfig":"97"},{"size":5193,"mtime":1632078222416,"results":"104","hashOfConfig":"97"},{"size":8657,"mtime":1634133259719,"results":"105","hashOfConfig":"97"},{"size":6592,"mtime":1631364280832,"results":"106","hashOfConfig":"97"},{"size":6627,"mtime":1634227878991,"results":"107","hashOfConfig":"97"},{"size":5452,"mtime":1634734396040,"results":"108","hashOfConfig":"97"},{"size":14494,"mtime":1634734132558,"results":"109","hashOfConfig":"97"},{"size":4122,"mtime":1630692229161,"results":"110","hashOfConfig":"85"},{"size":8281,"mtime":1630783261661,"results":"111","hashOfConfig":"85"},{"size":4350,"mtime":1630694397025,"results":"112","hashOfConfig":"85"},{"size":11500,"mtime":1634132848752,"results":"113","hashOfConfig":"97"},{"size":10565,"mtime":1634733328854,"results":"114","hashOfConfig":"97"},{"size":9459,"mtime":1634733227714,"results":"115","hashOfConfig":"97"},{"size":7960,"mtime":1630961488956,"results":"116","hashOfConfig":"97"},{"size":10684,"mtime":1634733379469,"results":"117","hashOfConfig":"97"},{"size":14808,"mtime":1634734257175,"results":"118","hashOfConfig":"97"},{"size":4411,"mtime":1631125240475,"results":"119","hashOfConfig":"97"},{"size":6145,"mtime":1632915614931,"results":"120","hashOfConfig":"97"},{"size":369,"mtime":1631362847476,"results":"121","hashOfConfig":"97"},{"size":432,"mtime":1629822463000,"results":"122","hashOfConfig":"123"},{"size":2767,"mtime":1632148498858,"results":"124","hashOfConfig":"123"},{"size":369,"mtime":1631362847476,"results":"125","hashOfConfig":"123"},{"size":4411,"mtime":1631125240475,"results":"126","hashOfConfig":"123"},{"size":1809,"mtime":1632053314614,"results":"127","hashOfConfig":"123"},{"size":6145,"mtime":1632915614931,"results":"128","hashOfConfig":"123"},{"size":5961,"mtime":1632148766265,"results":"129","hashOfConfig":"123"},{"size":8073,"mtime":1632914993231,"results":"130","hashOfConfig":"123"},{"size":4744,"mtime":1632061791577,"results":"131","hashOfConfig":"123"},{"size":5682,"mtime":1632077940925,"results":"132","hashOfConfig":"123"},{"size":6947,"mtime":1632055098932,"results":"133","hashOfConfig":"123"},{"size":7931,"mtime":1631363174994,"results":"134","hashOfConfig":"123"},{"size":9044,"mtime":1632064539807,"results":"135","hashOfConfig":"123"},{"size":6592,"mtime":1631364280832,"results":"136","hashOfConfig":"123"},{"size":5193,"mtime":1632078222416,"results":"137","hashOfConfig":"123"},{"size":4828,"mtime":1632075809452,"results":"138","hashOfConfig":"123"},{"size":4863,"mtime":1633373298921,"results":"139","hashOfConfig":"123"},{"size":3306,"mtime":1631363097725,"results":"140","hashOfConfig":"123"},{"size":9765,"mtime":1632153582444,"results":"141","hashOfConfig":"123"},{"size":11655,"mtime":1632336855795,"results":"142","hashOfConfig":"123"},{"size":8751,"mtime":1633372593758,"results":"143","hashOfConfig":"123"},{"size":432,"mtime":1634813132000,"results":"144","hashOfConfig":"145"},{"size":2767,"mtime":1634813132000,"results":"146","hashOfConfig":"145"},{"size":1753,"mtime":1634813132000,"results":"147","hashOfConfig":"145"},{"size":4231,"mtime":1634813132000,"results":"148","hashOfConfig":"145"},{"size":356,"mtime":1634813132000,"results":"149","hashOfConfig":"145"},{"size":5973,"mtime":1634813132000,"results":"150","hashOfConfig":"145"},{"size":10298,"mtime":1634813132000,"results":"151","hashOfConfig":"145"},{"size":9132,"mtime":1634813132000,"results":"152","hashOfConfig":"145"},{"size":10317,"mtime":1634813132000,"results":"153","hashOfConfig":"145"},{"size":8434,"mtime":1634813132000,"results":"154","hashOfConfig":"145"},{"size":6403,"mtime":1634813132000,"results":"155","hashOfConfig":"145"},{"size":5041,"mtime":1634813132000,"results":"156","hashOfConfig":"145"},{"size":4790,"mtime":1634813132000,"results":"157","hashOfConfig":"145"},{"size":4759,"mtime":1634813132000,"results":"158","hashOfConfig":"145"},{"size":6902,"mtime":1634813132000,"results":"159","hashOfConfig":"145"},{"size":5293,"mtime":1634813132000,"results":"160","hashOfConfig":"145"},{"size":6462,"mtime":1636801242330,"results":"161","hashOfConfig":"145"},{"size":6383,"mtime":1634813132000,"results":"162","hashOfConfig":"145"},{"size":14184,"mtime":1634813132000,"results":"163","hashOfConfig":"145"},{"size":11252,"mtime":1634813132000,"results":"164","hashOfConfig":"145"},{"size":14471,"mtime":1634813132000,"results":"165","hashOfConfig":"145"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y2ox8r",{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"1or3est",{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"172"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"172"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"172"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"172"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"172"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"172"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"172"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},"1smawcl",{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"202"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"202"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"202"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"202"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"202"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"202"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"202"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"172"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"172"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"202"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"202"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"202"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19frxjd",{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":3,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},"1c3evwj",{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"307"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"307"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"307"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"307"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"307"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"307"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"307"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"307"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"307"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"307"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"307"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"307"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"307"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"307"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"307"},"D:\\senior\\course-distribution\\course-distribution\\src\\index.js",[],"D:\\senior\\course-distribution\\course-distribution\\src\\App.js",[],"D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\index.js",[],["363","364"],"D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\App.js",[],"D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Navbar.js",["365"],"import React, { useEffect } from 'react'\r\nimport {Menu,Icon} from 'semantic-ui-react'\r\nimport {Link, useLocation} from 'react-router-dom'\r\n\r\nconst Navbar=()=>{\r\n const Location=useLocation();\r\n  const isactive=(url)=>{\r\n    if(Location.pathname.startsWith(url))\r\n      return true;\r\n    else\r\n      return false\r\n  }\r\n \r\n    return(\r\n    \r\n        \r\n      <Menu pointing secondary stackable >\r\n        <Link to='/doctors'>\r\n      <Menu.Item\r\n        name='Doctors'\r\n        active={isactive('/doctors')}\r\n        \r\n      >\r\n      <Icon size=\"large\" name=\"users\"/>\r\n      Doctors\r\n      </Menu.Item>\r\n      </Link>\r\n      <Link to='/registration'>\r\n      <Menu.Item\r\n        name='Registration'\r\n        active={isactive('/registration')}\r\n       \r\n      >\r\n         <Icon size=\"large\" name=\"book\"/>\r\n      Registration\r\n        </Menu.Item>\r\n\r\n      </Link>\r\n      <Link to='/distributions'>\r\n      <Menu.Item\r\n        name='Distributions'\r\n        active={isactive('/distributions')}\r\n        \r\n      >\r\n         <Icon size=\"large\" name=\"list\"/>\r\n          Distributions\r\n        </Menu.Item>\r\n      </Link>\r\n      <Link to='/courses'>\r\n      <Menu.Item\r\n        name='Courses'\r\n        active={isactive('/courses')}\r\n        \r\n      >\r\n         <Icon size=\"large\" name=\"book\"/>\r\n      Courses\r\n        </Menu.Item>\r\n      </Link>\r\n     \r\n      <Menu.Menu position='right'>\r\n      <Link to=\"/logout\">\r\n        <Menu.Item\r\n          name='logout'\r\n          active={isactive('/logout')}\r\n   \r\n        />\r\n        </Link>\r\n      </Menu.Menu>\r\n     \r\n    </Menu>\r\n\r\n   \r\n    \r\n    )\r\n}\r\nexport default Navbar;","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Course.js",["366","367","368"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Icon, Table ,Container,Message} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Course = () => {\r\n    const [courses,setCourses]=useState([]);\r\n    const[loading,setLoading]=useState(false);\r\n    useEffect(async ()=>{\r\n        setLoading(true)\r\n        const Crs=await axios.get('http://localhost:4000/courses');\r\n        setCourses(Crs.data);\r\n        setLoading(false);\r\n        console.log(courses);\r\n        \r\n    },[])\r\n\r\n\r\n    return(\r\n        <Container style={{marginTop:'2em'}}>\r\n        {\r\n            (loading)? \r\n            <Message icon>\r\n    <Icon name='circle notched' loading />\r\n    <Message.Content>\r\n      <Message.Header>Just one second</Message.Header>\r\n      We are fetching that content for you.\r\n    </Message.Content>\r\n  </Message>\r\n            :\r\n            <Table compact celled style={{fontSize:\"15px\"}}>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell textAlign=\"center\">Code</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Name</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Credits</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Semester Nb</Table.HeaderCell>\r\n                <Table.HeaderCell />\r\n              </Table.Row>\r\n            </Table.Header>\r\n        \r\n            <Table.Body>\r\n                {\r\n                    courses.map(c=>{\r\n                          return(\r\n                              <Table.Row>\r\n                              <Table.Cell textAlign=\"center\">{c.Course_code}</Table.Cell>\r\n                              <Table.Cell textAlign=\"center\">\r\n                                  <Link to={`/courses/details/${c._id}`}>\r\n                                  {c.course_name}\r\n                                  </Link>\r\n                              </Table.Cell>\r\n                              <Table.Cell textAlign=\"center\">{c.credits}</Table.Cell>\r\n                             \r\n                              <Table.Cell textAlign=\"center\">{c.Semester_Nb}</Table.Cell>\r\n                              <Table.Cell collapsing>\r\n                                <Link to={`/courses/update/${c._id}` }>\r\n                              <Button \r\n                              content=\"Update\" \r\n                              color=\"blue\"\r\n                              \r\n                              size='small'\r\n                              icon=\"redo\"\r\n                              />\r\n                              </Link>\r\n                              <Button\r\n                               content=\"Delete\" \r\n                               icon=\"trash\"\r\n                               color=\"red\"\r\n                               size='small'\r\n                               onClick={()=>{\r\n                                 setLoading(true);\r\n                                 const req =axios.delete('http://localhost:4000/courses/'+c._id);\r\n                                 setLoading(false);\r\n                                 window.location.reload();\r\n                               }}\r\n                               />\r\n  \r\n  \r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                    })\r\n                   \r\n                }\r\n             \r\n            </Table.Body>\r\n        \r\n            <Table.Footer fullWidth>\r\n              <Table.Row>\r\n                <Table.HeaderCell colSpan='12'>\r\n                    <Link to='/courses/create'>\r\n                  <Button\r\n                    floated='right'\r\n                    icon\r\n                    labelPosition='left'\r\n                    color=\"green\"\r\n                    size='small'\r\n                  >\r\n                    <Icon name='add' />\r\n                    Add Course \r\n                  </Button>\r\n                  </Link>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n          </Table>\r\n        }\r\n        \r\n        \r\n        </Container>\r\n        \r\n            \r\n    )\r\n            \r\n}\r\n   \r\n\r\n\r\nexport default Course;","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Create.js",["369"],"import React, { useState } from 'react'\r\n//import { Helmet } from 'react-helmet'\r\nimport {Checkbox,  Button,Form,Input, Container, Radio, Divider} from 'semantic-ui-react'\r\nimport axios from 'axios'\r\nconst CREATE_COURSE={\r\n    Course_code:'',\r\n      course_name:'',\r\n      Total_Hours:0,\r\n      Description:'',\r\n      credits:0,\r\n      available:false,\r\n      Semester_Nb:'',\r\n      Course_Type:'',\r\n      Course_hours:0,\r\n      Lab_hours:0,\r\n      Exercise_hours:0\r\n}\r\nconst Create = () => {\r\n    const [create_course,set_create_course]=useState(CREATE_COURSE);\r\n    const handleInput=(e)=>{\r\n        const{name,value}=e.target;\r\n       \r\n        set_create_course(prev=>({...prev,[name]:value}));\r\n        console.log(create_course);\r\n    }\r\n    const handleSubmit=async ()=>{\r\n        await axios.post('http://localhost:4000/courses/create',create_course);\r\n\r\n    }\r\n    \r\n    return (  \r\n      \r\n          <Container>\r\n        \r\n        <Form  method='POST' onSubmit={handleSubmit} >\r\n            <Form.Group widths='equal'>\r\n              <Form.Field\r\n              value={CREATE_COURSE.Course_code}\r\n              >\r\n                <label>Course Code</label>\r\n                <Input   \r\n                required         \r\n                placeholder='Course Code'\r\n                name='Course_code'\r\n                onChange={handleInput} />\r\n              </Form.Field>\r\n              <Form.Field\r\n                value={CREATE_COURSE.course_name}\r\n                >\r\n                <label> Course Name</label>\r\n              <Input required name=\"course_name\" onChange={handleInput}  placeholder=\"Course Name\"/>\r\n              </Form.Field>\r\n              <Form.Field\r\n                value={CREATE_COURSE.Total_Hours}\r\n              >\r\n                <label>Total Hours</label>\r\n                <Input\r\n                required\r\n                type='number'\r\n                placeholder='Total Hours'\r\n                name=\"Total_Hours\"\r\n                onChange={handleInput} />\r\n              </Form.Field>\r\n              \r\n            </Form.Group>\r\n            <Divider  section/>\r\n            <Form.Group widths='3' >\r\n            <Form.Field\r\n                value={CREATE_COURSE.Description}\r\n              >\r\n                 <label>Description</label>\r\n                <Input \r\n                  required\r\n                  placeholder='Description'\r\n                  name=\"Description\"\r\n                  onChange={handleInput}\r\n                  />\r\n               \r\n                </Form.Field>\r\n                <Form.Field\r\n                value={CREATE_COURSE.available}\r\n                >\r\n                  <label style={{marginLeft:\"50%\"}}>Available</label>\r\n                <Radio toggle style={{marginLeft:\"50%\"}}  name='available' checked={create_course.available} onChange={handleInput} onClick={()=>create_course.available=!create_course.available}/>\r\n                </Form.Field>\r\n                <Form.Field \r\n                \r\n                value={CREATE_COURSE.credits}\r\n              >\r\n                <label>Credits</label>\r\n                \r\n                <input \r\n                name=\"credits\"\r\n                required \r\n                type=\"number\" \r\n                min=\"0\" max=\"30\" \r\n                placeholder=\"0\"\r\n                onChange={handleInput} />\r\n                \r\n                \r\n                </Form.Field>\r\n              </Form.Group >\r\n              <Divider  section/>\r\n              \r\n              <Form.Group widths=\"equal\">\r\n             \r\n    \r\n              <Form.Field \r\n                value={CREATE_COURSE.Semester_Nb}\r\n              >\r\n                <label>Semester Number</label>\r\n               \r\n\r\n                <select name=\"Semester_Nb\" value={create_course.Semester_Nb} onChange={handleInput}>\r\n                  <option value=\"S1\" >S1</option>\r\n                  <option value=\"S2\" >S2</option>\r\n                  <option value=\"S3\" >S3</option>\r\n                  <option value=\"S4\" >S4</option>\r\n                  <option value=\"S5\" >S5</option>\r\n                  <option value=\"S6\" >S6</option>\r\n                  <option value=\"S7\" >S7</option>\r\n                  <option value=\"S8\" >S8</option>\r\n                  </select>\r\n                </Form.Field>\r\n    \r\n              <Form.Field\r\n                value={CREATE_COURSE.Course_Type}\r\n                name=\"Course_Type\"\r\n              >\r\n              <label>Course Type</label>   \r\n          <select  name=\"Course_Type\" value={CREATE_COURSE.Course_Type} onChange={handleInput}>\r\n                <option value=\"Obligatory\">Obligatory</option>\r\n                <option value=\"Elective\">Elective</option>\r\n          </select>\r\n              \r\n                </Form.Field>\r\n              </Form.Group >\r\n              <Divider  section/>\r\n              <Form.Group widths=\"equal\">\r\n              <Form.Field\r\n                value={CREATE_COURSE.Course_hours}\r\n              >\r\n              <label>Course Hours</label>\r\n              <Input\r\n              required\r\n              type='number'\r\n                placeholder='Course Hours'\r\n                name=\"Course_hours\"\r\n                onChange={handleInput}/>\r\n                </Form.Field>\r\n                <Form.Field\r\n                value={CREATE_COURSE.Lab_hours}\r\n              >\r\n              <label>Lab Hours</label>\r\n              <Input\r\n              required\r\n              type='number'\r\n                placeholder='Lab Hours'\r\n                name=\"Lab_hours\"\r\n                onChange={handleInput}/>\r\n                </Form.Field>\r\n                \r\n                <Form.Field\r\n                value={CREATE_COURSE.Exercise_hours}\r\n              >\r\n              <label>Exercise Hours</label>\r\n              <Input\r\n              required\r\n                type='number'\r\n                placeholder='Exercise Hours'\r\n                name=\"Exercise_hours\"\r\n                onChange={handleInput}/>\r\n                </Form.Field>\r\n                </Form.Group>\r\n            <Form.Field  >\r\n             <Button floated=\"right\" color=\"red\">Create</Button>\r\n            </Form.Field>\r\n            \r\n          </Form>\r\n          </Container>\r\n       \r\n        \r\n    )\r\n}\r\n \r\nexport default Create;","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Details.js",["370","371","372"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport {Container,Message,Table,Icon} from 'semantic-ui-react'\r\n\r\nconst Details=()=> {\r\n    var crs;\r\n    const [crses,setcrses]=useState([]);\r\n    const [loading,setLoading]=useState(false);\r\n    const {id}=useParams();\r\n    useEffect(async()=>{\r\n        setLoading(true);\r\n        const course=await axios.get('http://localhost:4000/courses/details/'+id);\r\n        setcrses(course.data);\r\n        setLoading(false);\r\n        \r\n    },[]);\r\n\r\n        return (\r\n            <Container>\r\n                 {\r\n            (loading)? \r\n            <Message icon style={{marginTop:\"20%\"}}>\r\n    <Icon name='circle notched' loading />\r\n    <Message.Content>\r\n      <Message.Header>Just one second</Message.Header>\r\n      We are fetching that content for you.\r\n    </Message.Content>\r\n  </Message>\r\n            :\r\n            <Table    >\r\n            <Table.Header>\r\n              <Table.Row >\r\n                  \r\n                <Table.HeaderCell >Code</Table.HeaderCell>\r\n                <Table.HeaderCell >Name</Table.HeaderCell>\r\n                <Table.HeaderCell >Credits</Table.HeaderCell>\r\n                <Table.HeaderCell >Type</Table.HeaderCell>\r\n                <Table.HeaderCell >Semester Nb</Table.HeaderCell>\r\n                <Table.HeaderCell >Total hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Course hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Exercise hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Lab hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Available</Table.HeaderCell>\r\n                <Table.HeaderCell >Description</Table.HeaderCell>\r\n                \r\n              </Table.Row>\r\n            </Table.Header>\r\n        \r\n            <Table.Body>\r\n                \r\n               \r\n                              <Table.Row>\r\n                              <Table.Cell collapsing=\"3\">{crses.Course_code}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.course_name}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.credits}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.Course_Type}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.Semester_Nb}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.Total_Hours}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.Course_hours}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.Exercise_hours}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.Lab_hours}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.available?'true':'false'}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.Description}</Table.Cell>\r\n                             \r\n                            </Table.Row>\r\n                          \r\n                   \r\n                \r\n             \r\n            </Table.Body>\r\n        \r\n          \r\n          </Table>\r\n        }\r\n           </Container>\r\n        );\r\n    \r\n}\r\nexport default Details;","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Update.js",["373","374"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport {  Button, Form, Input, Radio, Container ,Divider, Icon} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst Update = () => {\r\n  var [crses, setcrses] = useState([]);\r\n  const { id } = useParams();\r\n  useEffect(async () => {\r\n    const course = await axios.get(\r\n      \"http://localhost:4000/courses/update/\" + id\r\n    );\r\n    setcrses(course.data);\r\n    crses = course.data;\r\n    console.log(course.data, crses);\r\n  }, []);\r\n\r\n  const CREATE_COURSE = {\r\n    Course_code: crses.Course_code,\r\n    course_name: crses.course_name,\r\n    Total_Hours: crses.Total_Hours,\r\n    Description: crses.Description,\r\n    credits: crses.credits,\r\n    available: crses.available,\r\n    Semester_Nb: crses.Semester_Nb,\r\n    Course_Type: crses.Course_Type,\r\n    Course_hours: crses.Course_hours,\r\n    Lab_hours: crses.Lab_hours,\r\n    Exercise_hours: crses.Exercise_hours,\r\n  };\r\n  const [create_course, set_create_course] = useState(CREATE_COURSE);\r\n\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    set_create_course((prev) => ({ ...prev, [name]: value }));\r\n    console.log(create_course);\r\n  };\r\n  const handleSubmit = async () => {\r\n    const x = await axios.put(\r\n      \"http://localhost:4000/courses/update/\" + id,\r\n      create_course\r\n    );\r\n    console.log(x);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form method=\"POST\" onSubmit={handleSubmit}>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field>\r\n            <label>Course Code</label>\r\n            <Input\r\n              required\r\n              placeholder={CREATE_COURSE.Course_code}\r\n              name=\"Course_code\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label> Course Name</label>\r\n            <Input\r\n              required\r\n              name=\"course_name\"\r\n              onChange={handleInput}\r\n              placeholder={CREATE_COURSE.course_name}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Total Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              placeholder={CREATE_COURSE.Total_Hours}\r\n              name=\"Total_Hours\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n         \r\n        </Form.Group>\r\n        <Divider section/>\r\n        <Form.Group widths=\"3\">\r\n        <Form.Field>\r\n            <label>Description</label>\r\n            <Input\r\n              required\r\n              placeholder={CREATE_COURSE.Description}\r\n              name=\"Description\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field value={CREATE_COURSE.available} >\r\n            <lable style={{marginLeft:\"50%\"}}>Available</lable>\r\n            <Radio\r\n              style={{marginLeft:\"50%\"}}\r\n              toggle\r\n              name=\"available\"\r\n              checked={create_course.available}\r\n              onChange={handleInput}\r\n              value={CREATE_COURSE.available}\r\n              onClick={() =>\r\n                (create_course.available = !create_course.available)\r\n              }\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n              <label>Credits</label>\r\n              <input\r\n                name=\"credits\"\r\n                placeholder={CREATE_COURSE.credits}\r\n                required\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"30\"\r\n                onChange={handleInput}\r\n              />\r\n            </Form.Field>\r\n\r\n        </Form.Group>\r\n        <Divider section/>\r\n          <Form.Group widths=\"equal\">\r\n            \r\n            <Form.Field>\r\n              <label>Semester Number</label>\r\n\r\n              <select\r\n                name=\"Semester_Nb\"\r\n                placeholder={create_course.Semester_Nb}\r\n                onChange={handleInput}\r\n              >\r\n                <option value=\"S1\">S1</option>\r\n                <option value=\"S2\">S2</option>\r\n                <option value=\"S3\">S3</option>\r\n                <option value=\"S4\">S4</option>\r\n                <option value=\"S5\">S5</option>\r\n                <option value=\"S6\">S6</option>\r\n                <option value=\"S7\">S7</option>\r\n                <option value=\"S8\">S8</option>\r\n              </select>\r\n            </Form.Field>\r\n\r\n            <Form.Field name=\"Course_Type\">\r\n              <label>Course Type</label>\r\n              <select\r\n                onChange={handleInput}\r\n                name=\"Course_Type\"\r\n                placeholder={create_course.Course_Type}\r\n              >\r\n                <option value=\"Obligatory\">Obligatory</option>\r\n                <option value=\"Elective\">Elective</option>\r\n              </select>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Divider section/>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field value={CREATE_COURSE.Course_hours}>\r\n            <label>Course Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              name=\"Course_hours\"\r\n              placeholder={CREATE_COURSE.Course_hours}\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Lab Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              placeholder={CREATE_COURSE.Lab_hours}\r\n              name=\"Lab_hours\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field value={CREATE_COURSE.Exercise_hours}>\r\n            <label>Exercise Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              placeholder={CREATE_COURSE.Exercise_hours}\r\n              name=\"Exercise_hours\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field>\r\n          <Button floated=\"right\"  color=\"red\">\r\n            <Icon name=\"redo\"/>\r\n            update</Button>\r\n        </Form.Field>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Create.js",[],"D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Doctors.js",["375","376"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Icon, Table ,Container,Message} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Doctor = () => {\r\n    const [doctors,setDoctors]=useState([]);\r\n    const[loading,setLoading]=useState(false);\r\n    useEffect(async ()=>{\r\n        setLoading(true)\r\n        const Drs=await axios.get('http://localhost:4000/doctors');\r\n        setDoctors(Drs.data);\r\n        setLoading(false);\r\n        console.log(Drs.data);\r\n        \r\n    },[])\r\n\r\n\r\n    return(\r\n        <Container style={{marginTop:'2em'}}>\r\n        {\r\n            (loading)? \r\n            <Message icon>\r\n    <Icon name='circle notched' loading />\r\n    <Message.Content>\r\n      <Message.Header>Just one second</Message.Header>\r\n      We are fetching that content for you.\r\n    </Message.Content>\r\n  </Message>\r\n            :\r\n            <Table compact celled style={{fontSize:\"15px\"}}>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell textAlign=\"center\">First name</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Last name</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Email</Table.HeaderCell>\r\n                <Table.HeaderCell />\r\n              </Table.Row>\r\n            </Table.Header>\r\n        \r\n            <Table.Body>\r\n                {\r\n                    doctors.map(d=>{\r\n                          return(\r\n                              <Table.Row>\r\n                                   <Table.Cell textAlign=\"center\">\r\n                                  <Link to={`/doctors/details/${d._id}`}>\r\n                                  {d.Fname}\r\n                                  </Link>\r\n                              </Table.Cell>\r\n                              <Table.Cell textAlign=\"center\">{d.Lname}</Table.Cell>\r\n                              <Table.Cell textAlign=\"center\">{d.Email}</Table.Cell>\r\n                              <Table.Cell collapsing>\r\n                                <Link to={`/doctors/update/${d._id}` }>\r\n                              <Button \r\n                              content=\"Update\" \r\n                              color=\"blue\"\r\n                              \r\n                              size='small'\r\n                              icon=\"redo\"\r\n                              />\r\n                              </Link>\r\n                              <Button\r\n                               content=\"Delete\" \r\n                               icon=\"trash\"\r\n                               color=\"red\"\r\n                               size='small'\r\n                               onClick={()=>{\r\n                                 setLoading(true);\r\n                                 const req =axios.delete('http://localhost:4000/doctors/'+d._id);\r\n                                 setLoading(false);\r\n                                 window.location.reload();\r\n                               }}\r\n                               />\r\n  \r\n  \r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                    })\r\n                   \r\n                }\r\n             \r\n            </Table.Body>\r\n        \r\n            <Table.Footer fullWidth>\r\n              <Table.Row>\r\n                <Table.HeaderCell colSpan='12'>\r\n                    <Link to='/doctors/create'>\r\n                  <Button\r\n                    floated='right'\r\n                    icon\r\n                    labelPosition='left'\r\n                    color=\"green\"\r\n                    size='small'\r\n                  >\r\n                    <Icon name='add' />\r\n                    Add Course \r\n                  </Button>\r\n                  </Link>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n          </Table>\r\n        }\r\n        \r\n        \r\n        </Container>\r\n        \r\n            \r\n    )\r\n            \r\n}\r\n   \r\n\r\n\r\nexport default Doctor;","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Update.js",[],"D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Details.js",["377","378"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport {Container,Message,Table,Icon} from 'semantic-ui-react'\r\n\r\nconst Details=()=> {\r\n    const [doctor,setdoctor]=useState([]);\r\n    const [loading,setLoading]=useState(false);\r\n    const {id}=useParams();\r\n    useEffect(async()=>{\r\n        setLoading(true);\r\n        const Dr=await axios.get('http://localhost:4000/doctors/details/'+id);\r\n        setdoctor(Dr.data);\r\n        setLoading(false);\r\n        \r\n    },[]);\r\n\r\n        return (\r\n            <Container>\r\n                 {\r\n            (loading)? \r\n            <Message icon style={{marginTop:\"20%\"}}>\r\n    <Icon name='circle notched' loading />\r\n    <Message.Content>\r\n      <Message.Header>Just one second</Message.Header>\r\n      We are fetching that content for you.\r\n    </Message.Content>\r\n  </Message>\r\n            :\r\n            <Table    >\r\n            <Table.Header>\r\n              <Table.Row >\r\n                  \r\n                <Table.HeaderCell >First name</Table.HeaderCell>\r\n                <Table.HeaderCell >Middle name</Table.HeaderCell>\r\n                <Table.HeaderCell >Last name</Table.HeaderCell>\r\n                <Table.HeaderCell >File number</Table.HeaderCell>\r\n                <Table.HeaderCell >Email</Table.HeaderCell>\r\n                <Table.HeaderCell >Phone number</Table.HeaderCell>\r\n                <Table.HeaderCell >Rank</Table.HeaderCell>\r\n                <Table.HeaderCell >Contract type</Table.HeaderCell>\r\n                \r\n              </Table.Row>\r\n            </Table.Header>\r\n        \r\n            <Table.Body>\r\n                \r\n               \r\n                              <Table.Row>\r\n                              <Table.Cell >{doctor.Fname}</Table.Cell>\r\n                              <Table.Cell >{doctor.Mname}</Table.Cell>\r\n                              <Table.Cell >{doctor.Lname}</Table.Cell>\r\n                              <Table.Cell >{doctor.File_Number}</Table.Cell>\r\n                              <Table.Cell >{doctor.Email}</Table.Cell>\r\n                              <Table.Cell >{doctor.phone_Number}</Table.Cell>\r\n                              <Table.Cell >{doctor.Rank}</Table.Cell>\r\n                              <Table.Cell >{doctor.Contract_Type}</Table.Cell>\r\n                             \r\n                            </Table.Row>\r\n                          \r\n                   \r\n                \r\n             \r\n            </Table.Body>\r\n        \r\n          \r\n          </Table>\r\n        }\r\n           </Container>\r\n        );\r\n    \r\n}\r\nexport default Details;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\index.js",[],["379","380"],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\App.js",[],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Navbar.js",["381"],"import React, { useEffect } from 'react'\r\nimport {Menu,Icon} from 'semantic-ui-react'\r\nimport {Link, useLocation} from 'react-router-dom'\r\nimport cookie from 'js-cookies';\r\n\r\nconst Navbar=()=>{\r\n const Location=useLocation();\r\n  const isactive=(url)=>{\r\n    if(Location.pathname.startsWith(url))\r\n      return true;\r\n    else\r\n      return false\r\n  }\r\n \r\n    return(\r\n    \r\n        \r\n      <Menu pointing inverted stackable >\r\n          <Link to='/courses'>\r\n      <Menu.Item\r\n        name='Courses'\r\n        active={isactive('/courses')}\r\n        \r\n      >\r\n         <Icon color=\"red\" size=\"large\" name=\"book\"/>\r\n      Courses\r\n        </Menu.Item>\r\n      </Link>\r\n        <Link to='/doctors'>\r\n      <Menu.Item\r\n        name='Doctors'\r\n        active={isactive('/doctors')}\r\n        \r\n      >\r\n      <Icon color=\"red\" size=\"large\" name=\"users\"/>\r\n      Doctors\r\n      </Menu.Item>\r\n      </Link>\r\n      <Link to='/registrations'>\r\n      <Menu.Item\r\n        name='Course assignments'\r\n        active={isactive('/registrations')}\r\n       \r\n      >\r\n         <Icon color=\"red\" size=\"large\" name=\"book\"/>\r\n         Course assigmnets\r\n        </Menu.Item>\r\n\r\n      </Link>\r\n      <Link to='/distributions'>\r\n      <Menu.Item\r\n        name='Distributions'\r\n        active={isactive('/distributions')}\r\n        \r\n      >\r\n         <Icon color=\"red\" size=\"large\" name=\"list\"/>\r\n          Distributions\r\n        </Menu.Item>\r\n      </Link>\r\n    \r\n     \r\n      <Menu.Menu position='right'>\r\n      <Link to=\"/logout\">\r\n        <Menu.Item\r\n          name='logout'\r\n          active={isactive('/logout')}\r\n          onClick={()=>{\r\n              cookie.removeItem('token');\r\n              window.location.href=\"/\";  \r\n        }}\r\n        />\r\n        </Link>\r\n      </Menu.Menu>\r\n     \r\n    </Menu>\r\n\r\n   \r\n    \r\n    )\r\n}\r\nexport default Navbar;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Update.js",["382"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Divider, Form, Icon, Input } from \"semantic-ui-react\";\r\nimport {useParams,Link} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport cookies from 'js-cookies';\r\nconst Update = () => {\r\n  const [dr, setdr] = useState([]);\r\n  const [Loading, setLoading] = useState(false);\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    const token=cookies.getItem(\"token\");\r\n    const payload={headers:{Authorization:token}};\r\n      axios.get(\"http://localhost:4000/doctors/update/\"+id,payload)\r\n      .then((res) => {\r\n        setdr(res.data);\r\n      })\r\n      .catch((err) => {\r\n        window.location.href=\"/error\"\r\n      });\r\n  });\r\n\r\n  const CREATE_DOCTOR = {\r\n    Fname: dr.Fname,\r\n    Email: dr.Email,\r\n    phone_Number: dr.phone_Number,\r\n    File_Number: dr.File_Number,\r\n    Lname: dr.Lname,\r\n    Mname: dr.Mname,\r\n    Rank: dr.Rank,\r\n    Contract_Type: dr.Contract_Type,\r\n  };\r\n  const [create_doc, set_update_doc] = useState(CREATE_DOCTOR);\r\n\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(e);\r\n    set_update_doc((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n  const handleSubmit = async () => {\r\n    axios.put(\"http://localhost:4000/doctors/update/\"+id, create_doc)\r\n    .then(res=>{\r\n      window.location.href=\"/doctors\";\r\n    })\r\n    .catch(err=>{\r\n      console.log(err)\r\n    })\r\n    \r\n     \r\n\r\n  };\r\n  return (\r\n   \r\n    <Container>\r\n    <Form  loading={Loading}>\r\n      <Form.Group widths=\"equal\">\r\n        <Form.Field value={CREATE_DOCTOR.Fname}>\r\n          <label>First Name</label>\r\n          <Input\r\n            required\r\n            placeholder={CREATE_DOCTOR.Fname}\r\n            name=\"Fname\"\r\n            onChange={handleInput}\r\n\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field value={CREATE_DOCTOR.Mname}>\r\n          <label> Middle Name</label>\r\n          <Input\r\n            required\r\n            name=\"Mname\"\r\n            onChange={handleInput}\r\n            placeholder={CREATE_DOCTOR.Mname}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field value={CREATE_DOCTOR.Lname}>\r\n          <label>Last Name:</label>\r\n          <Input\r\n            required\r\n            placeholder={CREATE_DOCTOR.Lname}\r\n            name=\"Lname\"\r\n            onChange={handleInput}\r\n          />\r\n        </Form.Field>\r\n      </Form.Group>\r\n      <Divider section/>\r\n      <Form.Group widths=\"3\">\r\n        <Form.Field value={CREATE_DOCTOR.Email}>\r\n          <label>Email</label>\r\n          <Input\r\n            required\r\n            type=\"email\"\r\n            control={Input}\r\n            placeholder={CREATE_DOCTOR.Email}\r\n            name=\"Email\"\r\n            onChange={handleInput}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field value={CREATE_DOCTOR.phone_Number}>\r\n          <label>Phone Number</label>\r\n          <Input\r\n            required\r\n            align=\"center\"\r\n            width=\"4\"\r\n            placeholder={CREATE_DOCTOR.phone_Number}\r\n            name=\"phone_Number\"\r\n            onChange={handleInput}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field value={CREATE_DOCTOR.File_Number}>\r\n          <label>File Number</label>\r\n          <Input\r\n            required\r\n            type=\"number\"\r\n            name=\"File_Number\"\r\n            onChange={handleInput}\r\n            width=\"4\"\r\n            placeholder={CREATE_DOCTOR.File_Number}\r\n          />\r\n        </Form.Field>\r\n      </Form.Group>\r\n      <Divider section/>\r\n      <Form.Group widths=\"equal\">\r\n       \r\n\r\n        <Form.Field value={CREATE_DOCTOR.Rank}>\r\n          <label>Rank</label>\r\n          \r\n            <select name=\"Rank\" onChange={handleInput} >\r\n            <option value=\"\" selected disabled hidden>Select Rank</option>\r\n              <option value=\"Doctor\" >Doctor</option>\r\n              <option value=\"Head of Department\" >Head of Department</option>\r\n              <option value=\"Doctor Assistant\" >Doctor Assistant</option>\r\n              </select>\r\n        </Form.Field>\r\n\r\n        <Form.Field value={CREATE_DOCTOR.Contract_Type}>\r\n          <label>Contract Type</label>\r\n        \r\n           <select name=\"Contract_Type\" onChange={handleInput}>\r\n           <option value=\"\" selected disabled hidden>Select contract type</option>\r\n              <option value=\"Full Time\" >Full Time</option>\r\n              <option value=\"Part Time\" >Part Time</option>\r\n              <option value=\"Mallak\" >Mallak</option>\r\n              </select>\r\n        </Form.Field>\r\n      </Form.Group>\r\n      <Divider section/>\r\n      <Form.Field>\r\n        <Button color=\"green\" onClick={handleSubmit}  floated=\"right\">\r\n          <Icon name=\"redo\"/>\r\n          Update Doctor</Button>\r\n      </Form.Field>\r\n    </Form>\r\n    <Link to=\"/doctors\">\r\n       <Button\r\n        content=\"Back\"\r\n         icon=\"arrow left\"\r\n         color=\"red\" \r\n         \r\n         /></Link>\r\n  </Container>\r\n  );\r\n};\r\nexport default Update;\r\n","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Create.js",[],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Doctors.js",["383","384","385","386","387","388"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Icon, Table ,Container,Message, Radio, Modal} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport cookies from 'js-cookies';\r\nimport ReactToExcel from 'react-html-table-to-excel';\r\n\r\nconst Doctor = () => {\r\n    const [doctors,setDoctors]=useState([]);\r\n    const[loading,setLoading]=useState(false);\r\n    const[open,setOpen]=useState(false);\r\n    const [search,setSearch]=useState([]);\r\n    const [searchInput,setSearchInput]=useState('');\r\n    const x=false;\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        const token=cookies.getItem(\"token\");\r\n        const payload={headers:{Authorization:token}};\r\n         axios.get('http://localhost:4000/doctors',payload)\r\n        .then(Drs=>{\r\n          setDoctors(Drs.data);\r\n          setSearch(Drs.data)\r\n          setLoading(false);\r\n          console.log(Drs.data);\r\n        })\r\n        .catch(err=>{\r\n          window.location.href=\"/error\"\r\n        })\r\n       \r\n        \r\n    },[])\r\n\r\n    const handleSearch=(e)=>{\r\n      const {name,value}=e.target;\r\n      setSearchInput(value);\r\n      const x=doctors.filter(i=>i.File_Number.startsWith(value));\r\n      x.length!==0?setSearch(x):setSearch(doctors)\r\n         }\r\n\r\n\r\n\r\n    return(\r\n        <Container style={{marginTop:'2em'}}>\r\n        {\r\n        \r\n            (loading)? \r\n            <Message icon style={{marginTop:\"20%\"}}>\r\n    <Icon name='circle notched' loading />\r\n    <Message.Content>\r\n      <Message.Header>Just one second</Message.Header>\r\n      We are fetching that content for you.\r\n    </Message.Content>\r\n  </Message>\r\n            :\r\n            <div>\r\n              <div>\r\n              <input type=\"search\" onChange={handleSearch} value={searchInput}\r\n              style={{\r\n                width:250,\r\n                height:35,\r\n                borderRadius:15,\r\n                borderWidth:1,\r\n                textAlign:\"center\",\r\n                marginLeft:\"40%\",\r\n                borderColor:\"#eee\",\r\n                outline:\"none\"\r\n              }}\r\n              placeholder=\"Search by Dr. ID \"\r\n              />\r\n              <Icon name=\"search\" size='big' />\r\n              </div>\r\n            <Table compact celled style={{fontSize:\"15px\"}} id=\"doctors\">\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell textAlign=\"center\">Archived</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">First name</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Last name</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Email</Table.HeaderCell>\r\n                <Table.HeaderCell />\r\n              </Table.Row>\r\n            </Table.Header>\r\n        \r\n            <Table.Body>\r\n                {\r\n                    search.map(d=>{\r\n                          return(\r\n\r\n                              <Table.Row  >  \r\n                                <Table.Cell>\r\n                                <Radio toggle\r\n                                  checked={d.Archived}\r\n                                onClick={async ()=>{\r\n                                  setLoading(true);\r\n                                  const archived=!d.Archived;\r\n                                  const data=axios.put(\"http://localhost:4000/doctors/update-archived/\"+d._id,{archived,d});\r\n                                  window.location.reload();\r\n                                  setLoading(false);\r\n                                }}\r\n                                />\r\n                                </Table.Cell>\r\n                               \r\n                                   <Table.Cell textAlign=\"center\">\r\n                                  <Link to={`/doctors/details/${d._id}`}>\r\n                                  {d.Fname}\r\n                                  </Link>\r\n                              </Table.Cell>\r\n                      \r\n                              <Table.Cell textAlign=\"center\">{d.Lname}</Table.Cell>\r\n                              <Table.Cell textAlign=\"center\">{d.Email}</Table.Cell>\r\n                              <Table.Cell collapsing>\r\n                                <Link to={`/doctors/update/${d._id}` }>\r\n                              <Button \r\n                              content=\"Update\" \r\n                              color=\"blue\"\r\n                              \r\n                              size='small'\r\n                              icon=\"redo\"\r\n                              />\r\n                              </Link>\r\n                              <Button\r\n                            content=\"Delete\" \r\n                            labelPosition='right'\r\n                            icon='trash'\r\n                            onClick={() =>{ \r\n                              setOpen(false)\r\n                              setLoading(true);\r\n                              console.log(d.fname);\r\n                              const req =axios.delete(`http://localhost:4000/doctors/${d._id}`);\r\n                              setLoading(false);\r\n                              window.location.reload();\r\n                            }}\r\n                            color=\"red\"\r\n                          />\r\n                             \r\n\r\n  \r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                            \r\n                          )\r\n                    })\r\n                   \r\n                }\r\n             \r\n            </Table.Body>\r\n        \r\n            <Table.Footer fullWidth>\r\n              <Table.Row>\r\n                <Table.HeaderCell colSpan='12'>\r\n                    <Link to='/doctors/create'>\r\n                  <Button\r\n                    floated='right'\r\n                    icon\r\n                    labelPosition='left'\r\n                    color=\"green\"\r\n                    size='small'\r\n                  >\r\n                    <Icon name='add' />\r\n                    Add Doctor\r\n                  </Button>\r\n                  </Link>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n          </Table>\r\n            <ReactToExcel \r\n            table=\"doctors\"\r\n            filename=\"Doctors Table\"\r\n            sheet=\"Sheet\"\r\n            buttonText=\"Export To Excel\"\r\n            className=\"ui primary button\"\r\n            />\r\n            </div>\r\n        }\r\n        \r\n        \r\n        </Container>\r\n        \r\n            \r\n    )\r\n            \r\n}\r\n   \r\n\r\n\r\nexport default Doctor;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Create.js",["389","390"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Divider, Form, Icon, Input } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport {Link,useHistory} from 'react-router-dom';\r\n//import { Helmet } from 'react-helmet';\r\n\r\nconst CREATE_DOCTOR = {\r\n  Fname: \"\",\r\n  Email: \"\",\r\n  phone_Number: \"\",\r\n  File_Number: 0,\r\n  Lname: \"\",\r\n  Mname: \"\",\r\n  Rank: \"\",\r\n  Contract_Type: \"\",\r\n};\r\nconst Create = () => {\r\n  const [create_doc, set_create_doc] = useState(CREATE_DOCTOR);\r\n  const [Loading,setLoading]=useState(false);\r\n  const history=useHistory();\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(e);\r\n    set_create_doc((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n     axios.post(\"http://localhost:4000/doctors/create\", create_doc)\r\n     .then(res=>{\r\n       window.location.href='/doctors';\r\n     })\r\n     .catch(err=>{\r\n       alert(\"File number already exists \");\r\n     })\r\n     setLoading(false);\r\n   \r\n     \r\n  };\r\n  return (\r\n   \r\n      <Container>\r\n        <Form onSubmit={handleSubmit} loading={Loading}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field value={CREATE_DOCTOR.Fname}>\r\n              <label>First Name</label>\r\n              <Input\r\n                required\r\n                placeholder=\"First Name\"\r\n                name=\"Fname\"\r\n                onChange={handleInput}\r\n\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Field value={CREATE_DOCTOR.Mname}>\r\n              <label> Middle Name</label>\r\n              <Input\r\n                required\r\n                name=\"Mname\"\r\n                onChange={handleInput}\r\n                placeholder=\"Middle Name\"\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Field value={CREATE_DOCTOR.Lname}>\r\n              <label>Last Name:</label>\r\n              <Input\r\n                required\r\n                placeholder=\"Last Name\"\r\n                name=\"Lname\"\r\n                onChange={handleInput}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Divider section/>\r\n          <Form.Group widths=\"3\">\r\n            <Form.Field value={CREATE_DOCTOR.Email}>\r\n              <label>Email</label>\r\n              <Input\r\n                required\r\n                type=\"email\"\r\n                control={Input}\r\n                placeholder=\"Email\"\r\n                name=\"Email\"\r\n                onChange={handleInput}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field value={CREATE_DOCTOR.phone_Number}>\r\n              <label>Phone Number</label>\r\n              <Input\r\n                required\r\n                align=\"center\"\r\n                width=\"4\"\r\n                placeholder=\"Phone Number\"\r\n                name=\"phone_Number\"\r\n                onChange={handleInput}\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Field value={CREATE_DOCTOR.File_Number}>\r\n              <label>File Number</label>\r\n              <Input\r\n                required\r\n                type=\"number\"\r\n                name=\"File_Number\"\r\n                onChange={handleInput}\r\n                width=\"4\"\r\n                placeholder=\"File Number\"\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Divider section/>\r\n          <Form.Group widths=\"equal\">\r\n           \r\n\r\n            <Form.Field value={CREATE_DOCTOR.Rank}>\r\n              <label>Rank</label>\r\n              \r\n                <select name=\"Rank\" onChange={handleInput}>\r\n                <option value=\"\" selected disabled hidden>Select Rank</option>\r\n                  <option value=\"Doctor\" >Doctor</option>\r\n                  <option value=\"Head of Department\" >Head of Department</option>\r\n                  <option value=\"Doctor Assistant\" >Doctor Assistant</option>\r\n                  </select>\r\n            </Form.Field>\r\n\r\n            <Form.Field value={CREATE_DOCTOR.Contract_Type}>\r\n              <label>Contract Type</label>\r\n            \r\n               <select name=\"Contract_Type\" onChange={handleInput}>\r\n               <option value=\"\" selected disabled hidden>Select contract type</option>\r\n                  <option value=\"Full Time\" >Full Time</option>\r\n                  <option value=\"Part Time\" >Part Time</option>\r\n                  <option value=\"Mallak\" >Mallak</option>\r\n                  </select>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Divider section/>\r\n          <Form.Field>\r\n            <Button color=\"green\" floated=\"right\">\r\n              <Icon name=\"add\"/>\r\n              Create Doctor</Button>\r\n          </Form.Field>\r\n        </Form>\r\n        <Link to=\"/doctors\">\r\n           <Button\r\n            content=\"Back\"\r\n             icon=\"arrow left\"\r\n             color=\"red\" \r\n             /></Link>\r\n      </Container>\r\n  );\r\n};\r\nexport default Create;\r\n","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Details.js",["391","392"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport { Container, Message, Table, Icon, Divider, Button } from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom'\r\nimport cookies from 'js-cookies';\r\n\r\nconst Details = () => {\r\n  const [doctor, setdoctor] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [Reg, setReg] = useState([]);\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const token=cookies.getItem(\"token\");\r\n    const payload={headers:{Authorization:token}};\r\n    axios.get('http://localhost:4000/doctors/details/' + id)\r\n    .then(Dr=>{\r\n      console.log(Dr.data.Reg);\r\n      let x = Dr.data.Reg.sort((a, b) => (a.Facility_year < b.Facility_year  ? 1 : -1));\r\n      setReg(x);\r\n      setdoctor(Dr.data.Doctor);\r\n      setLoading(false);\r\n    })\r\n    .catch(err=>{\r\n\r\n      window.location.href=\"/error\"\r\n    })\r\n  \r\n\r\n  }, []);\r\n  console.log(Reg);\r\n  return (\r\n    <Container >\r\n      {\r\n        (loading) ?\r\n          <Message icon style={{ marginTop: \"20%\" }}>\r\n            <Icon name='circle notched' loading />\r\n            <Message.Content>\r\n              <Message.Header>Just one second</Message.Header>\r\n                We are fetching that content for you.\r\n              </Message.Content>\r\n          </Message>\r\n          :\r\n          (\r\n            <Container fluid>\r\n              <Divider section horizontal>Info</Divider>\r\n            <Table    >\r\n            <Table.Header>\r\n              <Table.Row >\r\n\r\n                <Table.HeaderCell >First name</Table.HeaderCell>\r\n                <Table.HeaderCell >Middle name</Table.HeaderCell>\r\n                <Table.HeaderCell >Last name</Table.HeaderCell>\r\n                <Table.HeaderCell >File number</Table.HeaderCell>\r\n                <Table.HeaderCell >Email</Table.HeaderCell>\r\n                <Table.HeaderCell >Phone number</Table.HeaderCell>\r\n                <Table.HeaderCell >Rank</Table.HeaderCell>\r\n                <Table.HeaderCell >Contract type</Table.HeaderCell>\r\n\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n\r\n\r\n              <Table.Row>\r\n                <Table.Cell >{doctor.Fname}</Table.Cell>\r\n                <Table.Cell >{doctor.Mname}</Table.Cell>\r\n                <Table.Cell >{doctor.Lname}</Table.Cell>\r\n                <Table.Cell >{doctor.File_Number}</Table.Cell>\r\n                <Table.Cell >{doctor.Email}</Table.Cell>\r\n                <Table.Cell >{doctor.phone_Number}</Table.Cell>\r\n                <Table.Cell >{doctor.Rank}</Table.Cell>\r\n                <Table.Cell >{doctor.Contract_Type}</Table.Cell>\r\n\r\n              </Table.Row>\r\n\r\n\r\n\r\n\r\n            </Table.Body>\r\n\r\n\r\n          </Table>\r\n          <Divider horizontal section>Registrations</Divider>\r\n           <Table>\r\n           <Table.Header>\r\n             <Table.Row >\r\n   \r\n               <Table.HeaderCell >Course Code</Table.HeaderCell>\r\n               <Table.HeaderCell >Faculity year</Table.HeaderCell>\r\n               <Table.HeaderCell >Language</Table.HeaderCell>\r\n              \r\n               <Table.HeaderCell >Lab - Course - Exercise</Table.HeaderCell>\r\n               <Table.HeaderCell >Course hours</Table.HeaderCell>\r\n               <Table.HeaderCell >Exercise hours</Table.HeaderCell>\r\n               <Table.HeaderCell >Lab hours</Table.HeaderCell>\r\n               <Table.HeaderCell >Section ID</Table.HeaderCell>\r\n   \r\n             </Table.Row>\r\n           </Table.Header>\r\n   \r\n           <Table.Body>\r\n   \r\n             {\r\n               Reg.map((R) => {\r\n                 return (\r\n   \r\n                   <Table.Row>\r\n                     <Table.Cell textAlign=\"center\">{R.Course_Code}</Table.Cell>\r\n                     <Table.Cell textAlign=\"center\">{R.Facility_year}</Table.Cell>\r\n                     <Table.Cell textAlign=\"center\">{(R.EN_Section) ? (R.FR_Section) ? \"A & F\" : \"A\" :\r\n                       (R.FR_Section) ? \"F\" : null\r\n                     }</Table.Cell>\r\n                     <Table.Cell textAlign=\"center\" >{(R.Course) ? (R.Lab) ? (R.Exercise)? \"C+L+E\":\"C+L\" :(R.Exercise)? \"C+E\":\"C\" :\r\n                                                    (R.Lab) ? (R.Exercise)? \"L+E\":\"L\" :(R.Exercise)? \"E\":null\r\n                                                    }</Table.Cell>\r\n                   \r\n                     <Table.Cell textAlign=\"center\">{R.Course_hours}</Table.Cell>\r\n                     <Table.Cell textAlign=\"center\">{R.Exercise_hours}</Table.Cell>\r\n                     <Table.Cell textAlign=\"center\">{R.Lab_hours}</Table.Cell>\r\n                     <Table.Cell textAlign=\"center\">{R.Section_ID}</Table.Cell>\r\n                   </Table.Row>\r\n                 )\r\n               }\r\n              \r\n               )\r\n             }\r\n   \r\n   \r\n   \r\n   \r\n           </Table.Body>\r\n   \r\n         </Table>\r\n         <Link to=\"/doctors\">\r\n           <Button\r\n            content=\"Back\"\r\n             icon=\"arrow left\"\r\n             color=\"red\" \r\n              /></Link>\r\n         </Container>\r\n          )\r\n         \r\n      }\r\n    \r\n    </Container>\r\n    \r\n  );\r\n\r\n}\r\nexport default Details;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Course.js",[],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Update.js",["393"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport {  Button, Form, Input, Radio, Container ,Divider, Icon} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cookies from 'js-cookies'\r\n\r\nconst Update = () => {\r\n  var [crses, setcrses] = useState([]);\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    const token=cookies.getItem(\"token\");\r\n    const payload={headers:{Authorization:token}};\r\n     axios.get(\r\n      \"http://localhost:4000/courses/update/\" + id,payload\r\n    ).then(course=>{\r\n      setcrses(course.data);\r\n      crses = course.data;\r\n      console.log(course.data, crses);\r\n    })\r\n    .catch(err=>{\r\n      window.location.href=\"/error\";\r\n    })\r\n   \r\n  }, []);\r\n\r\n  const CREATE_COURSE = {\r\n    Course_code: crses.Course_code,\r\n    course_name: crses.course_name,\r\n    Total_Hours: crses.Total_Hours,\r\n    Description: crses.Description,\r\n    credits: crses.credits,\r\n    available: crses.available,\r\n    Semester_Nb: crses.Semester_Nb,\r\n    Course_Type: crses.Course_Type,\r\n    Course_hours: crses.Course_hours,\r\n    Lab_hours: crses.Lab_hours,\r\n    Exercise_hours: crses.Exercise_hours,\r\n  };\r\n  const [create_course, set_create_course] = useState(CREATE_COURSE);\r\n\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    set_create_course((prev) => ({ ...prev, [name]: value }));\r\n    console.log(create_course);\r\n  };\r\n  const handleSubmit = async () => {\r\n    const x = await axios.put(\r\n      \"http://localhost:4000/courses/update/\" + id,\r\n      create_course\r\n    );\r\n  \r\n    console.log(x);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form method=\"POST\" onSubmit={()=>{handleSubmit();  window.location.href=\"/courses\"}}>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field>\r\n            <label>Course Code</label>\r\n            <Input\r\n              required\r\n              placeholder={CREATE_COURSE.Course_code}\r\n              name=\"Course_code\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label> Course Name</label>\r\n            <Input\r\n              required\r\n              name=\"course_name\"\r\n              onChange={handleInput}\r\n              placeholder={CREATE_COURSE.course_name}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Total Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              placeholder={CREATE_COURSE.Total_Hours}\r\n              name=\"Total_Hours\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n         \r\n        </Form.Group>\r\n        <Divider section/>\r\n        <Form.Group widths=\"3\">\r\n        <Form.Field>\r\n            <label>Description</label>\r\n            <Input\r\n              required\r\n              placeholder={CREATE_COURSE.Description}\r\n              name=\"Description\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field value={CREATE_COURSE.available} >\r\n            <lable style={{marginLeft:\"50%\"}}>Available</lable>\r\n            <Radio\r\n              style={{marginLeft:\"50%\"}}\r\n              toggle\r\n              name=\"available\"\r\n              checked={create_course.available}\r\n              onChange={handleInput}\r\n              value={CREATE_COURSE.available}\r\n              onClick={() =>\r\n                (create_course.available = !create_course.available)\r\n              }\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n              <label>Credits</label>\r\n              <input\r\n                name=\"credits\"\r\n                placeholder={CREATE_COURSE.credits}\r\n                required\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"30\"\r\n                onChange={handleInput}\r\n              />\r\n            </Form.Field>\r\n\r\n        </Form.Group>\r\n        <Divider section/>\r\n          <Form.Group widths=\"equal\">\r\n            \r\n            <Form.Field>\r\n              <label>Semester Number</label>\r\n\r\n              <select\r\n                name=\"Semester_Nb\"\r\n                placeholder={create_course.Semester_Nb}\r\n                onChange={handleInput}\r\n              >\r\n                <option value=\"S1\">S1</option>\r\n                <option value=\"S2\">S2</option>\r\n                <option value=\"S3\">S3</option>\r\n                <option value=\"S4\">S4</option>\r\n                <option value=\"S5\">S5</option>\r\n                <option value=\"S6\">S6</option>\r\n                <option value=\"S7\">S7</option>\r\n                <option value=\"S8\">S8</option>\r\n              </select>\r\n            </Form.Field>\r\n\r\n            <Form.Field name=\"Course_Type\">\r\n              <label>Course Type</label>\r\n              <select\r\n                onChange={handleInput}\r\n                name=\"Course_Type\"\r\n                placeholder={create_course.Course_Type}\r\n              >\r\n                <option value=\"Obligatory\">Obligatory</option>\r\n                <option value=\"Elective\">Elective</option>\r\n              </select>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Divider section/>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field value={CREATE_COURSE.Course_hours}>\r\n            <label>Course Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              name=\"Course_hours\"\r\n              placeholder={CREATE_COURSE.Course_hours}\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Lab Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              placeholder={CREATE_COURSE.Lab_hours}\r\n              name=\"Lab_hours\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field value={CREATE_COURSE.Exercise_hours}>\r\n            <label>Exercise Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              placeholder={CREATE_COURSE.Exercise_hours}\r\n              name=\"Exercise_hours\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field>\r\n          <Button floated=\"right\"  color=\"green\">\r\n            <Icon name=\"redo\"/>\r\n            update</Button>\r\n        </Form.Field>\r\n      </Form>\r\n      <Link to=\"/courses\"><Button icon=\"left arrow\" content=\"Back\" color=\"red\" /></Link>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Details.js",["394","395","396"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport {Container,Message,Table,Icon,Divider} from 'semantic-ui-react'\r\nimport cookies from 'js-cookies';\r\n\r\nconst Details=()=> {\r\n    const [crses,setcrses]=useState([]);\r\n\r\n    const [Doctors,setDoctors]=useState([]);\r\n    const [Reg,setReg]=useState([]);\r\n    const [loading,setLoading]=useState(false);\r\n    const {id}=useParams();\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n       \r\n        const token=cookies.getItem(\"token\");\r\n        const payload={headers:{Authorization:token}};\r\n\r\n        axios.get('http://localhost:4000/courses/details/'+id,payload)\r\n        .then(req=>{\r\n          let x = req.data.Reg.sort((a, b) => (a.Facility_year < b.Facility_year  ? 1 : -1));\r\n          setDoctors(req.data.Doc)\r\n          setcrses(req.data.course);\r\n          setReg(x);\r\n          setLoading(false);\r\n        })\r\n       .catch(err=>{\r\n        \r\n        console.log(err);\r\n      })\r\n\r\n        \r\n    },[]);\r\n    \r\n\r\n    var name,contracttype,Rank;\r\n    const findDoctor=(Fnumber)=>{\r\n     \r\n        const data=Doctors.filter(i=>i.File_Number === Fnumber);\r\n        console.log(data)\r\n        name=data[0].Fname;\r\n        contracttype=data[0].Contract_Type;\r\n        Rank=data[0].Rank;\r\n    }\r\n  \r\nconsole.log(Reg)\r\n        return (\r\n            <Container>\r\n                 {\r\n            (loading)? \r\n            <Message icon style={{marginTop:\"20%\"}}>\r\n    <Icon name='circle notched' loading />\r\n    <Message.Content>\r\n      <Message.Header>Just one second</Message.Header>\r\n      We are fetching that content for you.\r\n    </Message.Content>\r\n  </Message>\r\n            :\r\n            <div>\r\n              <Divider horizontal content=\"INFO\"/>\r\n            <Table    >\r\n            <Table.Header>\r\n              <Table.Row >\r\n                  \r\n                <Table.HeaderCell >Code</Table.HeaderCell>\r\n                <Table.HeaderCell >Name</Table.HeaderCell>\r\n                <Table.HeaderCell >Credits</Table.HeaderCell>\r\n                <Table.HeaderCell >Type</Table.HeaderCell>\r\n                <Table.HeaderCell >Semester Nb</Table.HeaderCell>\r\n                <Table.HeaderCell >Total hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Course hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Exercise hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Lab hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Available</Table.HeaderCell>\r\n                <Table.HeaderCell >Description</Table.HeaderCell>\r\n                \r\n              </Table.Row>\r\n            </Table.Header>\r\n        \r\n            <Table.Body>\r\n                \r\n               \r\n                              <Table.Row>\r\n                              <Table.Cell>{crses.Course_code}</Table.Cell>\r\n                              <Table.Cell>{crses.course_name}</Table.Cell>\r\n                              <Table.Cell>{crses.credits}</Table.Cell>\r\n                              <Table.Cell>{crses.Course_Type}</Table.Cell>\r\n                              <Table.Cell>{crses.Semester_Nb}</Table.Cell>\r\n                              <Table.Cell>{crses.Total_Hours}</Table.Cell>\r\n                              <Table.Cell>{crses.Course_hours}</Table.Cell>\r\n                              <Table.Cell>{crses.Exercise_hours}</Table.Cell>\r\n                              <Table.Cell>{crses.Lab_hours}</Table.Cell>\r\n                              <Table.Cell>{crses.available?'true':'false'}</Table.Cell>\r\n                              <Table.Cell>{crses.Description}</Table.Cell>\r\n                             \r\n                            </Table.Row>\r\n                          \r\n                   \r\n                \r\n             \r\n            </Table.Body>\r\n        \r\n          \r\n          </Table>\r\n          <Divider horizontal content=\"Registrations\"/>\r\n          <Table celled>\r\n                <Table.Header>\r\n                    <Table.Row >\r\n    \r\n                        <Table.HeaderCell >Course Code</Table.HeaderCell>\r\n                        <Table.HeaderCell >Doctor name</Table.HeaderCell>\r\n                        <Table.HeaderCell >Faculity year</Table.HeaderCell>\r\n                        <Table.HeaderCell >Language</Table.HeaderCell>\r\n                        <Table.HeaderCell >Lab - Exercise - Course</Table.HeaderCell>\r\n                       \r\n                        <Table.HeaderCell >Lab_hours</Table.HeaderCell>\r\n                        <Table.HeaderCell >Exercise_hours</Table.HeaderCell>\r\n                        <Table.HeaderCell >Course_hours</Table.HeaderCell>\r\n                        <Table.HeaderCell >Section_ID</Table.HeaderCell>\r\n                        <Table.HeaderCell >Location</Table.HeaderCell>\r\n                  \r\n                    </Table.Row>\r\n                </Table.Header>\r\n    \r\n                <Table.Body>\r\n                    {\r\n                      \r\n                        Reg.map((i, index) => {\r\n                           findDoctor(i.DFile_number)\r\n                        \r\n                            return (\r\n                                \r\n                                <Table.Row>\r\n    \r\n                                    <Table.Cell >{i.Course_Code}</Table.Cell>\r\n                                    <Table.Cell >{name}</Table.Cell>\r\n                                    <Table.Cell >{i.Facility_year}</Table.Cell>\r\n                                    <Table.Cell >{i.Language}</Table.Cell>\r\n                                    <Table.Cell >{(i.Course) ? (i.Lab) ? (i.Exercise)? \"C+L+E\":\"C+L\" :(i.Exercise)? \"C+E\":\"C\" :\r\n                                                    (i.Lab) ? (i.Exercise)? \"L+E\":\"L\" :(i.Exercise)? \"E\":null\r\n                                                    }</Table.Cell>\r\n                                    \r\n                                    <Table.Cell >{i.Lab_hours}</Table.Cell>\r\n                                    <Table.Cell >{i.Exercise_hours}</Table.Cell>\r\n                                    <Table.Cell >{i.Course_hours}</Table.Cell>\r\n                                    <Table.Cell >{i.Section_ID}</Table.Cell>\r\n                                    <Table.Cell >{i.Location}</Table.Cell>\r\n                                  \r\n                                </Table.Row>\r\n                                \r\n                            )\r\n                        })\r\n    \r\n                    }\r\n    \r\n    \r\n                </Table.Body>\r\n                </Table>\r\n          </div>\r\n        }\r\n           </Container>\r\n        );\r\n    \r\n}\r\nexport default Details;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Distributions.js",["397","398"],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Create.js",["399","400","401","402","403","404","405","406","407"],"D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Distributions\\Distributions.js",["408","409"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Icon, Table ,Container,Message} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Distribution = () => {\r\n    const [distributions,setDistributions]=useState([]);\r\n    const[loading,setLoading]=useState(false);\r\n    useEffect(async ()=>{\r\n        setLoading(true)\r\n        const Ds=await axios.get('http://localhost:4000/distributions');\r\n        setDistributions(Ds.data);\r\n        setLoading(false);\r\n        console.log(Ds.data);\r\n        \r\n    },[])\r\n\r\n\r\n    return(\r\n        <Container style={{marginTop:'2em'}}>\r\n        {\r\n            (loading)? \r\n            <Message icon>\r\n    <Icon name='circle notched' loading />\r\n    <Message.Content>\r\n      <Message.Header>Just one second</Message.Header>\r\n      We are fetching that content for you.\r\n    </Message.Content>\r\n  </Message>\r\n            :\r\n            <Table compact celled style={{fontSize:\"15px\"}}>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell textAlign=\"center\">Distribution name</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Date</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Version</Table.HeaderCell>\r\n                <Table.HeaderCell />\r\n              </Table.Row>\r\n            </Table.Header>\r\n        \r\n            <Table.Body>\r\n                {\r\n                    distributions.map(d=>{\r\n                          return(\r\n                              <Table.Row>\r\n                                   <Table.Cell textAlign=\"center\">\r\n                                  <Link to={`/distributions/details/${d._id}`}>\r\n                                  {d.Name}\r\n                                  </Link>\r\n                              </Table.Cell>\r\n                              <Table.Cell textAlign=\"center\">{d.Date}</Table.Cell>\r\n                              <Table.Cell textAlign=\"center\">{(d.Version)? \"Final\":\"Not Complete\"}</Table.Cell>\r\n                              <Table.Cell collapsing>\r\n                                <Link to={`/distributions/update/${d._id}` }>\r\n                              <Button \r\n                              content=\"Update\" \r\n                              color=\"blue\"\r\n                              \r\n                              size='small'\r\n                              icon=\"redo\"\r\n                              />\r\n                              </Link>\r\n                              <Button\r\n                               content=\"Delete\" \r\n                               icon=\"trash\"\r\n                               color=\"red\"\r\n                               size='small'\r\n                               onClick={()=>{\r\n                                 setLoading(true);\r\n                                 const req =axios.delete('http://localhost:4000/distributions/'+d._id);\r\n                                 setLoading(false);\r\n                                 window.location.reload();\r\n                               }}\r\n                               />\r\n  \r\n  \r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                    })\r\n                   \r\n                }\r\n             \r\n            </Table.Body>\r\n        \r\n            <Table.Footer fullWidth>\r\n              <Table.Row>\r\n                <Table.HeaderCell colSpan='12'>\r\n                    <Link to='/doctors/create'>\r\n                  <Button\r\n                    floated='right'\r\n                    icon\r\n                    labelPosition='left'\r\n                    color=\"green\"\r\n                    size='small'\r\n                  >\r\n                    <Icon name='add' />\r\n                    Add Course \r\n                  </Button>\r\n                  </Link>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n          </Table>\r\n        }\r\n        \r\n        \r\n        </Container>\r\n        \r\n            \r\n    )\r\n            \r\n}\r\n   \r\n\r\n\r\nexport default Distribution;","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Distributions\\Create.js",["410","411","412","413","414","415","416"],"D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Distributions\\Details.js",["417","418"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport { Container, Message, Table, Icon } from 'semantic-ui-react'\r\n\r\nconst Details = () => {\r\n    const [Distributions, setDistributions] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const { id } = useParams();\r\n    useEffect(async () => {\r\n        setLoading(true);\r\n        const Ds = await axios.get('http://localhost:4000/distributions/details/' + id);\r\n        console.log(Ds.data.Registrations);\r\n        setDistributions(Ds.data.Registrations);\r\n        setLoading(false);\r\n        console.log(Ds.data.Registrations);\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                (loading) ?\r\n                    <Message icon style={{ marginTop: \"20%\" }}>\r\n                        <Icon name='circle notched' loading />\r\n                        <Message.Content>\r\n                            <Message.Header>Just one second</Message.Header>\r\n                            We are fetching that content for you.\r\n                            </Message.Content>\r\n                    </Message>\r\n                    :\r\n\r\n                            <Table    >\r\n                                <Table.Header>\r\n                                    <Table.Row >\r\n\r\n                                        <Table.HeaderCell >Course Code</Table.HeaderCell>\r\n                                        <Table.HeaderCell >DFile number</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Facility year</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Section</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Lab</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Exercise</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Course</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Lab_hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Exercise_hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Course_hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Section_ID</Table.HeaderCell>\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n\r\n                                <Table.Body>\r\n                                    {\r\n                                        Distributions.map(i => {\r\n                                            return (\r\n                                                <Table.Row>\r\n\r\n                                                    <Table.Cell >{i.Course_Code}</Table.Cell>\r\n                                                    <Table.Cell >{i.DFile_number}</Table.Cell>\r\n                                                    <Table.Cell >{i.Facility_year}</Table.Cell>\r\n                                                    <Table.Cell >{i.Section_ID}</Table.Cell>\r\n                                                    <Table.Cell >{(i.Lab)?<Icon name=\"check\" color=\"green\"/>:<Icon name=\"cancel\" color=\"red\"/>}</Table.Cell>\r\n                                                    <Table.Cell >{i.Exercise ?<Icon name=\"check\" color=\"green\"/>:<Icon name=\"cancel\" color=\"red\"/>}</Table.Cell>\r\n                                                    <Table.Cell >{i.Course ?<Icon name=\"check\" color=\"green\"/>:<Icon name=\"cancel\" color=\"red\"/>}</Table.Cell>\r\n                                                    <Table.Cell >{i.Lab_hours}</Table.Cell>\r\n                                                    <Table.Cell >{i.Exercise_hours}</Table.Cell>\r\n                                                    <Table.Cell >{i.Course_hours}</Table.Cell>\r\n                                                    <Table.Cell >{i.Section_ID}</Table.Cell>\r\n\r\n                                                </Table.Row>\r\n                                            )\r\n                                        })\r\n\r\n                                    }\r\n\r\n\r\n\r\n\r\n                                </Table.Body>\r\n\r\n\r\n                            </Table>\r\n                    \r\n                    \r\n            }\r\n\r\n        </Container>\r\n    );\r\n\r\n}\r\nexport default Details;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Details.js",["419","420","421","422","423"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport { Container, Message, Table, Icon ,Divider} from 'semantic-ui-react'\r\nimport ReactToExcel from 'react-html-table-to-excel';\r\nimport cookies from 'js-cookies';\r\n\r\n\r\n\r\nconst Details = () => {\r\n    const [Distributions, setDistributions] = useState([]);\r\n    const [Distributions2, setDistributions2] = useState([]);\r\n    const [Courses, setCourses] = useState([]);\r\n    const [Doctors, setDoctors] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const token=cookies.getItem(\"token\");\r\n        console.log(\"my token : \"+token);\r\n        const payload={headers:{Authorization:token}};\r\n        axios.get('http://localhost:4000/distributions/details/' + id,payload)\r\n        .then(Ds=>{\r\n            const myData = [].concat(Ds.data.Dist.Registrations)\r\n            .sort((a, b) => a.Course_Code  > b.Course_Code  ? 1 : -1);\r\n            const myData2 = [].concat(Ds.data.Dist.Registrations)\r\n            .sort((a, b) => a.DFile_number  > b.DFile_number  ? 1 : -1);\r\n\r\n         \r\n            setDistributions(myData);         \r\n            setDistributions2(myData2);\r\n            setDoctors(Ds.data.Drs);\r\n            setCourses(Ds.data.Crs);\r\n            setLoading(false);\r\n           \r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n            window.location.href=\"/error\"\r\n        })\r\n      \r\n    }, []);\r\n    var name,SemesterNb,coursename,contracttype,courseTotalhours=0,hourstaken=0,emptyhours=0,Rank;\r\n    \r\n    const findDoctor=(Fnumber)=>{\r\n        const data=Doctors.filter(i=>i.File_Number === Fnumber);\r\n        console.log(data[0].Fname)\r\n        name=data[0].Fname;\r\n        contracttype=data[0].Contract_Type;\r\n        Rank=data[0].Rank;\r\n    }\r\n\r\n    const findCourse=(code)=>{\r\n        courseTotalhours=0\r\n        const data=Courses.filter(i=>i.Course_code === code);\r\n        const data2=Distributions.filter(i=>i.Course_Code === code);\r\n        SemesterNb=data[0].Semester_Nb;\r\n        coursename=data[0].course_name;\r\n        data2.map(i=>{\r\n            courseTotalhours+=i.Course_hours+i.Lab_hours+i.Exercise_hours;\r\n        })\r\n       \r\n    }\r\n    // const findhours=(code)=>{\r\n    //     hourstaken=0;\r\n    //     const data=Distributions.filter(i=>i.Course_Code === code);\r\n    //     data.map(i=>{\r\n    //         hourstaken+=i.Lab_hours + i.Course_hours+i.Exercise_hours;\r\n    //     })\r\n    //     emptyhours=courseTotalhours-hourstaken;\r\n       \r\n\r\n    // }\r\n    var Teachinghouurs=0;\r\n    const  findteachinghours=(Fnb)=>{\r\n        Teachinghouurs=0\r\n        const data=Distributions.filter(i=>i.DFile_number === Fnb);\r\n        data.map(i=>{\r\n            Teachinghouurs+=i.Lab_hours + i.Course_hours+i.Exercise_hours;\r\n        })\r\n       \r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                (loading) ?\r\n                    <Message icon style={{ marginTop: \"20%\" }}>\r\n                        <Icon name='circle notched' loading />\r\n                        <Message.Content>\r\n                            <Message.Header>Just one second</Message.Header>\r\n                            We are fetching that content for you.\r\n                            </Message.Content>\r\n                    </Message>\r\n                    :\r\n                            <div>\r\n                                <Divider section horizontal >By Courses</Divider>\r\n                            <Table  id=\"distribution-details-table\">\r\n                                <Table.Header>\r\n                                    <Table.Row >\r\n\r\n                                        <Table.HeaderCell >Course Code</Table.HeaderCell>\r\n                                       \r\n                                        <Table.HeaderCell >Semester Number</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Course Name</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Lab_hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Exercise_hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Course_hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Language</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Section_ID</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Doctor Name</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Contract Type</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Total hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Location</Table.HeaderCell>\r\n\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n\r\n                                <Table.Body>\r\n                                    {\r\n                                        Distributions.map((i,index) => {\r\n                                            findDoctor(i.DFile_number);\r\n                                            findCourse(i.Course_Code);\r\n                                            //findhours(i.Course_Code)\r\n                                            return (\r\n                                                <Table.Row>\r\n\r\n                                                    <Table.Cell >{i.Course_Code}</Table.Cell>\r\n                                                    \r\n                                                    <Table.Cell >\r\n                                                    { SemesterNb }\r\n                                                    </Table.Cell>\r\n                                                    <Table.Cell >{coursename}</Table.Cell>\r\n                                                    <Table.Cell >{i.Lab_hours}</Table.Cell>\r\n                                                    <Table.Cell >{i.Exercise_hours}</Table.Cell>\r\n                                                    <Table.Cell >{i.Course_hours}</Table.Cell>\r\n                                                    <Table.Cell >{i.Language}</Table.Cell>\r\n                                                    <Table.Cell >{i.Section_ID}</Table.Cell>\r\n                                                    <Table.Cell >{name}</Table.Cell>\r\n                                                    <Table.Cell >{contracttype}</Table.Cell>\r\n                                                    <Table.Cell >{courseTotalhours}</Table.Cell>\r\n                                                    <Table.Cell >{ i.Location}</Table.Cell>\r\n\r\n                                                </Table.Row>\r\n                                            )\r\n                                        })\r\n\r\n                                    }\r\n\r\n\r\n\r\n\r\n                                </Table.Body>\r\n\r\n\r\n                            </Table>\r\n                            <ReactToExcel \r\n                            table=\"distribution-details-table\"\r\n                            filename=\"Distribution details \"\r\n                            sheet=\"Sheet\"\r\n                            buttonText=\"Export To Excel\"\r\n                            className=\"ui primary button\"\r\n                            />\r\n\r\n\r\n                            <Divider section horizontal>By Doctors</Divider>\r\n                            <Table  id=\"distribution2-details-table\">\r\n                                <Table.Header>\r\n                                    <Table.Row >\r\n\r\n                                        <Table.HeaderCell >Doctor Name</Table.HeaderCell>\r\n                                       \r\n                                        <Table.HeaderCell >Rank</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Contract Type</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Course name</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Semester Nb</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Course Code</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Lab - Course -Exercise</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Teaching Hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Language</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Total hours</Table.HeaderCell>\r\n\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n\r\n                                <Table.Body>\r\n                                    {\r\n                                        Distributions2.map((i,index) => {\r\n                                            findDoctor(i.DFile_number);\r\n                                            findCourse(i.Course_Code);\r\n                                            findteachinghours(i.DFile_number)\r\n                                            var h=i.Exercise_hours+i.Lab_hours+i.Course_hours;\r\n                                            return (\r\n                                                <Table.Row>\r\n\r\n                                                    <Table.Cell >{name}</Table.Cell>\r\n                                                    \r\n                                                    <Table.Cell >\r\n                                                    { Rank }\r\n                                                    </Table.Cell>\r\n                                                    <Table.Cell >{contracttype}</Table.Cell>\r\n                                                    <Table.Cell >{coursename}</Table.Cell>\r\n                                                    <Table.Cell >{SemesterNb}</Table.Cell>\r\n                                                    <Table.Cell >{i.Course_Code}</Table.Cell>\r\n\r\n\r\n\r\n                                                    <Table.Cell>{(i.Course) ? (i.Lab) ? (i.Exercise)? \"C+L+E\":\"C+L\" :(i.Exercise)? \"C+E\":\"C\" :\r\n                                                    (i.Lab) ? (i.Exercise)? \"L+E\":\"L\" :(i.Exercise)? \"E\":null\r\n                                                    }</Table.Cell>\r\n\r\n                                                    <Table.Cell >{h}</Table.Cell>\r\n\r\n                                                    <Table.Cell >{i.Language}</Table.Cell>\r\n                                                   \r\n                                                    <Table.Cell >{ Teachinghouurs}</Table.Cell>\r\n\r\n                                                </Table.Row>\r\n                                            )\r\n                                        })\r\n\r\n                                    }\r\n\r\n\r\n\r\n\r\n                                </Table.Body>\r\n\r\n\r\n                            </Table>\r\n                            <ReactToExcel \r\n                            table=\"distribution2-details-table\"\r\n                            filename=\"Distribution details \"\r\n                            sheet=\"Sheet\"\r\n                            buttonText=\"Export To Excel\"\r\n                            className=\"ui primary button\"\r\n                            />\r\n                            </div>\r\n                    \r\n                    \r\n            }\r\n           \r\n\r\n        </Container>\r\n    );\r\n\r\n}\r\nexport default Details;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\Registrations.js",["424","425","426","427"],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\Create.js",["428","429","430","431","432"],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\update.js",["433","434","435"],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\Update.js",["436","437","438","439","440"],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Update.js",["441","442","443","444","445","446","447","448"],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Signup.js",["449","450","451"],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Form, Icon, Message, Segment,Container } from 'semantic-ui-react'\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport cookie from 'js-cookies';\r\n\r\nconst INITIAL_USER={\r\n    Fname:\"\",\r\n    Email:\"\",\r\n    phone_Number:\"\",\r\n    File_Number:\"\",\r\n    Lname:\"\",\r\n    Mname:\"\",\r\n    Rank:\"\",\r\n    Contract_Type:\"\",\r\n    Email:\"\",\r\n    password:\"\"\r\n  }\r\nconst Signup = () => {\r\n               \r\n  const [user,setUser]=useState(INITIAL_USER);\r\n  const [disabled,setDisabled]=useState(false);\r\n  const [Loading,setLoading]=useState(false);\r\n\r\n  useEffect(()=>{\r\n    const isuser=Object.values(user).every(el=>Boolean(el));\r\n    isuser?setDisabled(false) : setDisabled(true);\r\n  });\r\n  \r\n  const handleChange=(e)=>{\r\n    const {name,value}=e.target;\r\n    setUser(prevstate=>({...prevstate,[name]:value}))\r\n    console.log(user);\r\n  }\r\n  const handlelogin=(token)=>{\r\n    cookie.setItem('token',token);\r\n    window.location.href=\"/distributions\"\r\n    }\r\n\r\n  const handleSubmit=async(e)=>{\r\n      e.preventDefault();\r\n    try{\r\n        setLoading(true);\r\n        const payload={...user}\r\n        const res=await axios.post( \"http://localhost:4000/signup\",payload);\r\n        console.log(res.data);\r\n        handlelogin(res.data)\r\n      }catch(err){\r\n      console.log(err)\r\n    }\r\n    finally{\r\n      setLoading(false); \r\n    }\r\n  }\r\n\r\n    return (\r\n        <Container text>\r\n    <Message \r\n    attached\r\n    header=\"Get Started !\"\r\n    icon=\"settings\"\r\n    content=\"Create a new account\"\r\n    color=\"teal\"\r\n    />\r\n    <Form onSubmit={handleSubmit} loading={Loading}>\r\n      <Segment>\r\n        <Form.Input \r\n        fluid\r\n        icon=\"user\"\r\n        iconPosition=\"left\"\r\n        label=\"First name\"\r\n        placeholder=\"Name\"\r\n        name=\"Fname\"\r\n        onChange={handleChange}\r\n        value={user.Fname}\r\n        />\r\n       \r\n            <Form.Input \r\n        fluid\r\n        icon=\"user\"\r\n        iconPosition=\"left\"\r\n        label=\"Middle name\"\r\n        placeholder=\"Middle name\"\r\n        name=\"Mname\"\r\n        onChange={handleChange}\r\n        value={user.Mname}\r\n        />\r\n            <Form.Input \r\n        fluid\r\n        icon=\"user\"\r\n        iconPosition=\"left\"\r\n        label=\"Last name\"\r\n        placeholder=\"Name\"\r\n        name=\"Lname\"\r\n        onChange={handleChange}\r\n        value={user.Lname}\r\n        />\r\n            <Form.Input \r\n        fluid\r\n        icon=\"user\"\r\n        iconPosition=\"left\"\r\n        label=\"Name\"\r\n        placeholder=\"Phone\"\r\n        name=\"phone_Number\"\r\n        onChange={handleChange}\r\n        value={user.phone_Number}\r\n        />\r\n            <Form.Input \r\n        fluid\r\n        icon=\"user\"\r\n        iconPosition=\"left\"\r\n        label=\"File Number\"\r\n        placeholder=\"File Number\"\r\n        name=\"File_Number\"\r\n        onChange={handleChange}\r\n        value={user.File_Number}\r\n        />\r\n            <Form.Input \r\n        fluid\r\n        icon=\"user\"\r\n        iconPosition=\"left\"\r\n        label=\"Rank\"\r\n        placeholder=\"Rank\"\r\n        name=\"Rank\"\r\n        onChange={handleChange}\r\n        value={user.Rank}\r\n        />\r\n            <Form.Input \r\n        fluid\r\n        icon=\"user\"\r\n        iconPosition=\"left\"\r\n        label=\"Contract Type\"\r\n        placeholder=\"Contract Type\"\r\n        name=\"Contract_Type\"\r\n        onChange={handleChange}\r\n        value={user.Contract_Type}\r\n        />\r\n       \r\n         <Form.Input \r\n        fluid\r\n        icon=\"envelope\"\r\n        iconPosition=\"left\"\r\n        label=\"Email\"\r\n        placeholder=\"Email\"\r\n        type=\"email\"\r\n        name=\"Email\"\r\n        onChange={handleChange}\r\n        value={user.Email}\r\n        />\r\n        <Form.Input \r\n        fluid\r\n        type=\"password\"\r\n        icon=\"lock\"\r\n        iconPosition=\"left\"\r\n        label=\"Password\"\r\n        placeholder=\"Password\"\r\n        name=\"password\"\r\n        onChange={handleChange}\r\n        value={user.password}\r\n        />\r\n         <Button\r\n        icon=\"signup\"\r\n        type=\"submit\"\r\n        color=\"orange\"\r\n        content=\"Signup\"\r\n        disabled={disabled || Loading}\r\n        />\r\n      </Segment>\r\n    </Form>\r\n    <Message attached=\"bottom\" warning>\r\n      <Icon name=\"help\"/>\r\n      Existing user?{\" \"}\r\n      <Link href=\"/login\">\r\n        <a>Log in here</a>\r\n      </Link>{\" \"}instead\r\n    </Message>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Signup;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Login.js",["452","453","454"],"\r\nimport {Icon} from 'semantic-ui-react'\r\nimport  { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport cookie from \"js-cookies\"\r\nimport React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst INITIAL_USER={\r\n  Email:\"\",\r\n  password:\"\"\r\n}\r\nconst Login = () => {\r\n  const [user,setUser]=useState(INITIAL_USER);\r\n      const [disabled,setDisabled]=useState(false);\r\n      useEffect(()=>{\r\n        const isuser=Object.values(user).every(el=>Boolean(el));\r\n        isuser?setDisabled(false) : setDisabled(true);\r\n      });\r\n      const [Loading,setLoading]=useState(false);\r\n      const handleChange=(e)=>{\r\n        const {name,value}=e.target;\r\n        setUser(prevstate=>({...prevstate,[name]:value}))\r\n        console.log(user);\r\n      }\r\n  \r\n      const handlelogin=(token)=>{\r\n          cookie.setItem('token',token);\r\n          window.location.href=\"/distributions\"\r\n          }\r\n  \r\n      const handleSubmit=async(e)=>{\r\n          e.preventDefault();\r\n        try{\r\n            setLoading(true);\r\n            const payload={...user};\r\n            const res=await axios.post(\"http://localhost:4000/\",payload);\r\n            handlelogin(res.data);\r\n            setLoading(false)\r\n        }catch(err){\r\n          alert(\"Please enter a valid account !!\")\r\n          setLoading(false)\r\n        }\r\n      }\r\n    \r\n    function Copyright() {\r\n        return (\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link target=\"_blank\" color=\"inherit\" href=\"https://www.ul.edu.lb/faculte/faculties.aspx\">\r\n                Lebanese University \r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n            </Typography>\r\n        );\r\n    }\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            height: '100vh',\r\n        },\r\n        image: {\r\n            backgroundImage: 'url(https://media-exp1.licdn.com/dms/image/C561BAQGPwXzf4VJ3FQ/company-background_10000/0/1567058449070?e=2159024400&v=beta&t=cTkNrc_5eOxk98-FeX5tdVkgA5p1aP-hGIhwQL8TuIo)',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundColor:theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n        },\r\n        paper: {\r\n            margin: theme.spacing(8, 4),\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n        avatar: {\r\n            margin: theme.spacing(1),\r\n            backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n            width: '100%', // Fix IE 11 issue.\r\n            marginTop: theme.spacing(1),\r\n        },\r\n        submit: {\r\n            margin: theme.spacing(3, 0, 2),\r\n        },\r\n    }));\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n    return (  \r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n            <h1>Emial: Admin@gmail.com</h1>\r\n            <h1>Password : 03234376x</h1>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                       <Icon name=\"lock\" />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"Email\"\r\n                            onChange={handleChange}\r\n                              value={user.Email}\r\n                            autoComplete=\"email\"\r\n                        autoFocus\r\n                        />    \r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                             onChange={handleChange}\r\n                           value={user.password}\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                       \r\n                        <Button\r\n                            type=\"submit\"\r\n                            onClick={handleSubmit} loading={Loading}\r\n                            disabled={disabled || Loading}\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                      \r\n                        <Box mt={5}>\r\n                            <Copyright />\r\n                        </Box>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n      </Grid>\r\n\r\n\r\n    );\r\n}\r\n \r\nexport default Login;\r\n","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Error.js",[],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\index.js",[],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\App.js",[],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Error.js",[],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Signup.js",["455","456","457"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Navbar.js",["458"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Login.js",["459","460","461"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Registrations\\Registrations.js",["462","463"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Registrations\\Create.js",["464","465","466","467"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Create.js",["468","469"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Doctors.js",["470","471","472","473","474"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Create.js",["475"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Course.js",["476","477","478","479","480"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Registrations\\Update.js",["481","482","483"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Update.js",["484"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Details.js",["485","486"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Update.js",["487"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Distributions.js",["488","489","490","491","492","493","494"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Details.js",["495","496"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Update.js",["497","498","499","500","501"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Details.js",["502","503","504"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Create.js",["505","506","507","508","509"],"C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\index.js",[],["510","511"],"C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\App.js",[],"C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Navbar.js",["512"],"import React, { useEffect } from 'react'\nimport {Menu,Icon} from 'semantic-ui-react'\nimport {Link, useLocation} from 'react-router-dom'\nimport cookie from 'js-cookies';\n\nconst Navbar=()=>{\n const Location=useLocation();\n  const isactive=(url)=>{\n    if(Location.pathname.startsWith(url))\n      return true;\n    else\n      return false\n  }\n \n    return(\n    \n        \n      <Menu pointing inverted stackable >\n          <Link to='/courses'>\n      <Menu.Item\n        name='Courses'\n        active={isactive('/courses')}\n        \n      >\n         <Icon color=\"red\" size=\"large\" name=\"book\"/>\n      Courses\n        </Menu.Item>\n      </Link>\n        <Link to='/doctors'>\n      <Menu.Item\n        name='Doctors'\n        active={isactive('/doctors')}\n        \n      >\n      <Icon color=\"red\" size=\"large\" name=\"users\"/>\n      Doctors\n      </Menu.Item>\n      </Link>\n      <Link to='/registrations'>\n      <Menu.Item\n        name='Course assignments'\n        active={isactive('/registrations')}\n       \n      >\n         <Icon color=\"red\" size=\"large\" name=\"book\"/>\n         Course assigmnets\n        </Menu.Item>\n\n      </Link>\n      <Link to='/distributions'>\n      <Menu.Item\n        name='Distributions'\n        active={isactive('/distributions')}\n        \n      >\n         <Icon color=\"red\" size=\"large\" name=\"list\"/>\n          Distributions\n        </Menu.Item>\n      </Link>\n    \n     \n      <Menu.Menu position='right'>\n      <Link to=\"/logout\">\n        <Menu.Item\n          name='logout'\n          active={isactive('/logout')}\n          onClick={()=>{\n              cookie.removeItem('token');\n              window.location.href=\"/\";  \n        }}\n        />\n        </Link>\n      </Menu.Menu>\n     \n    </Menu>\n\n   \n    \n    )\n}\nexport default Navbar;","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Signup.js",["513","514","515"],"import React, { useEffect, useState } from 'react'\nimport { Button, Form, Icon, Message, Segment,Container } from 'semantic-ui-react'\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport cookie from 'js-cookies';\n\nconst INITIAL_USER={\n    Fname:\"\",\n    Email:\"\",\n    phone_Number:\"\",\n    File_Number:\"\",\n    Lname:\"\",\n    Mname:\"\",\n    Rank:\"\",\n    Contract_Type:\"\",\n    Email:\"\",\n    password:\"\"\n  }\nconst Signup = () => {\n               \n  const [user,setUser]=useState(INITIAL_USER);\n  const [disabled,setDisabled]=useState(false);\n  const [Loading,setLoading]=useState(false);\n\n  useEffect(()=>{\n    const isuser=Object.values(user).every(el=>Boolean(el));\n    isuser?setDisabled(false) : setDisabled(true);\n  });\n  \n  const handleChange=(e)=>{\n    const {name,value}=e.target;\n    setUser(prevstate=>({...prevstate,[name]:value}))\n    console.log(user);\n  }\n  const handlelogin=(token)=>{\n    cookie.setItem('token',token);\n    window.location.href=\"/distributions\"\n    }\n\n  const handleSubmit=async(e)=>{\n      e.preventDefault();\n    try{\n        setLoading(true);\n        const payload={...user}\n        const res=await axios.post( \"http://localhost:4000/signup\",payload);\n        console.log(res.data);\n        handlelogin(res.data)\n      }catch(err){\n      console.log(err)\n    }\n    finally{\n      setLoading(false); \n    }\n  }\n\n    return (\n        <Container text>\n    <Message \n    attached\n    header=\"Get Started !\"\n    icon=\"settings\"\n    content=\"Create a new account\"\n    color=\"teal\"\n    />\n    <Form onSubmit={handleSubmit} loading={Loading}>\n      <Segment>\n        <Form.Input \n        fluid\n        icon=\"user\"\n        iconPosition=\"left\"\n        label=\"First name\"\n        placeholder=\"Name\"\n        name=\"Fname\"\n        onChange={handleChange}\n        value={user.Fname}\n        />\n       \n            <Form.Input \n        fluid\n        icon=\"user\"\n        iconPosition=\"left\"\n        label=\"Middle name\"\n        placeholder=\"Middle name\"\n        name=\"Mname\"\n        onChange={handleChange}\n        value={user.Mname}\n        />\n            <Form.Input \n        fluid\n        icon=\"user\"\n        iconPosition=\"left\"\n        label=\"Last name\"\n        placeholder=\"Name\"\n        name=\"Lname\"\n        onChange={handleChange}\n        value={user.Lname}\n        />\n            <Form.Input \n        fluid\n        icon=\"user\"\n        iconPosition=\"left\"\n        label=\"Name\"\n        placeholder=\"Phone\"\n        name=\"phone_Number\"\n        onChange={handleChange}\n        value={user.phone_Number}\n        />\n            <Form.Input \n        fluid\n        icon=\"user\"\n        iconPosition=\"left\"\n        label=\"File Number\"\n        placeholder=\"File Number\"\n        name=\"File_Number\"\n        onChange={handleChange}\n        value={user.File_Number}\n        />\n            <Form.Input \n        fluid\n        icon=\"user\"\n        iconPosition=\"left\"\n        label=\"Rank\"\n        placeholder=\"Rank\"\n        name=\"Rank\"\n        onChange={handleChange}\n        value={user.Rank}\n        />\n            <Form.Input \n        fluid\n        icon=\"user\"\n        iconPosition=\"left\"\n        label=\"Contract Type\"\n        placeholder=\"Contract Type\"\n        name=\"Contract_Type\"\n        onChange={handleChange}\n        value={user.Contract_Type}\n        />\n       \n         <Form.Input \n        fluid\n        icon=\"envelope\"\n        iconPosition=\"left\"\n        label=\"Email\"\n        placeholder=\"Email\"\n        type=\"email\"\n        name=\"Email\"\n        onChange={handleChange}\n        value={user.Email}\n        />\n        <Form.Input \n        fluid\n        type=\"password\"\n        icon=\"lock\"\n        iconPosition=\"left\"\n        label=\"Password\"\n        placeholder=\"Password\"\n        name=\"password\"\n        onChange={handleChange}\n        value={user.password}\n        />\n         <Button\n        icon=\"signup\"\n        type=\"submit\"\n        color=\"orange\"\n        content=\"Signup\"\n        disabled={disabled || Loading}\n        />\n      </Segment>\n    </Form>\n    <Message attached=\"bottom\" warning>\n      <Icon name=\"help\"/>\n      Existing user?{\" \"}\n      <Link href=\"/login\">\n        <a>Log in here</a>\n      </Link>{\" \"}instead\n    </Message>\n        </Container>\n    );\n};\n\nexport default Signup;","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Error.js",[],"C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Login.js",["516","517","518"],"\nimport {Icon} from 'semantic-ui-react'\nimport  { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport cookie from \"js-cookies\"\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst INITIAL_USER={\n  Email:\"\",\n  password:\"\"\n}\nconst Login = () => {\n  const [user,setUser]=useState(INITIAL_USER);\n      const [disabled,setDisabled]=useState(false);\n      useEffect(()=>{\n        const isuser=Object.values(user).every(el=>Boolean(el));\n        isuser?setDisabled(false) : setDisabled(true);\n      });\n      const [Loading,setLoading]=useState(false);\n      const handleChange=(e)=>{\n        const {name,value}=e.target;\n        setUser(prevstate=>({...prevstate,[name]:value}))\n        console.log(user);\n      }\n  \n      const handlelogin=(token)=>{\n          cookie.setItem('token',token);\n          window.location.href=\"/distributions\"\n          }\n  \n      const handleSubmit=async(e)=>{\n          e.preventDefault();\n        try{\n            setLoading(true);\n            const payload={...user};\n            const res=await axios.post(\"http://localhost:4000/\",payload);\n            handlelogin(res.data);\n            setLoading(false)\n        }catch(err){\n          alert(\"Please enter a valid account !!\")\n          setLoading(false)\n        }\n      }\n    \n    function Copyright() {\n        return (\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link target=\"_blank\" color=\"inherit\" href=\"https://www.ul.edu.lb/faculte/faculties.aspx\">\n                Lebanese University \n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n            </Typography>\n        );\n    }\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            height: '100vh',\n        },\n        image: {\n            backgroundImage: 'url(https://media-exp1.licdn.com/dms/image/C561BAQGPwXzf4VJ3FQ/company-background_10000/0/1567058449070?e=2159024400&v=beta&t=cTkNrc_5eOxk98-FeX5tdVkgA5p1aP-hGIhwQL8TuIo)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor:theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n        },\n        paper: {\n            margin: theme.spacing(8, 4),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n        avatar: {\n            margin: theme.spacing(1),\n            backgroundColor: theme.palette.secondary.main,\n        },\n        form: {\n            width: '100%', // Fix IE 11 issue.\n            marginTop: theme.spacing(1),\n        },\n        submit: {\n            margin: theme.spacing(3, 0, 2),\n        },\n    }));\n\n\n    const classes = useStyles();\n\n\n\n\n    return (  \n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n            <h1>Emial: Admin@gmail.com</h1>\n            <h1>Password : 03234376x</h1>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                       <Icon name=\"lock\" />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <form className={classes.form} noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"Email\"\n                            onChange={handleChange}\n                              value={user.Email}\n                            autoComplete=\"email\"\n                        autoFocus\n                        />    \n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                             onChange={handleChange}\n                           value={user.password}\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                       \n                        <Button\n                            type=\"submit\"\n                            onClick={handleSubmit} loading={Loading}\n                            disabled={disabled || Loading}\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n                        </Button>\n                      \n                        <Box mt={5}>\n                            <Copyright />\n                        </Box>\n                    </form>\n                </div>\n            </Grid>\n      </Grid>\n\n\n    );\n}\n \nexport default Login;\n","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Registrations\\Registrations.js",["519","520","521","522"],"import React, { useEffect, useState } from 'react';\nimport { Container ,Table,Button,Icon,Message, TableFooter} from 'semantic-ui-react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport cookies from 'js-cookies'\n\nconst Registrations = () => {\n    const [Reg,setReg]=useState([]);\n    const [Loading,setLoading]=useState(false);\n    const [Doctors, setDoctors] = useState([]);\n    const [allCrs,  setAllCrs] = useState([]);\n    const [search,setSearch]=useState([]);\n    const year=new Date().getFullYear();\n    const temp=parseInt(year)+1;\n    const [searchInput,setSearchInput]=useState(year+\"-\"+temp);\n    useEffect(()=>{\n        setLoading(true);\n        const token=cookies.getItem(\"token\");\n        const payload={headers:{Authorization:token}};\n        axios.get(\"http://localhost:4000/distributions/create\",payload)\n        .then((req)=>{\n          const myData = [].concat(req.data.Reg)\n          .sort((a, b) => a.Facility_year  < b.Facility_year  ? 1 : -1);\n          setReg(myData);\n          setDoctors(req.data.Doc);\n          setSearch(prev=>(myData.filter(i=>i.Facility_year.startsWith(searchInput))))\n          setLoading(false);\n        })\n        .catch(err=>{\n          console.log(err);\n          window.location.href=\"/error\"\n        })\n         axios.get(\"http://localhost:4000/registrations\",payload)\n    .then(data=>{\n      setAllCrs(data.data.Cs);\n    })\n    .catch(err=>{\n      window.location.href=\"/error\"\n    })\n       \n    },[]);\n    var Dname;\n    const findDoctor=(Fnumber)=>{\n      const data=Doctors.filter(i=>i.File_Number === Fnumber);\n      console.log(data[0].Fname)\n      Dname=data[0].Fname;\n    \n  }\n\n  const handleSearch=(e)=>{\n    const {name,value}=e.target;\n    setSearchInput(value);\n    const x=Reg.filter(i=>i.Facility_year.startsWith(value));\n    x.length!==0?setSearch(x):setSearch(Reg)\n       }\n\n       \n   const handleCopy=(Reg)=>{\n     \n    setLoading(true);\n    const payload={\n      ...Reg,\n      Facility_year:year+\"-\"+temp,\n    }\n    axios.post(\"http://localhost:4000/registrations/create\", payload)\n    .then(result=>{\n      setLoading(false);\n      window.location.href='/registrations';\n    })\n    .catch(err=>{\n      setLoading(false);\n      window.location.href=\"/error\"\n    })\n       }\n\n\n\nconst handleCopyReg=()=>{\n  setLoading(true);\n  \n  axios.post(\"http://localhost:4000/registrations/createcopy\", search)\n  .then(result=>{\n    setLoading(false);\n    window.location.reload();\n    setSearchInput(year+\"-\"+temp);\n  })\n  .catch(err=>{\n    setLoading(false);\n    window.location.href=\"/error\"\n  })\n}\nvar sections=0;\nconst findNbSection=(code)=>{\n  sections=0;\n  const data=Reg.filter(i=>i.Course_Code===code && i.Facility_year===searchInput);\n  sections=data.length;\n\n}\n\n\n    return (\n        <Container>\n            {\n                (Loading)?\n                <Message icon style={{marginTop:\"20%\"}}>\n                <Icon name='circle notched' loading />\n                <Message.Content>\n                  <Message.Header>Just one second</Message.Header>\n                  We are fetching that content for you.\n                </Message.Content>\n              </Message>\n                :\n                <div>\n                  <div>\n                  <select onChange={handleSearch} value={searchInput}\n              style={{\n                width:250,\n                height:35,\n                borderRadius:15,\n                borderWidth:1,\n                textAlign:\"center\",\n                marginLeft:\"40%\",\n                borderColor:\"#eee\",\n                outline:\"none\"\n              }}\n              placeholder=\"Search by year \"\n              >\n                  <option value=\"2020-2021\">2020-2021</option>\n                  <option value=\"2021-2022\">2021-2022</option>\n                  <option value=\"2022-2023\">2022-2023</option>\n                  <option value=\"2023-2024\">2023-2024</option>\n                  <option value=\"2024-2025\">2024-2025</option>\n                  <option value=\"2025-2026\">2025-2026</option>\n                  <option value=\"2026-2027\">2026-2027</option>\n                  <option value=\"2027-2028\">2027-2028</option>\n                 \n              \n              </select>\n              <Icon name=\"search\" size='big' />\n              </div>\n              {\n                allCrs.map(k=>{\n                  findNbSection(k.Course_code);\n                  return(\n                    <>\n                    <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n                    <h2 style={{textAlign:\"center\"}}>{k.course_name} ({k.Course_code})</h2>\n                    <h2 style={{textAlign:\"center\"}}>Sections : {sections}</h2>\n                    </div>\n                    <Table celled>\n                    <Table.Header>\n                        <Table.Row >\n        \n                            <Table.HeaderCell >Course Code</Table.HeaderCell>\n                            <Table.HeaderCell >Doctor name</Table.HeaderCell>\n                            <Table.HeaderCell >Faculity year</Table.HeaderCell>\n                            <Table.HeaderCell >Language</Table.HeaderCell>\n                            <Table.HeaderCell >Lab - Exercise - Course</Table.HeaderCell>\n                            <Table.HeaderCell >Lab_hours</Table.HeaderCell>\n                            <Table.HeaderCell >Exercise_hours</Table.HeaderCell>\n                            <Table.HeaderCell >Course_hours</Table.HeaderCell>\n                            <Table.HeaderCell >Section_ID</Table.HeaderCell>\n                            <Table.HeaderCell >Location</Table.HeaderCell>\n                            <Table.HeaderCell />\n                        </Table.Row>\n                    </Table.Header>\n        \n                    <Table.Body>\n                        {\n                            search.map((i, index) => {\n                              findDoctor(i.DFile_number)\n                                return (\n                                  <>\n                                    {\n                                      (i.Course_Code===k.Course_code)?\n                                    <Table.Row>\n        \n                                    <Table.Cell >{i.Course_Code}</Table.Cell>\n                                    <Table.Cell >{Dname}</Table.Cell>\n                                    <Table.Cell >{i.Facility_year}</Table.Cell>\n                                    <Table.Cell >{i.Language}</Table.Cell>\n                                    <Table.Cell >{(i.Course) ? (i.Lab) ? (i.Exercise)? \"C+L+E\":\"C+L\" :(i.Exercise)? \"C+E\":\"C\" :\n                                                    (i.Lab) ? (i.Exercise)? \"L+E\":\"L\" :(i.Exercise)? \"E\":null\n                                                    }</Table.Cell>\n                                    \n                                    <Table.Cell >{i.Lab_hours}</Table.Cell>\n                                    <Table.Cell >{i.Exercise_hours}</Table.Cell>\n                                    <Table.Cell >{i.Course_hours}</Table.Cell>\n                                    <Table.Cell >{i.Section_ID}</Table.Cell>\n                                    <Table.Cell >{i.Location}</Table.Cell>\n                                    <Table.Cell collapsing>\n                                    <Link to={`/registrations/update/${i._id}?code=${i.Course_Code}&Dr=${i.DFile_number }&\n                                    L=${i.Language}&C=${i.Course}&E=${i.Exercise}&La=${i.Lab}&Ch=${i.Course_hours+\"\"}\n                                    &Eh=${i.Exercise_hours+\"\"}&Lah=${i.Lab_hours+\"\"}&S=${i.Section_ID}&Lo=${i.Location}\n                                    &Mc=${k.Course_hours}&Me=${k.Exercise_hours}&Ml=${k.Lab_hours}\n                                    `}>\n                                  <Button \n                                  content=\"Edit\" \n                                  color=\"blue\"\n                                  size='small'\n                                  icon=\"redo\"\n                                  />\n                                  </Link>\n                                  <Button \n                              content=\"Copy\" \n                              color=\"facebook\"\n                              size='small'\n                              icon=\"copy\"\n                              onClick={()=>{handleCopy(i);}}\n                              />\n                                  <Button\n                                   content=\"Delete\" \n                                   icon=\"trash\"\n                                   color=\"red\"\n                                   size='small'\n                                   onClick={async ()=>{\n                                     const req =await axios.delete('http://localhost:4000/registrations/'+i._id);\n                                      window.location.reload();\n                                   }}\n                                   />\n                                    </Table.Cell>\n                                </Table.Row>:null\n                              \n                                    }\n                                      </>\n                                    \n                                )\n                            })\n        \n                        }\n        \n        \n                    </Table.Body>\n                    <Table.Footer fullWidth>\n          <Table.Row>\n            <Table.HeaderCell />\n            <Table.HeaderCell colSpan='11'>\n                <Link to={`/registrations/create?code=${k.Course_code}&Ch=${k.Course_hours}&Eh=${k.Exercise_hours}&Lh=${k.Lab_hours}`}>\n              <Button\n              content=\"Add Section\"\n                floated='right'\n                icon=\"add\"\n                color=\"green\"\n                size='small'\n    \n              />\n              </Link>\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Footer>\n                    </Table>\n                    </>\n                  )\n                })\n              }\n               \n                <Button content=\"copy\" color=\"linkedin\" onClick={()=>{handleCopyReg()}} />\n                \n           \n                </div>\n                \n            }\n           \n         </Container>\n    );\n};\n\nexport default Registrations;","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Registrations\\Create.js",["523","524","525","526","527"],"import { useEffect, useState } from \"react\";\nimport {useParams} from 'react-router-dom'\nimport {Link} from 'react-router-dom'\nimport {Container,Form,Input,Radio,Divider,Button} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport cookies from 'js-cookies';\nvar years=[];\nconst yearList=()=>{\n  var i,j;\n  var temp=[];\n  const year=new Date().getFullYear();\n  const x=parseInt(year);\n  for( i=0,j=1;i<5,j<10;i++,j++){\n    var myyear=(x+i)+\"-\"+(x+j);\n    temp.push(myyear);\n  }\n years=temp;\n}\nyearList();\n\n\n\nconst Create = () => {\n  const params=new URLSearchParams(window.location.search);\n  let code=params.get('code');\n  let Ch=params.get('Ch');\n  let Lh=params.get('Lh');\n  let Eh=params.get('Eh');\n  \n\n  \n  const REGISTRATION_INITIAL = {\n    Course_Code: code,\n    DFile_number: \"\",\n    Facility_year: years[0],\n    Language:\"\",\n    Lab: false,\n    Exercise: false,\n    Course: false,\n    Lab_hours: Lh,\n    Exercise_hours: Eh,\n    Course_hours: Ch,\n    Section_ID: \"\",\n    Location:\"\",\n  };\n  \n\n  const [Reg, setReg] = useState(REGISTRATION_INITIAL);\n  const [Loading, setLoading] = useState(false);\n  const [Crs, setCrs] = useState([]);\n  const [allCrs, setAllCrs] = useState([]);\n  const [allReg, setAllReg] = useState([]);\n  const [Drs, setDrs] = useState([]);\n  const [maxCrs, setMaxCrs] = useState(Ch);\n  const [maxLab, setMaxLab] = useState(Lh);\n  const [maxExe, setMaxExe] = useState(Eh);\n  const [DLab, setDLab] = useState(false);\n  const [DExc, setDExc] = useState(false);\n  const [DCrs, setDCrs] = useState(false);\n \n \n\n  const handledisabled = () => {\n    Reg.Course ? setDCrs(false) : setDCrs(true);\n    Reg.Exercise ? setDExc(false) : setDExc(true);\n    Reg.Lab ? setDLab(false) : setDLab(true);\n  };\n\n  const findmax=(code)=>{\n\n    allCrs.map((i)=>{\n      if(i.Course_code===code){\n        setMaxCrs( i.Course_hours );\n        setMaxLab( i.Lab_hours);\n        setMaxExe( i.Exercise_hours);\n      \n      }\n    })\n  }\n\n  useEffect(() => {\n    setLoading(true);\n   \n    const token=cookies.getItem(\"token\");\n    const payload={headers:{Authorization:token}};\n    axios.get(\"http://localhost:4000/registrations\",payload)\n    .then(data=>{\n      setAllCrs(data.data.Cs);\n      var crs = data.data.courses.map((d, i) => (\n        {\n        key: d._id,\n        value: d.Course_code,\n        text: d.Course_code +' ('+d.course_name+')',\n      }));\n      var drs = data.data.doctors.map((d, i) => ({\n        key: d._id,\n        text: d.File_Number +' ('+d.Fname+' '+d.Lname+')',\n        value: d.File_Number,\n      }));\n      setCrs(crs);\n      setDrs(drs);\n      setLoading(false);\n      handledisabled();\n    })\n    .catch(err=>{\n      window.location.href=\"/error\"\n      \n    })\n    axios.get(\"http://localhost:4000/distributions/create\")\n    .then(res=>{\n      setAllReg(res.data.Reg);\n    })\n    .catch(err=>{\n      window.location.href=\"/error\";\n    })\n    \n   \n  }, []);\n\n\n  \n  const handleInput = (e) => {\n    const { name, value } = e.target;\n            setReg((prev) => ({ ...prev, [name]: value }));    \n  };\n\n  const handlesubmit = () => {\n    setLoading(true);\n    axios.post(\"http://localhost:4000/registrations/create\", Reg)\n    .then(result=>{\n      setLoading(false);\n      window.location.href='/registrations';\n    })\n    .catch(err=>{\n      setLoading(false);\n      alert(\"All fields are required \")\n    })\n\n  };\n  \n \n\n  return (\n    <Container>\n      <Form loading={Loading} onSubmit={handlesubmit}>\n        <Form.Group widths=\"equal\">\n          <Form.Field value={Reg.Course_Code} name=\"Course_Code\">\n            <label>Course Code</label>\n            <select\n              onChange={(e)=>{handleInput(e);findmax(e.target.value);}}\n              name=\"Course_Code\"\n              value={Reg.Course_Code}\n            >\n                <option value=\"\" selected disabled hidden>Select Course</option>\n              {Crs.map((d, i) => {\n                return <option value={d.value}>{d.text}</option>;\n              })}\n            </select>\n          </Form.Field>\n          <Form.Field name=\"DFile_number\" value={Reg.DFile_number}>\n            <label>DR. File Number</label>\n            <select\n              onChange={handleInput}\n              name=\"DFile_number\"\n              value={Reg.DFile_number}\n            >\n                <option value=\"\" selected disabled hidden>Select Doctor</option>\n              {Drs.map((d, i) => {\n                return <option value={d.value}>{d.text}</option>;\n              })}\n            </select>\n          </Form.Field>\n          <Form.Field value={Reg.Facility_year}>\n            <label>Faculty Year</label>\n               <select\n              onChange={handleInput}\n              name=\"Facility_year\"\n              value={Reg.Facility_year}\n            >\n              <option value=\"\" selected disabled hidden>Select year</option>\n              {\n               years.map(i=>{\n                 return (\n                   <>\n                   <option  value={i}>{i}</option>\n                   </>\n                 )\n               })\n              }\n            </select>\n          </Form.Field>\n        </Form.Group>\n        <Divider section />\n      \n        <Form.Group widths=\"equal\" >\n          <div style={{display:\"flex\",flexDirection:\"column\",width:\"30%\",padding:15}}>\n           \n          <label>Course <b>({maxCrs} hours)</b></label>\n          <Form.Field value={Reg.Course}>\n            <Radio\n              name=\"Course\"\n              toggle\n              onChange={(e)=>{handleInput(e)}}\n              onClick={() => {\n                Reg.Course = !Reg.Course;\n                handledisabled();\n              }}\n              checked={Reg.Course}\n             \n            />\n            </Form.Field>\n           \n          <Form.Field value={Reg.Course_hours}>\n            <input \n             name=\"Course_hours\"\n             type=\"Number\"\n             placeholder=\"course hours\"\n              onChange={handleInput}\n              disabled={DCrs}\n            min=\"0\"\n            max={maxCrs}\n            /> \n          </Form.Field>\n          </div>\n\n          <div style={{display:\"flex\",flexDirection:\"column\",width:\"30%\",padding:15}}>\n          <Form.Field value={Reg.Exercise}>\n            <label>Excercise <b>({maxExe} hours)</b></label>\n            <Radio\n              name=\"Exercise\"\n              toggle\n              onChange={handleInput}\n              onClick={() => {\n                Reg.Exercise = !Reg.Exercise;\n                handledisabled();\n              }}\n              checked={Reg.Exercise}\n            />\n          </Form.Field>\n         \n          <Form.Field value={Reg.Exercise_hours}>\n            <input \n             name=\"Exercise_hours\"\n             type=\"Number\"\n             placeholder=\"exercise hours\"\n             onChange={handleInput}\n             disabled={DExc }\n             min=\"0\"\n             max={maxExe}\n            />\n          </Form.Field>\n            </div>\n            <div style={{display:\"flex\",flexDirection:\"column\",width:\"30%\",padding:15}}>\n          <Form.Field value={Reg.Lab}>\n            <label>Lab <b>({maxLab} hours)</b></label>\n            <Radio\n              name=\"Lab\"\n             \n              toggle\n              onChange={handleInput}\n              onClick={() => {\n                Reg.Lab = !Reg.Lab;\n                handledisabled();\n              }}\n              checked={Reg.Lab}\n            />\n          </Form.Field>\n          \n          <Form.Field value={Reg.Lab_hours}>\n            <input\n              name=\"Lab_hours\"\n              type=\"Number\"\n              placeholder=\"lab hours\"\n              onChange={handleInput}\n              disabled={DLab}\n              min=\"0\"\n              max={maxLab}\n            />\n          </Form.Field>\n          </div>\n        </Form.Group>\n        <Divider section />\n        <Form.Group widths=\"equal\">\n          <Form.Field value={Reg.Section_ID}>\n            <label>Section ID</label>\n            <Input\n              name=\"Section_ID\"\n              fluid\n              placeholder=\"Section ID\"\n              onChange={handleInput}\n            />\n          </Form.Field>\n          <Form.Field value={Reg.Location}>\n            <label>Location</label>\n            <Input\n              name=\"Location\"\n              fluid\n              placeholder=\"Location\"\n              onChange={handleInput}\n            />\n          </Form.Field>\n          <Form.Field value={Reg.Language}>\n            <label>Language</label>\n            <select onChange={handleInput}   name=\"Language\">\n              <option value=\"\" selected  disabled hidden>Select Language</option>\n              <option value=\"E\">English</option>\n              <option value=\"F\">French</option>\n            </select>\n          </Form.Field>\n          \n        </Form.Group>\n        <Divider section hidden />\n        <Button\n          content=\"Add assignment\"\n          icon=\"add\"\n          color=\"green\"\n          floated=\"right\"\n          loading={Loading}\n        />\n      </Form>\n      <Link to=\"/registrations\">\n        <Button icon=\"left arrow\" content=\"Back\" color=\"red\" />\n      </Link>\n    </Container>\n  );\n};\nexport default Create;\n","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Registrations\\Update.js",["528","529","530","531","532"],"import React ,{useEffect,useState}from 'react';\nimport {\n    Container,\n    Form,\n    Input,\n    Radio,\n    Divider,\n    Button,\n Message,Icon\n  } from \"semantic-ui-react\";\n\n  import axios from \"axios\";\n\n  import {useParams} from 'react-router-dom';\n\n  import cookies from \"js-cookies\";\n\n  var years=[];\n  const yearList=()=>{\n    var i,j;\n    var temp=[];\n    const year=new Date().getFullYear();\n    const x=parseInt(year);\n    for( i=0,j=1;i<5,j<10;i++,j++){\n      var myyear=(x+i)+\"-\"+(x+j);\n      temp.push(myyear);\n    }\n   years=temp;\n  }\n  yearList();\n\n  \nconst Update = () => {\n  const { id } = useParams();\n  const params=new URLSearchParams(window.location.search);\n  let code=params.get('code');\n  let Dr=parseInt(params.get('Dr'));\n  let L=params.get('L');\n  let C=params.get('C');\n  let E=params.get('E');\n  let La=params.get('La');\n  let Ch=params.get('Ch');\n  let Eh=params.get('Eh');\n  let Lah=params.get('Lah');\n  let S=params.get('S');\n  let Lo=params.get('Lo');\n  let Mc=params.get('Mc');\n  let Me=params.get('Me');\n  let Ml=params.get('Ml');\n\n\n  const REGISTRATION_INITIAL = {\n    Course_Code: code,\n    DFile_number: Dr,\n    Facility_year: years[0],\n    Language:L,\n    Lab: La,\n    Exercise: E,\n    Course: C,\n    Lab_hours: Lah,\n    Exercise_hours: Eh,\n    Course_hours: Ch,\n    Location:Lo,\n    Section_ID: S\n  };\n\n\n  const [Reg, setReg] = useState(REGISTRATION_INITIAL);\n  const [Loading, setLoading] = useState(false);\n  const [Crs, setCrs] = useState([]);\n  const [Drs, setDrs] = useState([]);\n  const [allReg, setAllReg] = useState([]);\n  const [DLab, setDLab] = useState(false);\n  const [DExc, setDExc] = useState(false);\n  const [DCrs, setDCrs] = useState(false);\n  const [allCrs, setAllCrs] = useState([]);\n  const [Init, setInit] = useState({});\n  const [maxCrs, setMaxCrs] = useState(Mc);\n  const [maxLab, setMaxLab] = useState(Ml);\n  const [maxExe, setMaxExe] = useState(Me);\n \n\n  const handledisabled = () => {\n    Reg.Course ? setDCrs(false) : setDCrs(true);\n    Reg.Exercise ? setDExc(false) : setDExc(true);\n    Reg.Lab ? setDLab(false) : setDLab(true);\n  };\n \n  const findmax=(code)=>{\n\n    allCrs.map((i)=>{\n      if(i.Course_code===code){       \n        setMaxCrs( i.Course_hours);\n        setMaxLab( i.Lab_hours);\n        setMaxExe( i.Exercise_hours);\n     \n      }\n    })\n  }\n  useEffect(() => {\n    setLoading(true);\n    const token=cookies.getItem(\"token\");\n    const payload={headers:{Authorization:token}};\n     axios.get(\"http://localhost:4000/registrations/update/\" + id,payload)\n     .then(req=>{\n        setInit(req.data.Reg);\n        setReg(req.data.Reg)\n      })\n      .catch(err=>{\n        window.location.href=\"/error\"\n      });\n     \n    axios.get(\"http://localhost:4000/courses\",payload)\n    .then((data)=>{\n      setAllCrs(data.data);\n    })\n    .catch(err=>{\n      window.location.href=\"/error\";\n    })\n\n    axios.get(\"http://localhost:4000/registrations\",payload)\n    .then(data=>{\n      var crs = data.data.courses.map((d, i) => ({\n        key: d._id,\n        value: d.Course_code,\n        text: d.Course_code +' ('+d.course_name+')',\n      }));\n      var drs = data.data.doctors.map((d, i) => ({\n        key: d._id,\n        value: d.File_Number,\n        text: d.File_Number+\" (\"+d.Fname+' '+d.Lname+' )',\n      }));\n      setCrs(crs);\n      setDrs(drs);\n      setLoading(false);\n      handledisabled();\n    })\n    .catch(err=>{\n      window.location.href=\"/error\"\n      console.log(err);\n    })\n    axios.get(\"http://localhost:4000/distributions/create\")\n    .then(res=>{\n      setAllReg(res.data.Reg);\n    })\n    .catch(err=>{\n      window.location.href=\"/error\";\n    })\n    findmax(Reg.Course_Code);\n   \n  }, []);\n\n \n  const handleInput = (e) => {\n    const { name, value } = e.target;\n    setReg((prev) => ({ ...prev, [name]: value }));\n\n  };\n\n  const handlesubmit = async () => {\n    console.log(Reg);\n     axios.put(\"http://localhost:4000/registrations/update/\"+id, Reg)\n     .then(result=>{\n      setLoading(false);\n      window.location.href=\"/registrations\"\n     })\n     .catch(err=>{\n       setLoading(false);\n       alert(\"All field are required\");\n     })\n  }\n\n    return (\n        <Container>\n        {\n            (Loading)?\n            <Message icon style={{marginTop:\"20%\"}}>\n            <Icon name='circle notched' loading />\n            <Message.Content>\n              <Message.Header>Just one second</Message.Header>\n              We are fetching that content for you.\n            </Message.Content>\n          </Message>\n            :\n           <Form loading={Loading} onSubmit={handlesubmit}>\n        <Form.Group widths=\"equal\">\n        <Form.Field value={Reg.Course_Code} name=\"Course_Code\">\n            <label>Course Code</label>\n            <select\n              onChange={(e)=>{handleInput(e);findmax(e.target.value)}}\n              name=\"Course_Code\"\n              value={Reg.Course_Code}\n            >\n                <option value=\"\" selected disabled hidden >Select course</option>\n              {Crs.map((d, i) => {\n                return <option value={d.value}>{d.text}</option>;\n              })}\n            </select>\n          </Form.Field>\n          <Form.Field value={Reg.DFile_number} name=\"DFile_number\">\n            <label>DR. File Number</label>\n            <select\n              onChange={handleInput}\n              name=\"DFile_number\"\n              value={Reg.DFile_number} \n            >\n               <option value=\"\" selected disabled hidden>Select Doctor</option>\n              {Drs.map((d, i) => {\n                return <option value={d.value}>{d.text}</option>;\n              })}\n            </select>\n          </Form.Field>\n          <Form.Field value={Reg.Facility_year}>\n          <label>Faculity Year</label>\n          <select\n              onChange={handleInput}\n              name=\"Facility_year\"\n              value={Reg.Facility_year}\n            >\n            \n            <option value=\"\" selected disabled hidden>Select year</option>\n              {\n               years.map(i=>{\n                 return (\n                   <>\n                   <option  value={i}>{i}</option>\n                   </>\n                 )\n               })\n              }\n               </select>\n          </Form.Field>\n        </Form.Group>\n        <Divider section />\n       \n        <Form.Group widths=\"equal\" >\n          <div style={{display:\"flex\",flexDirection:\"column\",width:\"30%\",padding:15}}>\n           \n          <label>Course <b>({maxCrs} hours)</b></label>\n          <Form.Field value={Reg.Course}>\n            <Radio\n              name=\"Course\"\n              toggle\n              onChange={(e)=>{handleInput(e)}}\n              onClick={() => {\n                Reg.Course = !Reg.Course;\n                handledisabled();\n              }}\n              checked={Reg.Course}\n             \n            />\n            </Form.Field>\n           \n          <Form.Field value={Reg.Course_hours} name=\"Course_hours\">\n            <input \n             name=\"Course_hours\"\n             type=\"Number\"\n             value={Reg.Course_hours}\n              onChange={handleInput}\n              disabled={DCrs}\n            min=\"0\"\n            max={maxCrs}\n            /> \n          </Form.Field>\n          </div>\n\n          <div style={{display:\"flex\",flexDirection:\"column\",width:\"30%\",padding:15}}>\n          <Form.Field value={Reg.Exercise} >\n            <label>Excercise <b>({maxExe} hours)</b></label>\n            <Radio\n              name=\"Exercise\"\n              toggle\n              onChange={handleInput}\n              onClick={() => {\n                Reg.Exercise = !Reg.Exercise;\n                handledisabled();\n              }}\n              checked={Reg.Exercise}\n            />\n          </Form.Field>\n        \n          <Form.Field value={Reg.Exercise_hours} name=\"Exercise_hours\">\n            <input \n             name=\"Exercise_hours\"\n             type=\"Number\"\n             value={Reg.Exercise_hours}\n              onChange={handleInput}\n             disabled={DExc}\n             min=\"0\"\n             max={maxExe}\n            />\n          </Form.Field>\n            </div>\n            <div style={{display:\"flex\",flexDirection:\"column\",width:\"30%\",padding:15}}>\n          <Form.Field value={Reg.Lab}>\n            <label>Lab <b>({maxLab} hours)</b></label>\n            <Radio\n              name=\"Lab\"\n            \n              toggle\n              onChange={handleInput}\n              onClick={() => {\n                Reg.Lab = !Reg.Lab;\n                handledisabled();\n              }}\n              checked={Reg.Lab}\n            />\n          </Form.Field>\n        \n          <Form.Field value={Reg.Lab_hours} name=\"Lab_hours\">\n            <input\n              name=\"Lab_hours\"\n              type=\"Number\"\n              value={Reg.Lab_hours}\n              onChange={handleInput}\n              disabled={DLab}\n              min=\"0\"\n              max={maxLab}\n            />\n          </Form.Field>\n          </div>\n        </Form.Group>\n        <Divider section />\n        <Form.Group widths=\"equal\">\n          <Form.Field value={Reg.Section_ID} name=\"Section_ID\">\n            <label>Section ID</label>\n            <Input\n              name=\"Section_ID\"\n              fluid\n              value={Reg.Section_ID}\n              onChange={handleInput}\n            />\n          </Form.Field>\n          <Form.Field value={Reg.Location} name=\"Location\">\n            <label>Location</label>\n            <Input\n              name=\"Location\"\n              fluid\n              value={Reg.Location}\n              placeholder=\"Location\"\n              onChange={handleInput}\n            />\n          </Form.Field>\n          <Form.Field value={Reg.Language} name=\"Language\">\n            <label>Language</label>\n            <select onChange={handleInput}   value={Reg.Language} name=\"Language\">\n              <option value=\"\" selected disabled hidden>Select Language</option>\n              <option value=\"E\">English</option>\n              <option value=\"F\">French</option>\n            </select>\n          </Form.Field>\n          \n        </Form.Group>\n        <Divider section hidden />\n        <Button\n          content=\"Update Registration\"\n          icon=\"add user\"\n          color=\"blue\"\n          floated=\"right\"\n        />\n      </Form>\n        }\n   \n     </Container>\n    );\n};\n\nexport default Update;","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Courses\\Course.js",[],"C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Doctors\\Doctors.js",["533","534","535","536","537","538"],"import React, { useEffect, useState } from 'react';\nimport { Button, Icon, Table ,Container,Message, Radio, Modal} from 'semantic-ui-react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport cookies from 'js-cookies';\nimport ReactToExcel from 'react-html-table-to-excel';\n\nconst Doctor = () => {\n    const [doctors,setDoctors]=useState([]);\n    const[loading,setLoading]=useState(false);\n    const[open,setOpen]=useState(false);\n    const [search,setSearch]=useState([]);\n    const [searchInput,setSearchInput]=useState('');\n    const x=false;\n\n    useEffect(()=>{\n        setLoading(true)\n        const token=cookies.getItem(\"token\");\n        const payload={headers:{Authorization:token}};\n         axios.get('http://localhost:4000/doctors',payload)\n        .then(Drs=>{\n          setDoctors(Drs.data);\n          setSearch(Drs.data)\n          setLoading(false);\n          console.log(Drs.data);\n        })\n        .catch(err=>{\n          window.location.href=\"/error\"\n        })\n       \n        \n    },[])\n\n    const handleSearch=(e)=>{\n      const {name,value}=e.target;\n      setSearchInput(value);\n      const x=doctors.filter(i=>i.File_Number.startsWith(value));\n      x.length!==0?setSearch(x):setSearch(doctors)\n         }\n\n\n\n    return(\n        <Container style={{marginTop:'2em'}}>\n        {\n        \n            (loading)? \n            <Message icon style={{marginTop:\"20%\"}}>\n    <Icon name='circle notched' loading />\n    <Message.Content>\n      <Message.Header>Just one second</Message.Header>\n      We are fetching that content for you.\n    </Message.Content>\n  </Message>\n            :\n            <div>\n              <div>\n              <input type=\"search\" onChange={handleSearch} value={searchInput}\n              style={{\n                width:250,\n                height:35,\n                borderRadius:15,\n                borderWidth:1,\n                textAlign:\"center\",\n                marginLeft:\"40%\",\n                borderColor:\"#eee\",\n                outline:\"none\"\n              }}\n              placeholder=\"Search by Dr. ID \"\n              />\n              <Icon name=\"search\" size='big' />\n              </div>\n            <Table compact celled style={{fontSize:\"15px\"}} id=\"doctors\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell textAlign=\"center\">Archived</Table.HeaderCell>\n                <Table.HeaderCell textAlign=\"center\">First name</Table.HeaderCell>\n                <Table.HeaderCell textAlign=\"center\">Last name</Table.HeaderCell>\n                <Table.HeaderCell textAlign=\"center\">Email</Table.HeaderCell>\n                <Table.HeaderCell />\n              </Table.Row>\n            </Table.Header>\n        \n            <Table.Body>\n                {\n                    search.map(d=>{\n                          return(\n\n                              <Table.Row  >  \n                                <Table.Cell>\n                                <Radio toggle\n                                  checked={d.Archived}\n                                onClick={async ()=>{\n                                  setLoading(true);\n                                  const archived=!d.Archived;\n                                  const data=axios.put(\"http://localhost:4000/doctors/update-archived/\"+d._id,{archived,d});\n                                  window.location.reload();\n                                  setLoading(false);\n                                }}\n                                />\n                                </Table.Cell>\n                               \n                                   <Table.Cell textAlign=\"center\">\n                                  <Link to={`/doctors/details/${d._id}`}>\n                                  {d.Fname}\n                                  </Link>\n                              </Table.Cell>\n                      \n                              <Table.Cell textAlign=\"center\">{d.Lname}</Table.Cell>\n                              <Table.Cell textAlign=\"center\">{d.Email}</Table.Cell>\n                              <Table.Cell collapsing>\n                                <Link to={`/doctors/update/${d._id}` }>\n                              <Button \n                              content=\"Update\" \n                              color=\"blue\"\n                              \n                              size='small'\n                              icon=\"redo\"\n                              />\n                              </Link>\n                              <Button\n                            content=\"Delete\" \n                            labelPosition='right'\n                            icon='trash'\n                            onClick={() =>{ \n                              setOpen(false)\n                              setLoading(true);\n                              console.log(d.fname);\n                              const req =axios.delete(`http://localhost:4000/doctors/${d._id}`);\n                              setLoading(false);\n                              window.location.reload();\n                            }}\n                            color=\"red\"\n                          />\n                             \n\n  \n                              </Table.Cell>\n                            </Table.Row>\n                            \n                          )\n                    })\n                   \n                }\n             \n            </Table.Body>\n        \n            <Table.Footer fullWidth>\n              <Table.Row>\n                <Table.HeaderCell colSpan='12'>\n                    <Link to='/doctors/create'>\n                  <Button\n                    floated='right'\n                    icon\n                    labelPosition='left'\n                    color=\"green\"\n                    size='small'\n                  >\n                    <Icon name='add' />\n                    Add Doctor\n                  </Button>\n                  </Link>\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n            <ReactToExcel \n            table=\"doctors\"\n            filename=\"Doctors Table\"\n            sheet=\"Sheet\"\n            buttonText=\"Export To Excel\"\n            className=\"ui primary button\"\n            />\n            </div>\n        }\n        \n        \n        </Container>\n        \n            \n    )\n            \n}\n   \n\n\nexport default Doctor;","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Doctors\\Details.js",["539","540"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport { Container, Message, Table, Icon, Divider, Button } from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\nimport cookies from 'js-cookies';\n\nconst Details = () => {\n  const [doctor, setdoctor] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [Reg, setReg] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    setLoading(true);\n    const token=cookies.getItem(\"token\");\n    const payload={headers:{Authorization:token}};\n    axios.get('http://localhost:4000/doctors/details/' + id)\n    .then(Dr=>{\n      console.log(Dr.data.Reg);\n      let x = Dr.data.Reg.sort((a, b) => (a.Facility_year < b.Facility_year  ? 1 : -1));\n      setReg(x);\n      setdoctor(Dr.data.Doctor);\n      setLoading(false);\n    })\n    .catch(err=>{\n\n      window.location.href=\"/error\"\n    })\n  \n\n  }, []);\n  console.log(Reg);\n  return (\n    <Container >\n      {\n        (loading) ?\n          <Message icon style={{ marginTop: \"20%\" }}>\n            <Icon name='circle notched' loading />\n            <Message.Content>\n              <Message.Header>Just one second</Message.Header>\n                We are fetching that content for you.\n              </Message.Content>\n          </Message>\n          :\n          (\n            <Container fluid>\n              <Divider section horizontal>Info</Divider>\n            <Table    >\n            <Table.Header>\n              <Table.Row >\n\n                <Table.HeaderCell >First name</Table.HeaderCell>\n                <Table.HeaderCell >Middle name</Table.HeaderCell>\n                <Table.HeaderCell >Last name</Table.HeaderCell>\n                <Table.HeaderCell >File number</Table.HeaderCell>\n                <Table.HeaderCell >Email</Table.HeaderCell>\n                <Table.HeaderCell >Phone number</Table.HeaderCell>\n                <Table.HeaderCell >Rank</Table.HeaderCell>\n                <Table.HeaderCell >Contract type</Table.HeaderCell>\n\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n\n\n              <Table.Row>\n                <Table.Cell >{doctor.Fname}</Table.Cell>\n                <Table.Cell >{doctor.Mname}</Table.Cell>\n                <Table.Cell >{doctor.Lname}</Table.Cell>\n                <Table.Cell >{doctor.File_Number}</Table.Cell>\n                <Table.Cell >{doctor.Email}</Table.Cell>\n                <Table.Cell >{doctor.phone_Number}</Table.Cell>\n                <Table.Cell >{doctor.Rank}</Table.Cell>\n                <Table.Cell >{doctor.Contract_Type}</Table.Cell>\n\n              </Table.Row>\n\n\n\n\n            </Table.Body>\n\n\n          </Table>\n          <Divider horizontal section>Registrations</Divider>\n           <Table>\n           <Table.Header>\n             <Table.Row >\n   \n               <Table.HeaderCell >Course Code</Table.HeaderCell>\n               <Table.HeaderCell >Faculity year</Table.HeaderCell>\n               <Table.HeaderCell >Language</Table.HeaderCell>\n              \n               <Table.HeaderCell >Lab - Course - Exercise</Table.HeaderCell>\n               <Table.HeaderCell >Course hours</Table.HeaderCell>\n               <Table.HeaderCell >Exercise hours</Table.HeaderCell>\n               <Table.HeaderCell >Lab hours</Table.HeaderCell>\n               <Table.HeaderCell >Section ID</Table.HeaderCell>\n   \n             </Table.Row>\n           </Table.Header>\n   \n           <Table.Body>\n   \n             {\n               Reg.map((R) => {\n                 return (\n   \n                   <Table.Row>\n                     <Table.Cell textAlign=\"center\">{R.Course_Code}</Table.Cell>\n                     <Table.Cell textAlign=\"center\">{R.Facility_year}</Table.Cell>\n                     <Table.Cell textAlign=\"center\">{(R.EN_Section) ? (R.FR_Section) ? \"A & F\" : \"A\" :\n                       (R.FR_Section) ? \"F\" : null\n                     }</Table.Cell>\n                     <Table.Cell textAlign=\"center\" >{(R.Course) ? (R.Lab) ? (R.Exercise)? \"C+L+E\":\"C+L\" :(R.Exercise)? \"C+E\":\"C\" :\n                                                    (R.Lab) ? (R.Exercise)? \"L+E\":\"L\" :(R.Exercise)? \"E\":null\n                                                    }</Table.Cell>\n                   \n                     <Table.Cell textAlign=\"center\">{R.Course_hours}</Table.Cell>\n                     <Table.Cell textAlign=\"center\">{R.Exercise_hours}</Table.Cell>\n                     <Table.Cell textAlign=\"center\">{R.Lab_hours}</Table.Cell>\n                     <Table.Cell textAlign=\"center\">{R.Section_ID}</Table.Cell>\n                   </Table.Row>\n                 )\n               }\n              \n               )\n             }\n   \n   \n   \n   \n           </Table.Body>\n   \n         </Table>\n         <Link to=\"/doctors\">\n           <Button\n            content=\"Back\"\n             icon=\"arrow left\"\n             color=\"red\" \n              /></Link>\n         </Container>\n          )\n         \n      }\n    \n    </Container>\n    \n  );\n\n}\nexport default Details;","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Doctors\\Update.js",["541"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Container, Divider, Form, Icon, Input } from \"semantic-ui-react\";\nimport {useParams,Link} from 'react-router-dom'\nimport axios from \"axios\";\nimport cookies from 'js-cookies';\nconst Update = () => {\n  const [dr, setdr] = useState([]);\n  const [Loading, setLoading] = useState(false);\n  const { id } = useParams();\n  useEffect(() => {\n    const token=cookies.getItem(\"token\");\n    const payload={headers:{Authorization:token}};\n      axios.get(\"http://localhost:4000/doctors/update/\"+id,payload)\n      .then((res) => {\n        setdr(res.data);\n      })\n      .catch((err) => {\n        window.location.href=\"/error\"\n      });\n  });\n\n  const CREATE_DOCTOR = {\n    Fname: dr.Fname,\n    Email: dr.Email,\n    phone_Number: dr.phone_Number,\n    File_Number: dr.File_Number,\n    Lname: dr.Lname,\n    Mname: dr.Mname,\n    Rank: dr.Rank,\n    Contract_Type: dr.Contract_Type,\n  };\n  const [create_doc, set_update_doc] = useState(CREATE_DOCTOR);\n\n  const handleInput = (e) => {\n    const { name, value } = e.target;\n    console.log(e);\n    set_update_doc((prev) => ({ ...prev, [name]: value }));\n  };\n  const handleSubmit = async () => {\n    axios.put(\"http://localhost:4000/doctors/update/\"+id, create_doc)\n    .then(res=>{\n      window.location.href=\"/doctors\";\n    })\n    .catch(err=>{\n      console.log(err)\n    })\n    \n     \n\n  };\n  return (\n   \n    <Container>\n    <Form  loading={Loading}>\n      <Form.Group widths=\"equal\">\n        <Form.Field value={CREATE_DOCTOR.Fname}>\n          <label>First Name</label>\n          <Input\n            required\n            placeholder={CREATE_DOCTOR.Fname}\n            name=\"Fname\"\n            onChange={handleInput}\n\n          />\n        </Form.Field>\n\n        <Form.Field value={CREATE_DOCTOR.Mname}>\n          <label> Middle Name</label>\n          <Input\n            required\n            name=\"Mname\"\n            onChange={handleInput}\n            placeholder={CREATE_DOCTOR.Mname}\n          />\n        </Form.Field>\n\n        <Form.Field value={CREATE_DOCTOR.Lname}>\n          <label>Last Name:</label>\n          <Input\n            required\n            placeholder={CREATE_DOCTOR.Lname}\n            name=\"Lname\"\n            onChange={handleInput}\n          />\n        </Form.Field>\n      </Form.Group>\n      <Divider section/>\n      <Form.Group widths=\"3\">\n        <Form.Field value={CREATE_DOCTOR.Email}>\n          <label>Email</label>\n          <Input\n            required\n            type=\"email\"\n            control={Input}\n            placeholder={CREATE_DOCTOR.Email}\n            name=\"Email\"\n            onChange={handleInput}\n          />\n        </Form.Field>\n        <Form.Field value={CREATE_DOCTOR.phone_Number}>\n          <label>Phone Number</label>\n          <Input\n            required\n            align=\"center\"\n            width=\"4\"\n            placeholder={CREATE_DOCTOR.phone_Number}\n            name=\"phone_Number\"\n            onChange={handleInput}\n          />\n        </Form.Field>\n\n        <Form.Field value={CREATE_DOCTOR.File_Number}>\n          <label>File Number</label>\n          <Input\n            required\n            type=\"number\"\n            name=\"File_Number\"\n            onChange={handleInput}\n            width=\"4\"\n            placeholder={CREATE_DOCTOR.File_Number}\n          />\n        </Form.Field>\n      </Form.Group>\n      <Divider section/>\n      <Form.Group widths=\"equal\">\n       \n\n        <Form.Field value={CREATE_DOCTOR.Rank}>\n          <label>Rank</label>\n          \n            <select name=\"Rank\" onChange={handleInput} >\n            <option value=\"\" selected disabled hidden>Select Rank</option>\n              <option value=\"Doctor\" >Doctor</option>\n              <option value=\"Head of Department\" >Head of Department</option>\n              <option value=\"Doctor Assistant\" >Doctor Assistant</option>\n              </select>\n        </Form.Field>\n\n        <Form.Field value={CREATE_DOCTOR.Contract_Type}>\n          <label>Contract Type</label>\n        \n           <select name=\"Contract_Type\" onChange={handleInput}>\n           <option value=\"\" selected disabled hidden>Select contract type</option>\n              <option value=\"Full Time\" >Full Time</option>\n              <option value=\"Part Time\" >Part Time</option>\n              <option value=\"Mallak\" >Mallak</option>\n              </select>\n        </Form.Field>\n      </Form.Group>\n      <Divider section/>\n      <Form.Field>\n        <Button color=\"green\" onClick={handleSubmit}  floated=\"right\">\n          <Icon name=\"redo\"/>\n          Update Doctor</Button>\n      </Form.Field>\n    </Form>\n    <Link to=\"/doctors\">\n       <Button\n        content=\"Back\"\n         icon=\"arrow left\"\n         color=\"red\" \n         \n         /></Link>\n  </Container>\n  );\n};\nexport default Update;\n","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Doctors\\Create.js",["542","543"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Container, Divider, Form, Icon, Input } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport {Link,useHistory} from 'react-router-dom';\n//import { Helmet } from 'react-helmet';\n\nconst CREATE_DOCTOR = {\n  Fname: \"\",\n  Email: \"\",\n  phone_Number: \"\",\n  File_Number: 0,\n  Lname: \"\",\n  Mname: \"\",\n  Rank: \"\",\n  Contract_Type: \"\",\n};\nconst Create = () => {\n  const [create_doc, set_create_doc] = useState(CREATE_DOCTOR);\n  const [Loading,setLoading]=useState(false);\n  const history=useHistory();\n  const handleInput = (e) => {\n    const { name, value } = e.target;\n    console.log(e);\n    set_create_doc((prev) => ({ ...prev, [name]: value }));\n  };\n  const handleSubmit = async () => {\n    setLoading(true);\n     axios.post(\"http://localhost:4000/doctors/create\", create_doc)\n     .then(res=>{\n       window.location.href='/doctors';\n     })\n     .catch(err=>{\n       alert(\"File number already exists \");\n     })\n     setLoading(false);\n   \n     \n  };\n  return (\n   \n      <Container>\n        <Form onSubmit={handleSubmit} loading={Loading}>\n          <Form.Group widths=\"equal\">\n            <Form.Field value={CREATE_DOCTOR.Fname}>\n              <label>First Name</label>\n              <Input\n                required\n                placeholder=\"First Name\"\n                name=\"Fname\"\n                onChange={handleInput}\n\n              />\n            </Form.Field>\n\n            <Form.Field value={CREATE_DOCTOR.Mname}>\n              <label> Middle Name</label>\n              <Input\n                required\n                name=\"Mname\"\n                onChange={handleInput}\n                placeholder=\"Middle Name\"\n              />\n            </Form.Field>\n\n            <Form.Field value={CREATE_DOCTOR.Lname}>\n              <label>Last Name:</label>\n              <Input\n                required\n                placeholder=\"Last Name\"\n                name=\"Lname\"\n                onChange={handleInput}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Divider section/>\n          <Form.Group widths=\"3\">\n            <Form.Field value={CREATE_DOCTOR.Email}>\n              <label>Email</label>\n              <Input\n                required\n                type=\"email\"\n                control={Input}\n                placeholder=\"Email\"\n                name=\"Email\"\n                onChange={handleInput}\n              />\n            </Form.Field>\n            <Form.Field value={CREATE_DOCTOR.phone_Number}>\n              <label>Phone Number</label>\n              <Input\n                required\n                align=\"center\"\n                width=\"4\"\n                placeholder=\"Phone Number\"\n                name=\"phone_Number\"\n                onChange={handleInput}\n              />\n            </Form.Field>\n\n            <Form.Field value={CREATE_DOCTOR.File_Number}>\n              <label>File Number</label>\n              <Input\n                required\n                type=\"number\"\n                name=\"File_Number\"\n                onChange={handleInput}\n                width=\"4\"\n                placeholder=\"File Number\"\n              />\n            </Form.Field>\n          </Form.Group>\n          <Divider section/>\n          <Form.Group widths=\"equal\">\n           \n\n            <Form.Field value={CREATE_DOCTOR.Rank}>\n              <label>Rank</label>\n              \n                <select name=\"Rank\" onChange={handleInput}>\n                <option value=\"\" selected disabled hidden>Select Rank</option>\n                  <option value=\"Doctor\" >Doctor</option>\n                  <option value=\"Head of Department\" >Head of Department</option>\n                  <option value=\"Doctor Assistant\" >Doctor Assistant</option>\n                  </select>\n            </Form.Field>\n\n            <Form.Field value={CREATE_DOCTOR.Contract_Type}>\n              <label>Contract Type</label>\n            \n               <select name=\"Contract_Type\" onChange={handleInput}>\n               <option value=\"\" selected disabled hidden>Select contract type</option>\n                  <option value=\"Full Time\" >Full Time</option>\n                  <option value=\"Part Time\" >Part Time</option>\n                  <option value=\"Mallak\" >Mallak</option>\n                  </select>\n            </Form.Field>\n          </Form.Group>\n          <Divider section/>\n          <Form.Field>\n            <Button color=\"green\" floated=\"right\">\n              <Icon name=\"add\"/>\n              Create Doctor</Button>\n          </Form.Field>\n        </Form>\n        <Link to=\"/doctors\">\n           <Button\n            content=\"Back\"\n             icon=\"arrow left\"\n             color=\"red\" \n             /></Link>\n      </Container>\n  );\n};\nexport default Create;\n","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Courses\\Create.js",[],"C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Distributions\\Distributions.js",["544","545"],"import React, { useEffect, useState } from 'react';\nimport { Button, Icon, Table ,Container,Message, Divider} from 'semantic-ui-react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport cookies from 'js-cookies';\n\nconst Distribution = () => {\n    const [distributions,setDistributions]=useState([]);\n    const[loading,setLoading]=useState(false);\n    useEffect( ()=>{\n        setLoading(true)\n        const token =cookies.getItem(\"token\");\n        console.log(token);\n        const payload={headers:{ Authorization : token}}\n         axios.get('http://localhost:4000/distributions',payload)\n         .then((Ds)=>{\n          setDistributions(Ds.data);\n          setLoading(false);\n         })\n         .catch(err=>{\n           console.log(err);\n            window.location.href=\"/error\";\n         })\n        \n    },[])\n\n    const handleCopy= (d)=>{\n      const year=new Date().getFullYear();\n      const temp=parseInt(year)+1;\n        const payload = {\n          Name: d.Name+\"-copy\",\n          Registrations: d.Registrations,\n          Version:d.Version,\n          Date: year+\"-\"+temp,\n      }\n       axios.post('http://localhost:4000/distributions/create', payload)\n       .then(res=>{\n        window.location.href=\"/distributions\";\n       })\n       .catch(err=>{\n        window.location.href=\"/error\";\n       })\n     \n      \n    }\n\n    return(\n        <Container style={{marginTop:'2em',backgroundColor:\"grey\"}} >\n        {\n            (loading)? \n            <Message icon style={{marginTop:\"20%\"}}>\n    <Icon name='circle notched' loading />\n    <Message.Content>\n      <Message.Header>Just one second</Message.Header>\n      We are fetching that content for you.\n    </Message.Content>\n  </Message>\n            :\n            <div>\n\n            <Table compact celled style={{fontSize:\"15px\"}}>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell textAlign=\"center\">Distribution name</Table.HeaderCell>\n                <Table.HeaderCell textAlign=\"center\">Date</Table.HeaderCell>\n                <Table.HeaderCell textAlign=\"center\">Version</Table.HeaderCell>\n                <Table.HeaderCell />\n              </Table.Row>\n            </Table.Header>\n        \n            <Table.Body>\n                {\n                    distributions.map(d=>{\n                          return(\n                              <Table.Row>\n                                   <Table.Cell textAlign=\"center\">\n                                  <Link to={`/distributions/details/${d._id}`}>\n                                  {d.Name}\n                                  </Link>\n                              </Table.Cell>\n                              <Table.Cell textAlign=\"center\">{d.Date}</Table.Cell>\n                              <Table.Cell textAlign=\"center\">{d.Version ? \"Final\":\"Not Complete\"}</Table.Cell>\n                              <Table.Cell collapsing>\n                                <Link to={`/distributions/update/${d._id}`}>\n                              <Button \n                              content=\"Update\" \n                              color=\"blue\"\n                              \n                              size='small'\n                              icon=\"redo\"\n                              />\n                              </Link>\n\n                             \n                              <Button \n                              content=\"Copy\" \n                              color=\"facebook\"\n                              size='small'\n                              icon=\"copy\"\n                              onClick={()=>{handleCopy(d);}}\n                              />\n                            \n     \n                              <Button\n                               content=\"Delete\" \n                               icon=\"trash\"\n                               color=\"red\"\n                               size='small'\n                               onClick={()=>{\n                                 setLoading(true);\n                                 const req =axios.delete('http://localhost:4000/distributions/'+d._id);\n                                 setLoading(false);\n                                 window.location.reload();\n                               }}\n                               />\n  \n  \n                              </Table.Cell>\n                            </Table.Row>\n                          )\n                    })\n                   \n                }\n             \n            </Table.Body>\n        \n            <Table.Footer fullWidth>\n              <Table.Row>\n                <Table.HeaderCell colSpan='12'>\n                  \n                      <Link to=\"/distributions/create\">\n                  <Button\n                    floated='right'\n                    icon\n                    labelPosition='left'\n                    color=\"green\"\n                    size='small'\n                  >\n                    <Icon name='add' />\n                    Add Distribution \n                  </Button>\n                  </Link>\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n          </div>\n        }\n        \n        \n        </Container>\n        \n            \n    )\n            \n}\n   \n\n\nexport default Distribution;","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Courses\\Details.js",["546","547","548"],"C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Courses\\Update.js",["549"],"import React, { useEffect, useState } from \"react\";\n\nimport {  Button, Form, Input, Radio, Container ,Divider, Icon} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport cookies from 'js-cookies'\n\nconst Update = () => {\n  var [crses, setcrses] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    const token=cookies.getItem(\"token\");\n    const payload={headers:{Authorization:token}};\n     axios.get(\n      \"http://localhost:4000/courses/update/\" + id,payload\n    ).then(course=>{\n      setcrses(course.data);\n      crses = course.data;\n      console.log(course.data, crses);\n    })\n    .catch(err=>{\n      window.location.href=\"/error\";\n    })\n   \n  }, []);\n\n  const CREATE_COURSE = {\n    Course_code: crses.Course_code,\n    course_name: crses.course_name,\n    Total_Hours: crses.Total_Hours,\n    Description: crses.Description,\n    credits: crses.credits,\n    available: crses.available,\n    Semester_Nb: crses.Semester_Nb,\n    Course_Type: crses.Course_Type,\n    Course_hours: crses.Course_hours,\n    Lab_hours: crses.Lab_hours,\n    Exercise_hours: crses.Exercise_hours,\n  };\n  const [create_course, set_create_course] = useState(CREATE_COURSE);\n\n  const handleInput = (e) => {\n    const { name, value } = e.target;\n\n    set_create_course((prev) => ({ ...prev, [name]: value }));\n    console.log(create_course);\n  };\n  const handleSubmit = async () => {\n    const x = await axios.put(\n      \"http://localhost:4000/courses/update/\" + id,\n      create_course\n    );\n  \n    console.log(x);\n  };\n\n  return (\n    <Container>\n      <Form method=\"POST\" onSubmit={()=>{handleSubmit();  window.location.href=\"/courses\"}}>\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <label>Course Code</label>\n            <Input\n              required\n              placeholder={CREATE_COURSE.Course_code}\n              name=\"Course_code\"\n              onChange={handleInput}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label> Course Name</label>\n            <Input\n              required\n              name=\"course_name\"\n              onChange={handleInput}\n              placeholder={CREATE_COURSE.course_name}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Total Hours</label>\n            <Input\n              required\n              type=\"number\"\n              placeholder={CREATE_COURSE.Total_Hours}\n              name=\"Total_Hours\"\n              onChange={handleInput}\n            />\n          </Form.Field>\n         \n        </Form.Group>\n        <Divider section/>\n        <Form.Group widths=\"3\">\n        <Form.Field>\n            <label>Description</label>\n            <Input\n              required\n              placeholder={CREATE_COURSE.Description}\n              name=\"Description\"\n              onChange={handleInput}\n            />\n          </Form.Field>\n          <Form.Field value={CREATE_COURSE.available} >\n            <lable style={{marginLeft:\"50%\"}}>Available</lable>\n            <Radio\n              style={{marginLeft:\"50%\"}}\n              toggle\n              name=\"available\"\n              checked={create_course.available}\n              onChange={handleInput}\n              value={CREATE_COURSE.available}\n              onClick={() =>\n                (create_course.available = !create_course.available)\n              }\n            />\n          </Form.Field>\n          <Form.Field>\n              <label>Credits</label>\n              <input\n                name=\"credits\"\n                placeholder={CREATE_COURSE.credits}\n                required\n                type=\"number\"\n                min=\"0\"\n                max=\"30\"\n                onChange={handleInput}\n              />\n            </Form.Field>\n\n        </Form.Group>\n        <Divider section/>\n          <Form.Group widths=\"equal\">\n            \n            <Form.Field>\n              <label>Semester Number</label>\n\n              <select\n                name=\"Semester_Nb\"\n                placeholder={create_course.Semester_Nb}\n                onChange={handleInput}\n              >\n                <option value=\"S1\">S1</option>\n                <option value=\"S2\">S2</option>\n                <option value=\"S3\">S3</option>\n                <option value=\"S4\">S4</option>\n                <option value=\"S5\">S5</option>\n                <option value=\"S6\">S6</option>\n                <option value=\"S7\">S7</option>\n                <option value=\"S8\">S8</option>\n              </select>\n            </Form.Field>\n\n            <Form.Field name=\"Course_Type\">\n              <label>Course Type</label>\n              <select\n                onChange={handleInput}\n                name=\"Course_Type\"\n                placeholder={create_course.Course_Type}\n              >\n                <option value=\"Obligatory\">Obligatory</option>\n                <option value=\"Elective\">Elective</option>\n              </select>\n            </Form.Field>\n          </Form.Group>\n          <Divider section/>\n        <Form.Group widths=\"equal\">\n          <Form.Field value={CREATE_COURSE.Course_hours}>\n            <label>Course Hours</label>\n            <Input\n              required\n              type=\"number\"\n              name=\"Course_hours\"\n              placeholder={CREATE_COURSE.Course_hours}\n              onChange={handleInput}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Lab Hours</label>\n            <Input\n              required\n              type=\"number\"\n              placeholder={CREATE_COURSE.Lab_hours}\n              name=\"Lab_hours\"\n              onChange={handleInput}\n            />\n          </Form.Field>\n          <Form.Field value={CREATE_COURSE.Exercise_hours}>\n            <label>Exercise Hours</label>\n            <Input\n              required\n              type=\"number\"\n              placeholder={CREATE_COURSE.Exercise_hours}\n              name=\"Exercise_hours\"\n              onChange={handleInput}\n            />\n          </Form.Field>\n        </Form.Group>\n        <Form.Field>\n          <Button floated=\"right\"  color=\"green\">\n            <Icon name=\"redo\"/>\n            update</Button>\n        </Form.Field>\n      </Form>\n      <Link to=\"/courses\"><Button icon=\"left arrow\" content=\"Back\" color=\"red\" /></Link>\n    </Container>\n  );\n};\n\nexport default Update;\n","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Distributions\\Create.js",["550","551","552","553","554","555","556","557","558"],"import React, { useEffect, useState } from 'react';\nimport { Container, Button, Modal, Input, Message, Table, Icon, Radio } from 'semantic-ui-react'\nimport axios from 'axios';\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { Link } from 'react-router-dom';\nimport cookies from 'js-cookies';\nvar years = [];\nconst yearList = () => {\n    var i, j;\n    var temp = [];\n    const year = new Date().getFullYear();\n    const x = parseInt(year);\n    for (i = 0, j = 1; i < 5, j < 10; i++, j++) {\n        var myyear = (x + i) + \"-\" + (x + j);\n        temp.push(myyear);\n    }\n    years = temp;\n}\nyearList();\nconst Create = () => {\n    const [Registrations, setRegistrations] = useState([]);\n    const [Distribution, setDistribution] = useState([]);\n    const [Doctors, setDoctors] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [title, setname] = useState({ Dname: '' });\n    const [date, setdate] = useState(years[0]);\n    var [final, setFinal] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [search, setSearch] = useState([]);\n    const year = new Date().getFullYear();\n    const temp = parseInt(year) + 1;\n    const [searchInput, setSearchInput] = useState(year + \"-\" + temp);\n\n    useEffect(async () => {\n        setLoading(true);\n        const token = cookies.getItem(\"token\");\n        const payload = { headers: { Authorization: token } };\n        await axios.get('http://localhost:4000/distributions/create', payload)\n            .then(req => {\n                const myData = [].concat(req.data.Reg)\n                    .sort((a, b) => a.Facility_year < b.Facility_year ? 1 : -1);\n                setRegistrations(myData);\n                setSearch(prev => (myData.filter(i => i.Facility_year.startsWith(searchInput))))\n                setDoctors(req.data.Doc);\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n                window.location.href = \"/error\"\n            })\n\n    }, []);\n    const handleSearch = (e) => {\n        const { name, value } = e.target;\n        setSearchInput(value);\n        const x = Registrations.filter(i => i.Facility_year.startsWith(value));\n        x.length !== 0 ? setSearch(x) : setSearch(Registrations)\n    }\n\n    const addReg = (index) => {\n\n        setDistribution(prev => [...prev, Registrations[index]]);\n        console.log(Distribution);\n    }\n    const selectAll = () => {\n        search.map((R, index) => {\n            addReg(index);\n        })\n    }\n    const removeReg = (index) => {\n        const temp = Distribution.filter(i => i !== Registrations[index]);\n        console.log(temp)\n        setDistribution(temp);\n    }\n\n    const handleSubmit = async () => {\n        const payload = {\n            Name: title.Dname,\n            Registrations: Distribution,\n            Version: final,\n            Date: date\n        }\n        console.log(payload);\n        const req = await axios.post('http://localhost:4000/distributions/create', payload);\n\n    }\n\n\n    var Dname, lname, i = 0;\n    const findDoctor = (Fnumber) => {\n        const data = Doctors.filter(i => i.File_Number === Fnumber);\n        console.log(data[0].Fname)\n        Dname = data[0].Fname;\n        lname = data[0].Lname;\n\n    }\n\n    return (\n        <Container>\n            {\n                (loading) ?\n                    <Message icon style={{ marginTop: \"20%\" }}>\n                        <Icon name='circle notched' loading />\n                        <Message.Content>\n                            <Message.Header>Just one second</Message.Header>\n                            We are fetching that content for you.\n                        </Message.Content>\n                    </Message>\n                    :\n                    <div>\n                        <div>\n                            <select onChange={handleSearch} value={searchInput}\n                                style={{\n                                    width: 250,\n                                    height: 35,\n                                    borderRadius: 15,\n                                    borderWidth: 1,\n                                    textAlign: \"center\",\n                                    marginLeft: \"40%\",\n                                    borderColor: \"#eee\",\n                                    outline: \"none\"\n                                }}\n                                placeholder=\"Search by year \"\n                            >\n                                <option value=\"2021-2022\">2021-2022</option>\n                                <option value=\"2022-2023\">2022-2023</option>\n                                <option value=\"2023-2024\">2023-2024</option>\n                                <option value=\"2024-2025\">2024-2025</option>\n                                <option value=\"2025-2026\">2025-2026</option>\n                                <option value=\"2026-2027\">2026-2027</option>\n                                <option value=\"2027-2028\">2027-2028</option>\n\n\n                            </select>\n                            <Icon name=\"search\" size='big' />\n                        </div>\n                        <Table>\n                            <Table.Header>\n                                <Table.Row >\n\n                                    <Table.HeaderCell >Course Code</Table.HeaderCell>\n                                    <Table.HeaderCell >DFile number</Table.HeaderCell>\n                                    <Table.HeaderCell >Faculity year</Table.HeaderCell>\n                                    <Table.HeaderCell >Section</Table.HeaderCell>\n                                    <Table.HeaderCell >Lab_hours</Table.HeaderCell>\n                                    <Table.HeaderCell >Exercise_hours</Table.HeaderCell>\n                                    <Table.HeaderCell >Course_hours</Table.HeaderCell>\n                                    <Table.HeaderCell >Section_ID</Table.HeaderCell>\n                                    <Table.HeaderCell />\n                                </Table.Row>\n                            </Table.Header>\n\n                            <Table.Body>\n                                {\n                                    search.map((i, index) => {\n                                        findDoctor(i.DFile_number);\n                                        return (\n                                            <Table.Row>\n\n                                                <Table.Cell >{i.Course_Code}</Table.Cell>\n                                                <Table.Cell >{Dname + \" \" + lname}</Table.Cell>\n                                                <Table.Cell >{i.Facility_year}</Table.Cell>\n                                                <Table.Cell >{i.Section_ID}</Table.Cell>\n\n                                                <Table.Cell >{i.Lab_hours}</Table.Cell>\n                                                <Table.Cell >{i.Exercise_hours}</Table.Cell>\n                                                <Table.Cell >{i.Course_hours}</Table.Cell>\n                                                <Table.Cell >{i.Section_ID}</Table.Cell>\n                                                <Table.Cell collapsing>\n\n                                                    {!Distribution.includes(Registrations[index]) &&\n                                                        <Button\n                                                            content=\"Add\"\n                                                            icon=\"add\"\n                                                            floated=\"right\"\n                                                            onClick={() => { addReg(index); }}\n                                                            color=\"green\"\n                                                        />\n\n                                                    }\n\n                                                    {Distribution.includes(Registrations[index]) &&\n                                                        <Button\n                                                            content=\"Remove\"\n                                                            icon=\"trash\"\n                                                            floated=\"right\"\n                                                            onClick={() => { removeReg(index); }}\n                                                            color=\"red\"\n                                                        />\n                                                    }\n                                                </Table.Cell>\n                                            </Table.Row>\n                                        )\n                                    })\n\n                                }\n\n\n\n\n                            </Table.Body>\n\n\n                        </Table>\n                        <Modal\n                            onClose={() => setOpen(false)}\n                            onOpen={() => setOpen(true)}\n                            open={open}\n                            trigger={<Button color=\"green\" >Show Modal</Button>}\n                        >\n                            <Modal.Header>Verify the distribution</Modal.Header>\n                            <Modal.Content >\n                                <Modal.Description>\n\n                                    <Message>\n                                        <Message.Header>  Are you sure you want to create the following distribution ?</Message.Header>\n                                        <Message.List>\n                                            {\n                                                Distribution.map((d) => {\n                                                    findDoctor(d.DFile_number)\n                                                    return (\n                                                        <Message.Item>{d.Course_Code} {Dname + \" \" + lname}</Message.Item>\n                                                    )\n                                                })\n                                            }\n                                        </Message.List>\n                                    </Message>\n\n                                    <Input\n                                        label=\"Name \"\n                                        value={title.Dname}\n                                        name=\"Dname\"\n                                        onChange={(e) => {\n                                            const { name, value } = e.target;\n                                            setname(prev => ({ Dname: value }));\n                                            console.log(title);\n                                        }}\n                                    />\n                                    \n            \n                                    <select\n                                        onChange={(e) => {\n                                            const { name, value } = e.target;\n                                            setdate(value);\n                                           \n                                        }}\n                                        style={{\n                                            width: 250,\n                                            height: 38,\n                                            padding:\"0px 4px\",\n                                            borderWidth: 2,\n                                            textAlign: \"center\",\n                                            borderColor: \"#eee\",\n                                            outline: \"none\"\n                                        }}\n                                        name=\"date\"\n                                        value={date}\n                                    >\n                                        \n                                        {\n                                            years.map(i => {\n                                                return (\n                                                    <>\n                                                        <option value={i}>{i}</option>\n                                                    </>\n                                                )\n                                            })\n                                        }\n                                    </select>\n                                    <Radio\n                                        toggle\n                                        onClick={() => { final = !final }}\n                                        label=\"Final version\"\n                                        onChange={() => {\n                                            setFinal(final);\n                                            console.log(final);\n                                        }\n\n                                        } />\n\n                                </Modal.Description>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button color='black' onClick={() => setOpen(false)}>\n                                    Cancel\n                                </Button>\n                                <Button\n                                    content=\"Create\"\n                                    labelPosition='right'\n                                    icon='checkmark'\n                                    onClick={() => {\n                                        handleSubmit();\n                                        window.location.href = \"/distributions\"\n                                    }}\n                                    positive\n                                />\n                            </Modal.Actions>\n                        </Modal>\n                        <Link to=\"/distributions\">\n                            <Button icon=\"left arrow\" content=\"Back\" color=\"red\" />\n                        </Link>\n                        <Button content=\"Select all\" color=\"linkedin\" onClick={selectAll} />\n                    </div>\n            }\n\n\n        </Container>\n    );\n};\n\nexport default Create;","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Distributions\\Details.js",["559","560","561","562","563"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport { Container, Message, Table, Icon ,Divider} from 'semantic-ui-react'\nimport ReactToExcel from 'react-html-table-to-excel';\nimport cookies from 'js-cookies';\n\n\n\nconst Details = () => {\n    const [Distributions, setDistributions] = useState([]);\n    const [Distributions2, setDistributions2] = useState([]);\n    const [Courses, setCourses] = useState([]);\n    const [Doctors, setDoctors] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const { id } = useParams();\n    useEffect(() => {\n        setLoading(true);\n        const token=cookies.getItem(\"token\");\n        console.log(\"my token : \"+token);\n        const payload={headers:{Authorization:token}};\n        axios.get('http://localhost:4000/distributions/details/' + id,payload)\n        .then(Ds=>{\n            const myData = [].concat(Ds.data.Dist.Registrations)\n            .sort((a, b) => a.Course_Code  > b.Course_Code  ? 1 : -1);\n            const myData2 = [].concat(Ds.data.Dist.Registrations)\n            .sort((a, b) => a.DFile_number  > b.DFile_number  ? 1 : -1);\n\n         \n            setDistributions(myData);         \n            setDistributions2(myData2);\n            setDoctors(Ds.data.Drs);\n            setCourses(Ds.data.Crs);\n            setLoading(false);\n           \n        })\n        .catch(err=>{\n            console.log(err);\n            window.location.href=\"/error\"\n        })\n      \n    }, []);\n    var name,SemesterNb,coursename,contracttype,courseTotalhours=0,hourstaken=0,emptyhours=0,Rank;\n    \n    const findDoctor=(Fnumber)=>{\n        const data=Doctors.filter(i=>i.File_Number === Fnumber);\n        console.log(data[0].Fname)\n        name=data[0].Fname;\n        contracttype=data[0].Contract_Type;\n        Rank=data[0].Rank;\n    }\n\n    const findCourse=(code)=>{\n        courseTotalhours=0\n        const data=Courses.filter(i=>i.Course_code === code);\n        const data2=Distributions.filter(i=>i.Course_Code === code);\n        SemesterNb=data[0].Semester_Nb;\n        coursename=data[0].course_name;\n        data2.map(i=>{\n            courseTotalhours+=i.Course_hours+i.Lab_hours+i.Exercise_hours;\n        })\n       \n    }\n    // const findhours=(code)=>{\n    //     hourstaken=0;\n    //     const data=Distributions.filter(i=>i.Course_Code === code);\n    //     data.map(i=>{\n    //         hourstaken+=i.Lab_hours + i.Course_hours+i.Exercise_hours;\n    //     })\n    //     emptyhours=courseTotalhours-hourstaken;\n       \n\n    // }\n    var Teachinghouurs=0;\n    const  findteachinghours=(Fnb)=>{\n        Teachinghouurs=0\n        const data=Distributions.filter(i=>i.DFile_number === Fnb);\n        data.map(i=>{\n            Teachinghouurs+=i.Lab_hours + i.Course_hours+i.Exercise_hours;\n        })\n       \n    }\n\n\n    return (\n        <Container>\n            {\n                (loading) ?\n                    <Message icon style={{ marginTop: \"20%\" }}>\n                        <Icon name='circle notched' loading />\n                        <Message.Content>\n                            <Message.Header>Just one second</Message.Header>\n                            We are fetching that content for you.\n                            </Message.Content>\n                    </Message>\n                    :\n                            <div>\n                                <Divider section horizontal >By Courses</Divider>\n                            <Table  id=\"distribution-details-table\">\n                                <Table.Header>\n                                    <Table.Row >\n\n                                        <Table.HeaderCell >Course Code</Table.HeaderCell>\n                                       \n                                        <Table.HeaderCell >Semester Number</Table.HeaderCell>\n                                        <Table.HeaderCell >Course Name</Table.HeaderCell>\n                                        <Table.HeaderCell >Lab_hours</Table.HeaderCell>\n                                        <Table.HeaderCell >Exercise_hours</Table.HeaderCell>\n                                        <Table.HeaderCell >Course_hours</Table.HeaderCell>\n                                        <Table.HeaderCell >Language</Table.HeaderCell>\n                                        <Table.HeaderCell >Section_ID</Table.HeaderCell>\n                                        <Table.HeaderCell >Doctor Name</Table.HeaderCell>\n                                        <Table.HeaderCell >Contract Type</Table.HeaderCell>\n                                        <Table.HeaderCell >Total hours</Table.HeaderCell>\n                                        <Table.HeaderCell >Location</Table.HeaderCell>\n\n                                    </Table.Row>\n                                </Table.Header>\n\n                                <Table.Body>\n                                    {\n                                        Distributions.map((i,index) => {\n                                            findDoctor(i.DFile_number);\n                                            findCourse(i.Course_Code);\n                                            //findhours(i.Course_Code)\n                                            return (\n                                                <Table.Row>\n\n                                                    <Table.Cell >{i.Course_Code}</Table.Cell>\n                                                    \n                                                    <Table.Cell >\n                                                    { SemesterNb }\n                                                    </Table.Cell>\n                                                    <Table.Cell >{coursename}</Table.Cell>\n                                                    <Table.Cell >{i.Lab_hours}</Table.Cell>\n                                                    <Table.Cell >{i.Exercise_hours}</Table.Cell>\n                                                    <Table.Cell >{i.Course_hours}</Table.Cell>\n                                                    <Table.Cell >{i.Language}</Table.Cell>\n                                                    <Table.Cell >{i.Section_ID}</Table.Cell>\n                                                    <Table.Cell >{name}</Table.Cell>\n                                                    <Table.Cell >{contracttype}</Table.Cell>\n                                                    <Table.Cell >{courseTotalhours}</Table.Cell>\n                                                    <Table.Cell >{ i.Location}</Table.Cell>\n\n                                                </Table.Row>\n                                            )\n                                        })\n\n                                    }\n\n\n\n\n                                </Table.Body>\n\n\n                            </Table>\n                            <ReactToExcel \n                            table=\"distribution-details-table\"\n                            filename=\"Distribution details \"\n                            sheet=\"Sheet\"\n                            buttonText=\"Export To Excel\"\n                            className=\"ui primary button\"\n                            />\n\n\n                            <Divider section horizontal>By Doctors</Divider>\n                            <Table  id=\"distribution2-details-table\">\n                                <Table.Header>\n                                    <Table.Row >\n\n                                        <Table.HeaderCell >Doctor Name</Table.HeaderCell>\n                                       \n                                        <Table.HeaderCell >Rank</Table.HeaderCell>\n                                        <Table.HeaderCell >Contract Type</Table.HeaderCell>\n                                        <Table.HeaderCell >Course name</Table.HeaderCell>\n                                        <Table.HeaderCell >Semester Nb</Table.HeaderCell>\n                                        <Table.HeaderCell >Course Code</Table.HeaderCell>\n                                        <Table.HeaderCell >Lab - Course -Exercise</Table.HeaderCell>\n                                        <Table.HeaderCell >Teaching Hours</Table.HeaderCell>\n                                        <Table.HeaderCell >Language</Table.HeaderCell>\n                                        <Table.HeaderCell >Total hours</Table.HeaderCell>\n\n                                    </Table.Row>\n                                </Table.Header>\n\n                                <Table.Body>\n                                    {\n                                        Distributions2.map((i,index) => {\n                                            findDoctor(i.DFile_number);\n                                            findCourse(i.Course_Code);\n                                            findteachinghours(i.DFile_number)\n                                            var h=i.Exercise_hours+i.Lab_hours+i.Course_hours;\n                                            return (\n                                                <Table.Row>\n\n                                                    <Table.Cell >{name}</Table.Cell>\n                                                    \n                                                    <Table.Cell >\n                                                    { Rank }\n                                                    </Table.Cell>\n                                                    <Table.Cell >{contracttype}</Table.Cell>\n                                                    <Table.Cell >{coursename}</Table.Cell>\n                                                    <Table.Cell >{SemesterNb}</Table.Cell>\n                                                    <Table.Cell >{i.Course_Code}</Table.Cell>\n\n\n\n                                                    <Table.Cell>{(i.Course) ? (i.Lab) ? (i.Exercise)? \"C+L+E\":\"C+L\" :(i.Exercise)? \"C+E\":\"C\" :\n                                                    (i.Lab) ? (i.Exercise)? \"L+E\":\"L\" :(i.Exercise)? \"E\":null\n                                                    }</Table.Cell>\n\n                                                    <Table.Cell >{h}</Table.Cell>\n\n                                                    <Table.Cell >{i.Language}</Table.Cell>\n                                                   \n                                                    <Table.Cell >{ Teachinghouurs}</Table.Cell>\n\n                                                </Table.Row>\n                                            )\n                                        })\n\n                                    }\n\n\n\n\n                                </Table.Body>\n\n\n                            </Table>\n                            <ReactToExcel \n                            table=\"distribution2-details-table\"\n                            filename=\"Distribution details \"\n                            sheet=\"Sheet\"\n                            buttonText=\"Export To Excel\"\n                            className=\"ui primary button\"\n                            />\n                            </div>\n                    \n                    \n            }\n           \n\n        </Container>\n    );\n\n}\nexport default Details;","C:\\Users\\Mohammad Ramadan\\Desktop\\Course-distribution-system-master\\Course-distribution-system-master\\course-distribution\\src\\Distributions\\Update.js",["564","565","566","567","568","569","570","571"],"import React, { useEffect, useState } from 'react';\nimport { Container, Button, Modal, Input, Message, Table, Icon, Radio } from 'semantic-ui-react'\nimport axios from 'axios';\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { Link, useParams } from 'react-router-dom';\nimport cookies from 'js-cookies';\n\nvar years = [];\nconst yearList = () => {\n    var i, j;\n    var temp = [];\n    const year = new Date().getFullYear();\n    const x = parseInt(year);\n    for (i = 0, j = 1; i < 5, j < 10; i++, j++) {\n        var myyear = (x + i) + \"-\" + (x + j);\n        temp.push(myyear);\n    }\n    years = temp;\n}\nyearList();\nconst Update = () => {\n    const [Registrations, setRegistrations] = useState([]);\n    const [Distribution, setDistribution] = useState([]);\n    const [Doctors, setDoctors] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [title, setname] = useState(null);\n    const [date, setdate] = useState(null);\n    var [final, setFinal] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [search, setSearch] = useState([]);\n    const year = new Date().getFullYear();\n    const temp = parseInt(year) + 1;\n    const [searchInput, setSearchInput] = useState(year + \"-\" + temp);\n    const { id } = useParams();\n\n    useEffect( async () => {\n        setLoading(true);\n        const token = cookies.getItem(\"token\");\n        const payload = { headers: { Authorization: token } };\n        await axios.get('http://localhost:4000/distributions/create')\n            .then(req => {\n                const myData = [].concat(req.data.Reg)\n                    .sort((a, b) => a.Facility_year < b.Facility_year ? 1 : -1);\n                setRegistrations(myData);\n                setDoctors(req.data.Doc);\n                setSearch(prev => (myData.filter(i => i.Facility_year.startsWith(searchInput))))\n            })\n            .catch(err => {\n                console.log(err);\n                //window.location.href = \"/error\"\n            })\n\n    \n\n\n        axios.get('http://localhost:4000/distributions/update/' + id, payload)\n            .then(req2 => {\n                console.log(req2.data);\n                //setDistribution(req2.data.Registrations);\n                setname(req2.data.Name);\n                setdate(req2.data.Date);\n                setFinal(req2.data.Version);\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n               // window.location.href = \"/error\"\n            })\n\n    }, []);\n\n\n\n\n\n\n    const addReg = (index) => {\n\n        setDistribution(prev => [...prev, Registrations[index]]);\n        console.log(Distribution);\n    }\n    const removeReg = (index) => {\n        const temp = Distribution.filter(i => i._id !== Registrations[index]._id);\n        console.log(temp)\n        setDistribution(temp);\n    }\n\n    const handleSubmit = async () => {\n        const payload = {\n            Name: title,\n            Registrations: Distribution,\n            Version: final,\n            Date: date\n        }\n        console.log(payload);\n        const req = await axios.put('http://localhost:4000/distributions/update/' + id, payload);\n        window.location.href = \"/distributions\"\n\n    }\n    const handleSearch = (e) => {\n        const { name, value } = e.target;\n        setSearchInput(value);\n        const x = Registrations.filter(i => i.Facility_year.startsWith(value));\n        x.length !== 0 ? setSearch(x) : setSearch(Registrations)\n    }\n\n    const selectAll = () => {\n        setDistribution([])\n        search.map((R, index) => {\n            setDistribution(prev => [...prev, Registrations[index]]);\n        })\n    }\n\n    const display = (i) => {\n        const temp = Distribution.filter(x => x._id === i._id);\n        if (temp.length >= 1) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    var Dname, lname;\n    const findDoctor = (Fnumber) => {\n        const data = Doctors.filter(i => i.File_Number === Fnumber);\n        console.log(data[0].Fname)\n        Dname = data[0].Fname;\n        lname = data[0].Lname;\n\n    }\n\n    return (\n        <Container>\n            {\n                (loading) ?\n                    <Message icon style={{ marginTop: \"20%\" }}>\n                        <Icon name='circle notched' loading />\n                        <Message.Content>\n                            <Message.Header>Just one second</Message.Header>\n           We are fetching that content for you.\n         </Message.Content>\n                    </Message>\n                    :\n                    <div>\n                        <div>\n                            <input type=\"search\" onChange={handleSearch} value={searchInput}\n                                style={{\n                                    width: 250,\n                                    height: 35,\n                                    borderRadius: 15,\n                                    borderWidth: 1,\n                                    textAlign: \"center\",\n                                    marginLeft: \"40%\",\n                                    borderColor: \"#eee\",\n                                    outline: \"none\"\n                                }}\n                                placeholder=\"Search by year \"\n                            />\n                            <Icon name=\"search\" size='big' />\n                        </div>\n                        <Table>\n                            <Table.Header>\n                                <Table.Row >\n\n                                    <Table.HeaderCell >Course Code</Table.HeaderCell>\n                                    <Table.HeaderCell >DFile number</Table.HeaderCell>\n                                    <Table.HeaderCell >Faculity year</Table.HeaderCell>\n                                    <Table.HeaderCell >Section</Table.HeaderCell>\n\n                                    <Table.HeaderCell >Lab_hours</Table.HeaderCell>\n                                    <Table.HeaderCell >Exercise_hours</Table.HeaderCell>\n                                    <Table.HeaderCell >Course_hours</Table.HeaderCell>\n                                    <Table.HeaderCell >Section_ID</Table.HeaderCell>\n                                    <Table.HeaderCell />\n                                </Table.Row>\n                            </Table.Header>\n\n                            <Table.Body>\n                                {\n                                    search.map((i, index) => {\n                                        findDoctor(i.DFile_number);\n                                        return (\n                                            <Table.Row>\n\n                                                <Table.Cell >{i.Course_Code}</Table.Cell>\n                                                <Table.Cell >{Dname} {lname}</Table.Cell>\n                                                <Table.Cell >{i.Facility_year}</Table.Cell>\n                                                <Table.Cell >{i.Section_ID}</Table.Cell>\n                                                <Table.Cell >{i.Lab_hours}</Table.Cell>\n                                                <Table.Cell >{i.Exercise_hours}</Table.Cell>\n                                                <Table.Cell >{i.Course_hours}</Table.Cell>\n                                                <Table.Cell >{i.Section_ID}</Table.Cell>\n                                                <Table.Cell collapsing>\n\n                                                    {display(i)\n                                                        //    !Distribution.includes(Registrations[index]) \n                                                        &&\n                                                        <Button\n                                                            content=\"Add\"\n                                                            icon=\"add\"\n                                                            floated=\"right\"\n                                                            onClick={() => { addReg(index); }}\n                                                            color=\"green\"\n                                                        />\n\n                                                    }\n\n                                                    {!display(i) &&\n                                                        //Distribution.includes(Registrations[index]) &&\n                                                        <Button\n                                                            content=\"Remove\"\n                                                            icon=\"trash\"\n                                                            floated=\"right\"\n                                                            onClick={() => { removeReg(index); }}\n                                                            color=\"red\"\n                                                        />\n                                                    }\n                                                </Table.Cell>\n                                            </Table.Row>\n                                        )\n                                    })\n\n                                }\n\n\n\n\n                            </Table.Body>\n\n\n                        </Table>\n                        <Modal\n                            onClose={() => setOpen(false)}\n                            onOpen={() => setOpen(true)}\n                            open={open}\n                            trigger={<Button color=\"green\" >Show Modal</Button>}\n                        >\n                            <Modal.Header>Complete the distribution</Modal.Header>\n                            <Modal.Content >\n                                <Modal.Description>\n\n                                    <Message>\n                                        <Message.Header>  Are you sure you want to create the following distribution ?</Message.Header>\n                                        <Message.List>\n                                            {\n                                                Distribution.map((d) => {\n                                                    findDoctor(d.DFile_number);\n                                                    return (\n                                                        <Message.Item>{d.Course_Code} {Dname + \" \" + lname}</Message.Item>\n                                                    )\n                                                })\n                                            }\n                                        </Message.List>\n                                    </Message>\n\n                                    <Input\n                                        label=\"Name \"\n                                        value={title}\n                                        name=\"title\"\n                                        onChange={(e) => {\n                                            const { name, value } = e.target;\n                                            setname(value);\n                                            console.log(title);\n                                        }}\n                                    />\n                                  \n                                  <select\n                                        onChange={(e) => {\n                                            const { name, value } = e.target;\n                                            setdate(value);\n                                           \n                                        }}\n                                        style={{\n                                            width: 250,\n                                            height: 38,\n                                            padding:\"0px 4px\",\n                                            borderWidth: 2,\n                                            textAlign: \"center\",\n                                            borderColor: \"#eee\",\n                                            outline: \"none\"\n                                        }}\n                                        name=\"date\"\n                                        value={date}\n                                    >\n                                        \n                                        {\n                                            years.map(i => {\n                                                return (\n                                                    <>\n                                                        <option value={i}>{i}</option>\n                                                    </>\n                                                )\n                                            })\n                                        }\n                                    </select>\n                                    <Radio\n                                        toggle\n                                        onClick={() => { final = !final }}\n                                        checked={final}\n                                        label=\"Final version\"\n                                        onChange={() => {\n                                            setFinal(final);\n                                            console.log(final);\n                                        }\n\n                                        } />\n\n                                </Modal.Description>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button color='black' onClick={() => setOpen(false)}>\n                                    Cancel\n                    </Button>\n                                <Button\n                                    content=\"Update\"\n                                    labelPosition='right'\n                                    icon='checkmark'\n                                    onClick={handleSubmit}\n                                    positive\n                                />\n                            </Modal.Actions>\n                        </Modal>\n                        <Link to=\"/distributions\">\n                            <Button icon=\"left arrow\" content=\"Back\" color=\"red\" />\n                        </Link>\n                        <Button content=\"Select all\" color=\"linkedin\" onClick={selectAll} />\n                    </div>\n            }\n\n\n        </Container>\n    );\n};\n\nexport default Update;\n\n\n",{"ruleId":"572","replacedBy":"573"},{"ruleId":"574","replacedBy":"575"},{"ruleId":"576","severity":1,"message":"577","line":1,"column":17,"nodeType":"578","messageId":"579","endLine":1,"endColumn":26},{"ruleId":"580","severity":1,"message":"581","line":9,"column":15,"nodeType":"582","endLine":16,"endColumn":6},{"ruleId":"580","severity":1,"message":"583","line":16,"column":7,"nodeType":"584","endLine":16,"endColumn":9,"suggestions":"585"},{"ruleId":"576","severity":1,"message":"586","line":73,"column":40,"nodeType":"578","messageId":"579","endLine":73,"endColumn":43},{"ruleId":"576","severity":1,"message":"587","line":3,"column":9,"nodeType":"578","messageId":"579","endLine":3,"endColumn":17},{"ruleId":"576","severity":1,"message":"588","line":7,"column":9,"nodeType":"578","messageId":"579","endLine":7,"endColumn":12},{"ruleId":"580","severity":1,"message":"581","line":11,"column":15,"nodeType":"582","endLine":17,"endColumn":6},{"ruleId":"580","severity":1,"message":"589","line":17,"column":7,"nodeType":"584","endLine":17,"endColumn":9,"suggestions":"590"},{"ruleId":"580","severity":1,"message":"581","line":10,"column":13,"nodeType":"582","endLine":17,"endColumn":4},{"ruleId":"580","severity":1,"message":"591","line":15,"column":13,"nodeType":"592","endLine":15,"endColumn":24},{"ruleId":"580","severity":1,"message":"581","line":9,"column":15,"nodeType":"582","endLine":16,"endColumn":6},{"ruleId":"576","severity":1,"message":"586","line":70,"column":40,"nodeType":"578","messageId":"579","endLine":70,"endColumn":43},{"ruleId":"580","severity":1,"message":"581","line":10,"column":15,"nodeType":"582","endLine":16,"endColumn":6},{"ruleId":"580","severity":1,"message":"589","line":16,"column":7,"nodeType":"584","endLine":16,"endColumn":9,"suggestions":"593"},{"ruleId":"572","replacedBy":"594"},{"ruleId":"574","replacedBy":"595"},{"ruleId":"576","severity":1,"message":"577","line":1,"column":17,"nodeType":"578","messageId":"579","endLine":1,"endColumn":26},{"ruleId":"576","severity":1,"message":"596","line":8,"column":19,"nodeType":"578","messageId":"579","endLine":8,"endColumn":29},{"ruleId":"576","severity":1,"message":"597","line":2,"column":57,"nodeType":"578","messageId":"579","endLine":2,"endColumn":62},{"ruleId":"576","severity":1,"message":"598","line":11,"column":11,"nodeType":"578","messageId":"579","endLine":11,"endColumn":15},{"ruleId":"576","severity":1,"message":"599","line":14,"column":11,"nodeType":"578","messageId":"579","endLine":14,"endColumn":12},{"ruleId":"576","severity":1,"message":"600","line":35,"column":14,"nodeType":"578","messageId":"579","endLine":35,"endColumn":18},{"ruleId":"576","severity":1,"message":"601","line":96,"column":41,"nodeType":"578","messageId":"579","endLine":96,"endColumn":45},{"ruleId":"576","severity":1,"message":"586","line":129,"column":37,"nodeType":"578","messageId":"579","endLine":129,"endColumn":40},{"ruleId":"576","severity":1,"message":"577","line":1,"column":17,"nodeType":"578","messageId":"579","endLine":1,"endColumn":26},{"ruleId":"576","severity":1,"message":"602","line":20,"column":9,"nodeType":"578","messageId":"579","endLine":20,"endColumn":16},{"ruleId":"576","severity":1,"message":"603","line":16,"column":11,"nodeType":"578","messageId":"579","endLine":16,"endColumn":18},{"ruleId":"580","severity":1,"message":"589","line":31,"column":6,"nodeType":"584","endLine":31,"endColumn":8,"suggestions":"604"},{"ruleId":"580","severity":1,"message":"591","line":19,"column":15,"nodeType":"592","endLine":19,"endColumn":26},{"ruleId":"580","severity":1,"message":"589","line":34,"column":7,"nodeType":"584","endLine":34,"endColumn":9,"suggestions":"605"},{"ruleId":"576","severity":1,"message":"606","line":37,"column":14,"nodeType":"578","messageId":"579","endLine":37,"endColumn":26},{"ruleId":"576","severity":1,"message":"607","line":37,"column":27,"nodeType":"578","messageId":"579","endLine":37,"endColumn":31},{"ruleId":"576","severity":1,"message":"608","line":2,"column":50,"nodeType":"578","messageId":"579","endLine":2,"endColumn":57},{"ruleId":"576","severity":1,"message":"586","line":111,"column":40,"nodeType":"578","messageId":"579","endLine":111,"endColumn":43},{"ruleId":"609","severity":1,"message":"610","line":13,"column":29,"nodeType":"611","messageId":"612","endLine":13,"endColumn":30},{"ruleId":"580","severity":1,"message":"581","line":34,"column":15,"nodeType":"582","endLine":52,"endColumn":6},{"ruleId":"580","severity":1,"message":"613","line":52,"column":8,"nodeType":"584","endLine":52,"endColumn":10,"suggestions":"614"},{"ruleId":"576","severity":1,"message":"600","line":54,"column":17,"nodeType":"578","messageId":"579","endLine":54,"endColumn":21},{"ruleId":"615","severity":1,"message":"616","line":66,"column":31,"nodeType":"582","messageId":"617","endLine":66,"endColumn":33},{"ruleId":"576","severity":1,"message":"586","line":84,"column":15,"nodeType":"578","messageId":"579","endLine":84,"endColumn":18},{"ruleId":"576","severity":1,"message":"618","line":89,"column":23,"nodeType":"578","messageId":"579","endLine":89,"endColumn":24},{"ruleId":"576","severity":1,"message":"600","line":234,"column":53,"nodeType":"578","messageId":"579","endLine":234,"endColumn":57},{"ruleId":"576","severity":1,"message":"600","line":243,"column":53,"nodeType":"578","messageId":"579","endLine":243,"endColumn":57},{"ruleId":"580","severity":1,"message":"581","line":9,"column":15,"nodeType":"582","endLine":16,"endColumn":6},{"ruleId":"576","severity":1,"message":"586","line":70,"column":40,"nodeType":"578","messageId":"579","endLine":70,"endColumn":43},{"ruleId":"576","severity":1,"message":"619","line":4,"column":8,"nodeType":"578","messageId":"579","endLine":4,"endColumn":18},{"ruleId":"580","severity":1,"message":"581","line":15,"column":15,"nodeType":"582","endLine":19,"endColumn":6},{"ruleId":"576","severity":1,"message":"586","line":39,"column":15,"nodeType":"578","messageId":"579","endLine":39,"endColumn":18},{"ruleId":"576","severity":1,"message":"600","line":144,"column":41,"nodeType":"578","messageId":"579","endLine":144,"endColumn":45},{"ruleId":"576","severity":1,"message":"600","line":154,"column":41,"nodeType":"578","messageId":"579","endLine":154,"endColumn":45},{"ruleId":"576","severity":1,"message":"600","line":165,"column":33,"nodeType":"578","messageId":"579","endLine":165,"endColumn":37},{"ruleId":"576","severity":1,"message":"620","line":165,"column":39,"nodeType":"578","messageId":"579","endLine":165,"endColumn":44},{"ruleId":"580","severity":1,"message":"581","line":10,"column":15,"nodeType":"582","endLine":17,"endColumn":6},{"ruleId":"580","severity":1,"message":"589","line":17,"column":8,"nodeType":"584","endLine":17,"endColumn":10,"suggestions":"621"},{"ruleId":"580","severity":1,"message":"589","line":42,"column":8,"nodeType":"584","endLine":42,"endColumn":10,"suggestions":"622"},{"ruleId":"576","severity":1,"message":"623","line":43,"column":68,"nodeType":"578","messageId":"579","endLine":43,"endColumn":78},{"ruleId":"576","severity":1,"message":"624","line":43,"column":81,"nodeType":"578","messageId":"579","endLine":43,"endColumn":91},{"ruleId":"615","severity":1,"message":"616","line":59,"column":20,"nodeType":"582","messageId":"617","endLine":59,"endColumn":22},{"ruleId":"615","severity":1,"message":"616","line":78,"column":19,"nodeType":"582","messageId":"617","endLine":78,"endColumn":21},{"ruleId":"576","severity":1,"message":"625","line":2,"column":48,"nodeType":"578","messageId":"579","endLine":2,"endColumn":59},{"ruleId":"580","severity":1,"message":"613","line":41,"column":7,"nodeType":"584","endLine":41,"endColumn":9,"suggestions":"626"},{"ruleId":"576","severity":1,"message":"600","line":51,"column":12,"nodeType":"578","messageId":"579","endLine":51,"endColumn":16},{"ruleId":"576","severity":1,"message":"586","line":217,"column":44,"nodeType":"578","messageId":"579","endLine":217,"endColumn":47},{"ruleId":"576","severity":1,"message":"627","line":2,"column":9,"nodeType":"578","messageId":"579","endLine":2,"endColumn":18},{"ruleId":"609","severity":1,"message":"610","line":13,"column":19,"nodeType":"611","messageId":"612","endLine":13,"endColumn":20},{"ruleId":"576","severity":1,"message":"628","line":52,"column":10,"nodeType":"578","messageId":"579","endLine":52,"endColumn":16},{"ruleId":"615","severity":1,"message":"616","line":71,"column":19,"nodeType":"582","messageId":"617","endLine":71,"endColumn":21},{"ruleId":"580","severity":1,"message":"629","line":118,"column":6,"nodeType":"584","endLine":118,"endColumn":8,"suggestions":"630"},{"ruleId":"580","severity":1,"message":"581","line":32,"column":13,"nodeType":"582","endLine":53,"endColumn":4},{"ruleId":"580","severity":1,"message":"631","line":53,"column":6,"nodeType":"584","endLine":53,"endColumn":8,"suggestions":"632"},{"ruleId":"576","severity":1,"message":"601","line":78,"column":11,"nodeType":"578","messageId":"579","endLine":78,"endColumn":15},{"ruleId":"609","severity":1,"message":"610","line":24,"column":21,"nodeType":"611","messageId":"612","endLine":24,"endColumn":22},{"ruleId":"576","severity":1,"message":"628","line":72,"column":10,"nodeType":"578","messageId":"579","endLine":72,"endColumn":16},{"ruleId":"576","severity":1,"message":"633","line":77,"column":10,"nodeType":"578","messageId":"579","endLine":77,"endColumn":14},{"ruleId":"615","severity":1,"message":"616","line":91,"column":19,"nodeType":"582","messageId":"617","endLine":91,"endColumn":21},{"ruleId":"580","severity":1,"message":"634","line":151,"column":6,"nodeType":"584","endLine":151,"endColumn":8,"suggestions":"635"},{"ruleId":"609","severity":1,"message":"610","line":14,"column":29,"nodeType":"611","messageId":"612","endLine":14,"endColumn":30},{"ruleId":"580","severity":1,"message":"581","line":36,"column":16,"nodeType":"582","endLine":70,"endColumn":6},{"ruleId":"580","severity":1,"message":"636","line":70,"column":8,"nodeType":"584","endLine":70,"endColumn":10,"suggestions":"637"},{"ruleId":"576","severity":1,"message":"586","line":96,"column":15,"nodeType":"578","messageId":"579","endLine":96,"endColumn":18},{"ruleId":"576","severity":1,"message":"600","line":101,"column":17,"nodeType":"578","messageId":"579","endLine":101,"endColumn":21},{"ruleId":"615","severity":1,"message":"616","line":109,"column":31,"nodeType":"582","messageId":"617","endLine":109,"endColumn":33},{"ruleId":"576","severity":1,"message":"600","line":261,"column":53,"nodeType":"578","messageId":"579","endLine":261,"endColumn":57},{"ruleId":"576","severity":1,"message":"600","line":269,"column":53,"nodeType":"578","messageId":"579","endLine":269,"endColumn":57},{"ruleId":"638","severity":1,"message":"639","line":16,"column":5,"nodeType":"640","messageId":"641","endLine":16,"endColumn":10},{"ruleId":"580","severity":1,"message":"642","line":25,"column":3,"nodeType":"578","endLine":25,"endColumn":12,"suggestions":"643"},{"ruleId":"644","severity":1,"message":"645","line":174,"column":9,"nodeType":"646","endLine":174,"endColumn":12},{"ruleId":"576","severity":1,"message":"647","line":11,"column":8,"nodeType":"578","messageId":"579","endLine":11,"endColumn":24},{"ruleId":"576","severity":1,"message":"587","line":12,"column":8,"nodeType":"578","messageId":"579","endLine":12,"endColumn":16},{"ruleId":"580","severity":1,"message":"642","line":28,"column":7,"nodeType":"578","endLine":28,"endColumn":16,"suggestions":"648"},{"ruleId":"638","severity":1,"message":"639","line":16,"column":5,"nodeType":"640","messageId":"641","endLine":16,"endColumn":10},{"ruleId":"580","severity":1,"message":"642","line":25,"column":3,"nodeType":"578","endLine":25,"endColumn":12,"suggestions":"649"},{"ruleId":"644","severity":1,"message":"645","line":174,"column":9,"nodeType":"646","endLine":174,"endColumn":12},{"ruleId":"576","severity":1,"message":"577","line":1,"column":17,"nodeType":"578","messageId":"579","endLine":1,"endColumn":26},{"ruleId":"576","severity":1,"message":"647","line":11,"column":8,"nodeType":"578","messageId":"579","endLine":11,"endColumn":24},{"ruleId":"576","severity":1,"message":"587","line":12,"column":8,"nodeType":"578","messageId":"579","endLine":12,"endColumn":16},{"ruleId":"580","severity":1,"message":"642","line":28,"column":7,"nodeType":"578","endLine":28,"endColumn":16,"suggestions":"650"},{"ruleId":"576","severity":1,"message":"625","line":2,"column":48,"nodeType":"578","messageId":"579","endLine":2,"endColumn":59},{"ruleId":"576","severity":1,"message":"586","line":104,"column":44,"nodeType":"578","messageId":"579","endLine":104,"endColumn":47},{"ruleId":"580","severity":1,"message":"629","line":69,"column":6,"nodeType":"584","endLine":69,"endColumn":8,"suggestions":"651"},{"ruleId":"576","severity":1,"message":"601","line":79,"column":11,"nodeType":"578","messageId":"579","endLine":79,"endColumn":15},{"ruleId":"576","severity":1,"message":"652","line":88,"column":7,"nodeType":"578","messageId":"579","endLine":88,"endColumn":13},{"ruleId":"615","severity":1,"message":"616","line":89,"column":17,"nodeType":"582","messageId":"617","endLine":89,"endColumn":19},{"ruleId":"576","severity":1,"message":"577","line":1,"column":17,"nodeType":"578","messageId":"579","endLine":1,"endColumn":26},{"ruleId":"576","severity":1,"message":"602","line":20,"column":9,"nodeType":"578","messageId":"579","endLine":20,"endColumn":16},{"ruleId":"576","severity":1,"message":"597","line":2,"column":57,"nodeType":"578","messageId":"579","endLine":2,"endColumn":62},{"ruleId":"576","severity":1,"message":"598","line":11,"column":11,"nodeType":"578","messageId":"579","endLine":11,"endColumn":15},{"ruleId":"576","severity":1,"message":"599","line":12,"column":11,"nodeType":"578","messageId":"579","endLine":12,"endColumn":12},{"ruleId":"576","severity":1,"message":"601","line":69,"column":41,"nodeType":"578","messageId":"579","endLine":69,"endColumn":45},{"ruleId":"576","severity":1,"message":"586","line":102,"column":37,"nodeType":"578","messageId":"579","endLine":102,"endColumn":40},{"ruleId":"576","severity":1,"message":"587","line":3,"column":9,"nodeType":"578","messageId":"579","endLine":3,"endColumn":17},{"ruleId":"576","severity":1,"message":"597","line":2,"column":55,"nodeType":"578","messageId":"579","endLine":2,"endColumn":60},{"ruleId":"576","severity":1,"message":"598","line":12,"column":11,"nodeType":"578","messageId":"579","endLine":12,"endColumn":15},{"ruleId":"576","severity":1,"message":"599","line":13,"column":9,"nodeType":"578","messageId":"579","endLine":13,"endColumn":10},{"ruleId":"576","severity":1,"message":"601","line":73,"column":41,"nodeType":"578","messageId":"579","endLine":73,"endColumn":45},{"ruleId":"576","severity":1,"message":"586","line":107,"column":41,"nodeType":"578","messageId":"579","endLine":107,"endColumn":44},{"ruleId":"580","severity":1,"message":"631","line":95,"column":6,"nodeType":"584","endLine":95,"endColumn":8,"suggestions":"653"},{"ruleId":"576","severity":1,"message":"652","line":119,"column":9,"nodeType":"578","messageId":"579","endLine":119,"endColumn":15},{"ruleId":"615","severity":1,"message":"616","line":121,"column":19,"nodeType":"582","messageId":"617","endLine":121,"endColumn":21},{"ruleId":"580","severity":1,"message":"591","line":19,"column":15,"nodeType":"592","endLine":19,"endColumn":26},{"ruleId":"576","severity":1,"message":"603","line":16,"column":11,"nodeType":"578","messageId":"579","endLine":16,"endColumn":18},{"ruleId":"580","severity":1,"message":"589","line":31,"column":6,"nodeType":"584","endLine":31,"endColumn":8,"suggestions":"654"},{"ruleId":"576","severity":1,"message":"596","line":8,"column":19,"nodeType":"578","messageId":"579","endLine":8,"endColumn":29},{"ruleId":"576","severity":1,"message":"608","line":2,"column":50,"nodeType":"578","messageId":"579","endLine":2,"endColumn":57},{"ruleId":"576","severity":1,"message":"655","line":28,"column":11,"nodeType":"578","messageId":"579","endLine":28,"endColumn":23},{"ruleId":"656","severity":2,"message":"657","line":30,"column":17,"nodeType":"578","messageId":"658","endLine":30,"endColumn":22},{"ruleId":"656","severity":2,"message":"659","line":32,"column":19,"nodeType":"578","messageId":"658","endLine":32,"endColumn":24},{"ruleId":"656","severity":2,"message":"660","line":33,"column":17,"nodeType":"578","messageId":"658","endLine":33,"endColumn":21},{"ruleId":"576","severity":1,"message":"586","line":36,"column":13,"nodeType":"578","messageId":"579","endLine":36,"endColumn":16},{"ruleId":"576","severity":1,"message":"586","line":95,"column":40,"nodeType":"578","messageId":"579","endLine":95,"endColumn":43},{"ruleId":"576","severity":1,"message":"588","line":8,"column":9,"nodeType":"578","messageId":"579","endLine":8,"endColumn":12},{"ruleId":"580","severity":1,"message":"589","line":25,"column":7,"nodeType":"584","endLine":25,"endColumn":9,"suggestions":"661"},{"ruleId":"580","severity":1,"message":"581","line":18,"column":15,"nodeType":"582","endLine":60,"endColumn":6},{"ruleId":"580","severity":1,"message":"589","line":60,"column":8,"nodeType":"584","endLine":60,"endColumn":10,"suggestions":"662"},{"ruleId":"576","severity":1,"message":"586","line":81,"column":15,"nodeType":"578","messageId":"579","endLine":81,"endColumn":18},{"ruleId":"576","severity":1,"message":"600","line":216,"column":41,"nodeType":"578","messageId":"579","endLine":216,"endColumn":45},{"ruleId":"576","severity":1,"message":"600","line":226,"column":41,"nodeType":"578","messageId":"579","endLine":226,"endColumn":45},{"ruleId":"580","severity":1,"message":"589","line":42,"column":8,"nodeType":"584","endLine":42,"endColumn":10,"suggestions":"663"},{"ruleId":"615","severity":1,"message":"616","line":61,"column":19,"nodeType":"582","messageId":"617","endLine":61,"endColumn":21},{"ruleId":"615","severity":1,"message":"616","line":72,"column":19,"nodeType":"582","messageId":"617","endLine":72,"endColumn":21},{"ruleId":"576","severity":1,"message":"619","line":4,"column":8,"nodeType":"578","messageId":"579","endLine":4,"endColumn":18},{"ruleId":"580","severity":1,"message":"581","line":19,"column":15,"nodeType":"582","endLine":36,"endColumn":6},{"ruleId":"576","severity":1,"message":"586","line":57,"column":15,"nodeType":"578","messageId":"579","endLine":57,"endColumn":18},{"ruleId":"576","severity":1,"message":"600","line":181,"column":41,"nodeType":"578","messageId":"579","endLine":181,"endColumn":45},{"ruleId":"576","severity":1,"message":"600","line":191,"column":41,"nodeType":"578","messageId":"579","endLine":191,"endColumn":45},{"ruleId":"572","replacedBy":"664"},{"ruleId":"574","replacedBy":"665"},{"ruleId":"576","severity":1,"message":"577","line":1,"column":17,"nodeType":"578","messageId":"579","endLine":1,"endColumn":26},{"ruleId":"638","severity":1,"message":"639","line":16,"column":5,"nodeType":"640","messageId":"641","endLine":16,"endColumn":10},{"ruleId":"580","severity":1,"message":"642","line":25,"column":3,"nodeType":"578","endLine":25,"endColumn":12,"suggestions":"666"},{"ruleId":"644","severity":1,"message":"645","line":174,"column":9,"nodeType":"646","endLine":174,"endColumn":12},{"ruleId":"576","severity":1,"message":"647","line":11,"column":8,"nodeType":"578","messageId":"579","endLine":11,"endColumn":24},{"ruleId":"576","severity":1,"message":"587","line":12,"column":8,"nodeType":"578","messageId":"579","endLine":12,"endColumn":16},{"ruleId":"580","severity":1,"message":"642","line":28,"column":7,"nodeType":"578","endLine":28,"endColumn":16,"suggestions":"667"},{"ruleId":"576","severity":1,"message":"625","line":2,"column":48,"nodeType":"578","messageId":"579","endLine":2,"endColumn":59},{"ruleId":"580","severity":1,"message":"613","line":41,"column":7,"nodeType":"584","endLine":41,"endColumn":9,"suggestions":"668"},{"ruleId":"576","severity":1,"message":"600","line":51,"column":12,"nodeType":"578","messageId":"579","endLine":51,"endColumn":16},{"ruleId":"576","severity":1,"message":"586","line":217,"column":44,"nodeType":"578","messageId":"579","endLine":217,"endColumn":47},{"ruleId":"576","severity":1,"message":"627","line":2,"column":9,"nodeType":"578","messageId":"579","endLine":2,"endColumn":18},{"ruleId":"609","severity":1,"message":"610","line":13,"column":19,"nodeType":"611","messageId":"612","endLine":13,"endColumn":20},{"ruleId":"576","severity":1,"message":"628","line":52,"column":10,"nodeType":"578","messageId":"579","endLine":52,"endColumn":16},{"ruleId":"615","severity":1,"message":"616","line":71,"column":19,"nodeType":"582","messageId":"617","endLine":71,"endColumn":21},{"ruleId":"580","severity":1,"message":"629","line":118,"column":6,"nodeType":"584","endLine":118,"endColumn":8,"suggestions":"669"},{"ruleId":"609","severity":1,"message":"610","line":24,"column":21,"nodeType":"611","messageId":"612","endLine":24,"endColumn":22},{"ruleId":"576","severity":1,"message":"628","line":72,"column":10,"nodeType":"578","messageId":"579","endLine":72,"endColumn":16},{"ruleId":"576","severity":1,"message":"633","line":77,"column":10,"nodeType":"578","messageId":"579","endLine":77,"endColumn":14},{"ruleId":"615","severity":1,"message":"616","line":91,"column":19,"nodeType":"582","messageId":"617","endLine":91,"endColumn":21},{"ruleId":"580","severity":1,"message":"634","line":151,"column":6,"nodeType":"584","endLine":151,"endColumn":8,"suggestions":"670"},{"ruleId":"576","severity":1,"message":"597","line":2,"column":57,"nodeType":"578","messageId":"579","endLine":2,"endColumn":62},{"ruleId":"576","severity":1,"message":"598","line":11,"column":11,"nodeType":"578","messageId":"579","endLine":11,"endColumn":15},{"ruleId":"576","severity":1,"message":"599","line":14,"column":11,"nodeType":"578","messageId":"579","endLine":14,"endColumn":12},{"ruleId":"576","severity":1,"message":"600","line":35,"column":14,"nodeType":"578","messageId":"579","endLine":35,"endColumn":18},{"ruleId":"576","severity":1,"message":"601","line":96,"column":41,"nodeType":"578","messageId":"579","endLine":96,"endColumn":45},{"ruleId":"576","severity":1,"message":"586","line":129,"column":37,"nodeType":"578","messageId":"579","endLine":129,"endColumn":40},{"ruleId":"576","severity":1,"message":"603","line":16,"column":11,"nodeType":"578","messageId":"579","endLine":16,"endColumn":18},{"ruleId":"580","severity":1,"message":"589","line":31,"column":6,"nodeType":"584","endLine":31,"endColumn":8,"suggestions":"671"},{"ruleId":"576","severity":1,"message":"596","line":8,"column":19,"nodeType":"578","messageId":"579","endLine":8,"endColumn":29},{"ruleId":"576","severity":1,"message":"577","line":1,"column":17,"nodeType":"578","messageId":"579","endLine":1,"endColumn":26},{"ruleId":"576","severity":1,"message":"602","line":20,"column":9,"nodeType":"578","messageId":"579","endLine":20,"endColumn":16},{"ruleId":"576","severity":1,"message":"608","line":2,"column":50,"nodeType":"578","messageId":"579","endLine":2,"endColumn":57},{"ruleId":"576","severity":1,"message":"586","line":111,"column":40,"nodeType":"578","messageId":"579","endLine":111,"endColumn":43},{"ruleId":"580","severity":1,"message":"589","line":34,"column":7,"nodeType":"584","endLine":34,"endColumn":9,"suggestions":"672"},{"ruleId":"576","severity":1,"message":"606","line":43,"column":9,"nodeType":"578","messageId":"579","endLine":43,"endColumn":21},{"ruleId":"576","severity":1,"message":"607","line":44,"column":9,"nodeType":"578","messageId":"579","endLine":44,"endColumn":13},{"ruleId":"580","severity":1,"message":"591","line":19,"column":15,"nodeType":"592","endLine":19,"endColumn":26},{"ruleId":"609","severity":1,"message":"610","line":13,"column":29,"nodeType":"611","messageId":"612","endLine":13,"endColumn":30},{"ruleId":"580","severity":1,"message":"581","line":34,"column":15,"nodeType":"582","endLine":52,"endColumn":6},{"ruleId":"580","severity":1,"message":"613","line":52,"column":8,"nodeType":"584","endLine":52,"endColumn":10,"suggestions":"673"},{"ruleId":"576","severity":1,"message":"600","line":54,"column":17,"nodeType":"578","messageId":"579","endLine":54,"endColumn":21},{"ruleId":"615","severity":1,"message":"616","line":66,"column":31,"nodeType":"582","messageId":"617","endLine":66,"endColumn":33},{"ruleId":"576","severity":1,"message":"586","line":84,"column":15,"nodeType":"578","messageId":"579","endLine":84,"endColumn":18},{"ruleId":"576","severity":1,"message":"618","line":89,"column":23,"nodeType":"578","messageId":"579","endLine":89,"endColumn":24},{"ruleId":"576","severity":1,"message":"600","line":234,"column":53,"nodeType":"578","messageId":"579","endLine":234,"endColumn":57},{"ruleId":"576","severity":1,"message":"600","line":243,"column":53,"nodeType":"578","messageId":"579","endLine":243,"endColumn":57},{"ruleId":"580","severity":1,"message":"589","line":42,"column":8,"nodeType":"584","endLine":42,"endColumn":10,"suggestions":"674"},{"ruleId":"576","severity":1,"message":"623","line":43,"column":68,"nodeType":"578","messageId":"579","endLine":43,"endColumn":78},{"ruleId":"576","severity":1,"message":"624","line":43,"column":81,"nodeType":"578","messageId":"579","endLine":43,"endColumn":91},{"ruleId":"615","severity":1,"message":"616","line":59,"column":20,"nodeType":"582","messageId":"617","endLine":59,"endColumn":22},{"ruleId":"615","severity":1,"message":"616","line":78,"column":19,"nodeType":"582","messageId":"617","endLine":78,"endColumn":21},{"ruleId":"609","severity":1,"message":"610","line":14,"column":29,"nodeType":"611","messageId":"612","endLine":14,"endColumn":30},{"ruleId":"580","severity":1,"message":"581","line":36,"column":16,"nodeType":"582","endLine":70,"endColumn":6},{"ruleId":"580","severity":1,"message":"636","line":70,"column":8,"nodeType":"584","endLine":70,"endColumn":10,"suggestions":"675"},{"ruleId":"576","severity":1,"message":"586","line":96,"column":15,"nodeType":"578","messageId":"579","endLine":96,"endColumn":18},{"ruleId":"576","severity":1,"message":"600","line":101,"column":17,"nodeType":"578","messageId":"579","endLine":101,"endColumn":21},{"ruleId":"615","severity":1,"message":"616","line":109,"column":31,"nodeType":"582","messageId":"617","endLine":109,"endColumn":33},{"ruleId":"576","severity":1,"message":"600","line":261,"column":53,"nodeType":"578","messageId":"579","endLine":261,"endColumn":57},{"ruleId":"576","severity":1,"message":"600","line":269,"column":53,"nodeType":"578","messageId":"579","endLine":269,"endColumn":57},"no-native-reassign",["676"],"no-negated-in-lhs",["677"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'courses'. Either include it or remove the dependency array.","ArrayExpression",["678"],"'req' is assigned a value but never used.","'Checkbox' is defined but never used.","'crs' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["679"],"Assignments to the 'crses' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression",["680"],["676"],["677"],"'setLoading' is assigned a value but never used.","'Modal' is defined but never used.","'open' is assigned a value but never used.","'x' is assigned a value but never used.","'name' is assigned a value but never used.","'data' is assigned a value but never used.","'history' is assigned a value but never used.","'payload' is assigned a value but never used.",["681"],["682"],"'contracttype' is assigned a value but never used.","'Rank' is assigned a value but never used.","'Divider' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'searchInput'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSearch' needs the current value of 'searchInput'.",["683"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'i' is assigned a value but never used.","'DatePicker' is defined but never used.","'value' is assigned a value but never used.",["684"],["685"],"'hourstaken' is assigned a value but never used.","'emptyhours' is assigned a value but never used.","'TableFooter' is defined but never used.",["686"],"'useParams' is defined but never used.","'allReg' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handledisabled'. Either include it or remove the dependency array.",["687"],"React Hook useEffect has missing dependencies: 'handledisabled' and 'id'. Either include them or remove the dependency array.",["688"],"'Init' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Reg.Course_Code', 'findmax', 'handledisabled', and 'id'. Either include them or remove the dependency array.",["689"],"React Hook useEffect has missing dependencies: 'id' and 'searchInput'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSearch' needs the current value of 'searchInput'.",["690"],"no-dupe-keys","Duplicate key 'Email'.","ObjectExpression","unexpected","React Hook useEffect contains a call to 'setDisabled'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user] as a second argument to the useEffect Hook.",["691"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'FormControlLabel' is defined but never used.",["692"],["693"],["694"],["695"],"'course' is assigned a value but never used.",["696"],["697"],"'handleSubmit' is assigned a value but never used.","no-undef","'title' is not defined.","undef","'final' is not defined.","'date' is not defined.",["698"],["699"],["700"],["676"],["677"],["701"],["702"],["703"],["704"],["705"],["706"],["707"],["708"],["709"],["710"],"no-global-assign","no-unsafe-negation",{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"713","fix":"715"},{"desc":"713","fix":"716"},{"desc":"713","fix":"717"},{"desc":"718","fix":"719"},{"desc":"713","fix":"720"},{"desc":"713","fix":"721"},{"desc":"718","fix":"722"},{"desc":"723","fix":"724"},{"desc":"725","fix":"726"},{"desc":"727","fix":"728"},{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},{"desc":"731","fix":"733"},{"desc":"731","fix":"734"},{"desc":"731","fix":"735"},{"desc":"723","fix":"736"},{"desc":"725","fix":"737"},{"desc":"713","fix":"738"},{"desc":"713","fix":"739"},{"desc":"713","fix":"740"},{"desc":"713","fix":"741"},{"desc":"731","fix":"742"},{"desc":"731","fix":"743"},{"desc":"718","fix":"744"},{"desc":"723","fix":"745"},{"desc":"727","fix":"746"},{"desc":"713","fix":"747"},{"desc":"713","fix":"748"},{"desc":"718","fix":"749"},{"desc":"713","fix":"750"},{"desc":"729","fix":"751"},"Update the dependencies array to be: [courses]",{"range":"752","text":"753"},"Update the dependencies array to be: [id]",{"range":"754","text":"755"},{"range":"756","text":"755"},{"range":"757","text":"755"},{"range":"758","text":"755"},"Update the dependencies array to be: [searchInput]",{"range":"759","text":"760"},{"range":"761","text":"755"},{"range":"762","text":"755"},{"range":"763","text":"760"},"Update the dependencies array to be: [handledisabled]",{"range":"764","text":"765"},"Update the dependencies array to be: [handledisabled, id]",{"range":"766","text":"767"},"Update the dependencies array to be: [Reg.Course_Code, findmax, handledisabled, id]",{"range":"768","text":"769"},"Update the dependencies array to be: [id, searchInput]",{"range":"770","text":"771"},"Add dependencies array: [user]",{"range":"772","text":"773"},{"range":"774","text":"773"},{"range":"775","text":"773"},{"range":"776","text":"773"},{"range":"777","text":"765"},{"range":"778","text":"767"},{"range":"779","text":"755"},{"range":"780","text":"755"},{"range":"781","text":"755"},{"range":"782","text":"755"},{"range":"783","text":"773"},{"range":"784","text":"773"},{"range":"785","text":"760"},{"range":"786","text":"765"},{"range":"787","text":"769"},{"range":"788","text":"755"},{"range":"789","text":"755"},{"range":"790","text":"760"},{"range":"791","text":"755"},{"range":"792","text":"771"},[547,549],"[courses]",[559,561],"[id]",[540,542],[980,982],[1037,1039],[2063,2065],"[searchInput]",[687,689],[1564,1566],[1520,1522],[3006,3008],"[handledisabled]",[1430,1432],"[handledisabled, id]",[3824,3826],"[Reg.Course_Code, findmax, handledisabled, id]",[2590,2592],"[id, searchInput]",[762,762],", [user]",[1125,1125],[762,762],[1125,1125],[1999,2001],[2503,2505],[980,982],[790,792],[2246,2248],[1564,1566],[735,735],[1095,1095],[1480,1482],[2889,2891],[3674,3676],[950,952],[1004,1006],[2012,2014],[1523,1525],[2521,2523]]