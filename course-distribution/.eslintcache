[{"D:\\senior\\course-distribution\\course-distribution\\src\\index.js":"1","D:\\senior\\course-distribution\\course-distribution\\src\\App.js":"2","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\index.js":"3","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\App.js":"4","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Navbar.js":"5","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Course.js":"6","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Create.js":"7","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Details.js":"8","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Update.js":"9","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Create.js":"10","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Doctors.js":"11","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Update.js":"12","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Details.js":"13","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\index.js":"14","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\App.js":"15","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Navbar.js":"16","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Update.js":"17","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Create.js":"18","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Doctors.js":"19","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Create.js":"20","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Details.js":"21","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Course.js":"22","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Update.js":"23","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Details.js":"24","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Distributions.js":"25","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Create.js":"26","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Distributions\\Distributions.js":"27","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Distributions\\Create.js":"28","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Distributions\\Details.js":"29","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Details.js":"30","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\Registrations.js":"31","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\Create.js":"32","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\update.js":"33","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\Update.js":"34","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Update.js":"35","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Signup.js":"36","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Login.js":"37","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Error.js":"38","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\index.js":"39","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\App.js":"40","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Error.js":"41","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Signup.js":"42","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Navbar.js":"43","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Login.js":"44","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Registrations\\Registrations.js":"45","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Registrations\\Create.js":"46","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Create.js":"47","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Doctors.js":"48","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Create.js":"49","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Course.js":"50","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Registrations\\Update.js":"51","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Update.js":"52","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Details.js":"53","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Update.js":"54","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Distributions.js":"55","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Details.js":"56","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Update.js":"57","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Details.js":"58","D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Create.js":"59"},{"size":432,"mtime":1607775545000,"results":"60","hashOfConfig":"61"},{"size":427,"mtime":1623498022864,"results":"62","hashOfConfig":"61"},{"size":432,"mtime":1629822463000,"results":"63","hashOfConfig":"64"},{"size":1588,"mtime":1630692101817,"results":"65","hashOfConfig":"64"},{"size":1607,"mtime":1630576914098,"results":"66","hashOfConfig":"64"},{"size":4241,"mtime":1630506406744,"results":"67","hashOfConfig":"64"},{"size":6229,"mtime":1630502190084,"results":"68","hashOfConfig":"64"},{"size":3240,"mtime":1630413437977,"results":"69","hashOfConfig":"64"},{"size":6203,"mtime":1630501076653,"results":"70","hashOfConfig":"64"},{"size":4332,"mtime":1630670387567,"results":"71","hashOfConfig":"64"},{"size":4035,"mtime":1630507923607,"results":"72","hashOfConfig":"64"},{"size":4408,"mtime":1630687304933,"results":"73","hashOfConfig":"64"},{"size":2624,"mtime":1630509617969,"results":"74","hashOfConfig":"64"},{"size":432,"mtime":1629822463000,"results":"75","hashOfConfig":"76"},{"size":2767,"mtime":1632148498858,"results":"77","hashOfConfig":"76"},{"size":1833,"mtime":1633515843278,"results":"78","hashOfConfig":"76"},{"size":4957,"mtime":1633866605245,"results":"79","hashOfConfig":"76"},{"size":7111,"mtime":1634133031890,"results":"80","hashOfConfig":"76"},{"size":6589,"mtime":1633515740964,"results":"81","hashOfConfig":"76"},{"size":4913,"mtime":1633515750298,"results":"82","hashOfConfig":"76"},{"size":5193,"mtime":1632078222416,"results":"83","hashOfConfig":"76"},{"size":8657,"mtime":1634133259719,"results":"84","hashOfConfig":"76"},{"size":6592,"mtime":1631364280832,"results":"85","hashOfConfig":"76"},{"size":6627,"mtime":1634227878991,"results":"86","hashOfConfig":"76"},{"size":5452,"mtime":1634734396040,"results":"87","hashOfConfig":"76"},{"size":14494,"mtime":1634734132558,"results":"88","hashOfConfig":"76"},{"size":4122,"mtime":1630692229161,"results":"89","hashOfConfig":"64"},{"size":8281,"mtime":1630783261661,"results":"90","hashOfConfig":"64"},{"size":4350,"mtime":1630694397025,"results":"91","hashOfConfig":"64"},{"size":11500,"mtime":1634132848752,"results":"92","hashOfConfig":"76"},{"size":10565,"mtime":1634733328854,"results":"93","hashOfConfig":"76"},{"size":9459,"mtime":1634733227714,"results":"94","hashOfConfig":"76"},{"size":7960,"mtime":1630961488956,"results":"95","hashOfConfig":"76"},{"size":10684,"mtime":1634733379469,"results":"96","hashOfConfig":"76"},{"size":14808,"mtime":1634734257175,"results":"97","hashOfConfig":"76"},{"size":4411,"mtime":1631125240475,"results":"98","hashOfConfig":"76"},{"size":6145,"mtime":1632915614931,"results":"99","hashOfConfig":"76"},{"size":369,"mtime":1631362847476,"results":"100","hashOfConfig":"76"},{"size":432,"mtime":1629822463000,"results":"101","hashOfConfig":"102"},{"size":2767,"mtime":1632148498858,"results":"103","hashOfConfig":"102"},{"size":369,"mtime":1631362847476,"results":"104","hashOfConfig":"102"},{"size":4411,"mtime":1631125240475,"results":"105","hashOfConfig":"102"},{"size":1809,"mtime":1632053314614,"results":"106","hashOfConfig":"102"},{"size":6145,"mtime":1632915614931,"results":"107","hashOfConfig":"102"},{"size":5961,"mtime":1632148766265,"results":"108","hashOfConfig":"102"},{"size":8073,"mtime":1632914993231,"results":"109","hashOfConfig":"102"},{"size":4744,"mtime":1632061791577,"results":"110","hashOfConfig":"102"},{"size":5682,"mtime":1632077940925,"results":"111","hashOfConfig":"102"},{"size":6947,"mtime":1632055098932,"results":"112","hashOfConfig":"102"},{"size":7931,"mtime":1631363174994,"results":"113","hashOfConfig":"102"},{"size":9044,"mtime":1632064539807,"results":"114","hashOfConfig":"102"},{"size":6592,"mtime":1631364280832,"results":"115","hashOfConfig":"102"},{"size":5193,"mtime":1632078222416,"results":"116","hashOfConfig":"102"},{"size":4828,"mtime":1632075809452,"results":"117","hashOfConfig":"102"},{"size":4863,"mtime":1633373298921,"results":"118","hashOfConfig":"102"},{"size":3306,"mtime":1631363097725,"results":"119","hashOfConfig":"102"},{"size":9765,"mtime":1632153582444,"results":"120","hashOfConfig":"102"},{"size":11655,"mtime":1632336855795,"results":"121","hashOfConfig":"102"},{"size":8751,"mtime":1633372593758,"results":"122","hashOfConfig":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y2ox8r",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},"1or3est",{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"129"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"129"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"129"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"129"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"129"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"129"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"129"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},"1smawcl",{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"159"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"159"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"159"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"159"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"159"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"159"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"159"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"129"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"129"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"159"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"159"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"159"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19frxjd",{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":3,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\senior\\course-distribution\\course-distribution\\src\\index.js",[],"D:\\senior\\course-distribution\\course-distribution\\src\\App.js",[],"D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\index.js",[],["262","263"],"D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\App.js",[],"D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Navbar.js",["264"],"import React, { useEffect } from 'react'\r\nimport {Menu,Icon} from 'semantic-ui-react'\r\nimport {Link, useLocation} from 'react-router-dom'\r\n\r\nconst Navbar=()=>{\r\n const Location=useLocation();\r\n  const isactive=(url)=>{\r\n    if(Location.pathname.startsWith(url))\r\n      return true;\r\n    else\r\n      return false\r\n  }\r\n \r\n    return(\r\n    \r\n        \r\n      <Menu pointing secondary stackable >\r\n        <Link to='/doctors'>\r\n      <Menu.Item\r\n        name='Doctors'\r\n        active={isactive('/doctors')}\r\n        \r\n      >\r\n      <Icon size=\"large\" name=\"users\"/>\r\n      Doctors\r\n      </Menu.Item>\r\n      </Link>\r\n      <Link to='/registration'>\r\n      <Menu.Item\r\n        name='Registration'\r\n        active={isactive('/registration')}\r\n       \r\n      >\r\n         <Icon size=\"large\" name=\"book\"/>\r\n      Registration\r\n        </Menu.Item>\r\n\r\n      </Link>\r\n      <Link to='/distributions'>\r\n      <Menu.Item\r\n        name='Distributions'\r\n        active={isactive('/distributions')}\r\n        \r\n      >\r\n         <Icon size=\"large\" name=\"list\"/>\r\n          Distributions\r\n        </Menu.Item>\r\n      </Link>\r\n      <Link to='/courses'>\r\n      <Menu.Item\r\n        name='Courses'\r\n        active={isactive('/courses')}\r\n        \r\n      >\r\n         <Icon size=\"large\" name=\"book\"/>\r\n      Courses\r\n        </Menu.Item>\r\n      </Link>\r\n     \r\n      <Menu.Menu position='right'>\r\n      <Link to=\"/logout\">\r\n        <Menu.Item\r\n          name='logout'\r\n          active={isactive('/logout')}\r\n   \r\n        />\r\n        </Link>\r\n      </Menu.Menu>\r\n     \r\n    </Menu>\r\n\r\n   \r\n    \r\n    )\r\n}\r\nexport default Navbar;","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Course.js",["265","266","267"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Icon, Table ,Container,Message} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Course = () => {\r\n    const [courses,setCourses]=useState([]);\r\n    const[loading,setLoading]=useState(false);\r\n    useEffect(async ()=>{\r\n        setLoading(true)\r\n        const Crs=await axios.get('http://localhost:4000/courses');\r\n        setCourses(Crs.data);\r\n        setLoading(false);\r\n        console.log(courses);\r\n        \r\n    },[])\r\n\r\n\r\n    return(\r\n        <Container style={{marginTop:'2em'}}>\r\n        {\r\n            (loading)? \r\n            <Message icon>\r\n    <Icon name='circle notched' loading />\r\n    <Message.Content>\r\n      <Message.Header>Just one second</Message.Header>\r\n      We are fetching that content for you.\r\n    </Message.Content>\r\n  </Message>\r\n            :\r\n            <Table compact celled style={{fontSize:\"15px\"}}>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell textAlign=\"center\">Code</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Name</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Credits</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Semester Nb</Table.HeaderCell>\r\n                <Table.HeaderCell />\r\n              </Table.Row>\r\n            </Table.Header>\r\n        \r\n            <Table.Body>\r\n                {\r\n                    courses.map(c=>{\r\n                          return(\r\n                              <Table.Row>\r\n                              <Table.Cell textAlign=\"center\">{c.Course_code}</Table.Cell>\r\n                              <Table.Cell textAlign=\"center\">\r\n                                  <Link to={`/courses/details/${c._id}`}>\r\n                                  {c.course_name}\r\n                                  </Link>\r\n                              </Table.Cell>\r\n                              <Table.Cell textAlign=\"center\">{c.credits}</Table.Cell>\r\n                             \r\n                              <Table.Cell textAlign=\"center\">{c.Semester_Nb}</Table.Cell>\r\n                              <Table.Cell collapsing>\r\n                                <Link to={`/courses/update/${c._id}` }>\r\n                              <Button \r\n                              content=\"Update\" \r\n                              color=\"blue\"\r\n                              \r\n                              size='small'\r\n                              icon=\"redo\"\r\n                              />\r\n                              </Link>\r\n                              <Button\r\n                               content=\"Delete\" \r\n                               icon=\"trash\"\r\n                               color=\"red\"\r\n                               size='small'\r\n                               onClick={()=>{\r\n                                 setLoading(true);\r\n                                 const req =axios.delete('http://localhost:4000/courses/'+c._id);\r\n                                 setLoading(false);\r\n                                 window.location.reload();\r\n                               }}\r\n                               />\r\n  \r\n  \r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                    })\r\n                   \r\n                }\r\n             \r\n            </Table.Body>\r\n        \r\n            <Table.Footer fullWidth>\r\n              <Table.Row>\r\n                <Table.HeaderCell colSpan='12'>\r\n                    <Link to='/courses/create'>\r\n                  <Button\r\n                    floated='right'\r\n                    icon\r\n                    labelPosition='left'\r\n                    color=\"green\"\r\n                    size='small'\r\n                  >\r\n                    <Icon name='add' />\r\n                    Add Course \r\n                  </Button>\r\n                  </Link>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n          </Table>\r\n        }\r\n        \r\n        \r\n        </Container>\r\n        \r\n            \r\n    )\r\n            \r\n}\r\n   \r\n\r\n\r\nexport default Course;","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Create.js",["268"],"import React, { useState } from 'react'\r\n//import { Helmet } from 'react-helmet'\r\nimport {Checkbox,  Button,Form,Input, Container, Radio, Divider} from 'semantic-ui-react'\r\nimport axios from 'axios'\r\nconst CREATE_COURSE={\r\n    Course_code:'',\r\n      course_name:'',\r\n      Total_Hours:0,\r\n      Description:'',\r\n      credits:0,\r\n      available:false,\r\n      Semester_Nb:'',\r\n      Course_Type:'',\r\n      Course_hours:0,\r\n      Lab_hours:0,\r\n      Exercise_hours:0\r\n}\r\nconst Create = () => {\r\n    const [create_course,set_create_course]=useState(CREATE_COURSE);\r\n    const handleInput=(e)=>{\r\n        const{name,value}=e.target;\r\n       \r\n        set_create_course(prev=>({...prev,[name]:value}));\r\n        console.log(create_course);\r\n    }\r\n    const handleSubmit=async ()=>{\r\n        await axios.post('http://localhost:4000/courses/create',create_course);\r\n\r\n    }\r\n    \r\n    return (  \r\n      \r\n          <Container>\r\n        \r\n        <Form  method='POST' onSubmit={handleSubmit} >\r\n            <Form.Group widths='equal'>\r\n              <Form.Field\r\n              value={CREATE_COURSE.Course_code}\r\n              >\r\n                <label>Course Code</label>\r\n                <Input   \r\n                required         \r\n                placeholder='Course Code'\r\n                name='Course_code'\r\n                onChange={handleInput} />\r\n              </Form.Field>\r\n              <Form.Field\r\n                value={CREATE_COURSE.course_name}\r\n                >\r\n                <label> Course Name</label>\r\n              <Input required name=\"course_name\" onChange={handleInput}  placeholder=\"Course Name\"/>\r\n              </Form.Field>\r\n              <Form.Field\r\n                value={CREATE_COURSE.Total_Hours}\r\n              >\r\n                <label>Total Hours</label>\r\n                <Input\r\n                required\r\n                type='number'\r\n                placeholder='Total Hours'\r\n                name=\"Total_Hours\"\r\n                onChange={handleInput} />\r\n              </Form.Field>\r\n              \r\n            </Form.Group>\r\n            <Divider  section/>\r\n            <Form.Group widths='3' >\r\n            <Form.Field\r\n                value={CREATE_COURSE.Description}\r\n              >\r\n                 <label>Description</label>\r\n                <Input \r\n                  required\r\n                  placeholder='Description'\r\n                  name=\"Description\"\r\n                  onChange={handleInput}\r\n                  />\r\n               \r\n                </Form.Field>\r\n                <Form.Field\r\n                value={CREATE_COURSE.available}\r\n                >\r\n                  <label style={{marginLeft:\"50%\"}}>Available</label>\r\n                <Radio toggle style={{marginLeft:\"50%\"}}  name='available' checked={create_course.available} onChange={handleInput} onClick={()=>create_course.available=!create_course.available}/>\r\n                </Form.Field>\r\n                <Form.Field \r\n                \r\n                value={CREATE_COURSE.credits}\r\n              >\r\n                <label>Credits</label>\r\n                \r\n                <input \r\n                name=\"credits\"\r\n                required \r\n                type=\"number\" \r\n                min=\"0\" max=\"30\" \r\n                placeholder=\"0\"\r\n                onChange={handleInput} />\r\n                \r\n                \r\n                </Form.Field>\r\n              </Form.Group >\r\n              <Divider  section/>\r\n              \r\n              <Form.Group widths=\"equal\">\r\n             \r\n    \r\n              <Form.Field \r\n                value={CREATE_COURSE.Semester_Nb}\r\n              >\r\n                <label>Semester Number</label>\r\n               \r\n\r\n                <select name=\"Semester_Nb\" value={create_course.Semester_Nb} onChange={handleInput}>\r\n                  <option value=\"S1\" >S1</option>\r\n                  <option value=\"S2\" >S2</option>\r\n                  <option value=\"S3\" >S3</option>\r\n                  <option value=\"S4\" >S4</option>\r\n                  <option value=\"S5\" >S5</option>\r\n                  <option value=\"S6\" >S6</option>\r\n                  <option value=\"S7\" >S7</option>\r\n                  <option value=\"S8\" >S8</option>\r\n                  </select>\r\n                </Form.Field>\r\n    \r\n              <Form.Field\r\n                value={CREATE_COURSE.Course_Type}\r\n                name=\"Course_Type\"\r\n              >\r\n              <label>Course Type</label>   \r\n          <select  name=\"Course_Type\" value={CREATE_COURSE.Course_Type} onChange={handleInput}>\r\n                <option value=\"Obligatory\">Obligatory</option>\r\n                <option value=\"Elective\">Elective</option>\r\n          </select>\r\n              \r\n                </Form.Field>\r\n              </Form.Group >\r\n              <Divider  section/>\r\n              <Form.Group widths=\"equal\">\r\n              <Form.Field\r\n                value={CREATE_COURSE.Course_hours}\r\n              >\r\n              <label>Course Hours</label>\r\n              <Input\r\n              required\r\n              type='number'\r\n                placeholder='Course Hours'\r\n                name=\"Course_hours\"\r\n                onChange={handleInput}/>\r\n                </Form.Field>\r\n                <Form.Field\r\n                value={CREATE_COURSE.Lab_hours}\r\n              >\r\n              <label>Lab Hours</label>\r\n              <Input\r\n              required\r\n              type='number'\r\n                placeholder='Lab Hours'\r\n                name=\"Lab_hours\"\r\n                onChange={handleInput}/>\r\n                </Form.Field>\r\n                \r\n                <Form.Field\r\n                value={CREATE_COURSE.Exercise_hours}\r\n              >\r\n              <label>Exercise Hours</label>\r\n              <Input\r\n              required\r\n                type='number'\r\n                placeholder='Exercise Hours'\r\n                name=\"Exercise_hours\"\r\n                onChange={handleInput}/>\r\n                </Form.Field>\r\n                </Form.Group>\r\n            <Form.Field  >\r\n             <Button floated=\"right\" color=\"red\">Create</Button>\r\n            </Form.Field>\r\n            \r\n          </Form>\r\n          </Container>\r\n       \r\n        \r\n    )\r\n}\r\n \r\nexport default Create;","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Details.js",["269","270","271"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport {Container,Message,Table,Icon} from 'semantic-ui-react'\r\n\r\nconst Details=()=> {\r\n    var crs;\r\n    const [crses,setcrses]=useState([]);\r\n    const [loading,setLoading]=useState(false);\r\n    const {id}=useParams();\r\n    useEffect(async()=>{\r\n        setLoading(true);\r\n        const course=await axios.get('http://localhost:4000/courses/details/'+id);\r\n        setcrses(course.data);\r\n        setLoading(false);\r\n        \r\n    },[]);\r\n\r\n        return (\r\n            <Container>\r\n                 {\r\n            (loading)? \r\n            <Message icon style={{marginTop:\"20%\"}}>\r\n    <Icon name='circle notched' loading />\r\n    <Message.Content>\r\n      <Message.Header>Just one second</Message.Header>\r\n      We are fetching that content for you.\r\n    </Message.Content>\r\n  </Message>\r\n            :\r\n            <Table    >\r\n            <Table.Header>\r\n              <Table.Row >\r\n                  \r\n                <Table.HeaderCell >Code</Table.HeaderCell>\r\n                <Table.HeaderCell >Name</Table.HeaderCell>\r\n                <Table.HeaderCell >Credits</Table.HeaderCell>\r\n                <Table.HeaderCell >Type</Table.HeaderCell>\r\n                <Table.HeaderCell >Semester Nb</Table.HeaderCell>\r\n                <Table.HeaderCell >Total hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Course hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Exercise hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Lab hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Available</Table.HeaderCell>\r\n                <Table.HeaderCell >Description</Table.HeaderCell>\r\n                \r\n              </Table.Row>\r\n            </Table.Header>\r\n        \r\n            <Table.Body>\r\n                \r\n               \r\n                              <Table.Row>\r\n                              <Table.Cell collapsing=\"3\">{crses.Course_code}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.course_name}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.credits}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.Course_Type}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.Semester_Nb}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.Total_Hours}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.Course_hours}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.Exercise_hours}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.Lab_hours}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.available?'true':'false'}</Table.Cell>\r\n                              <Table.Cell collapsing=\"3\">{crses.Description}</Table.Cell>\r\n                             \r\n                            </Table.Row>\r\n                          \r\n                   \r\n                \r\n             \r\n            </Table.Body>\r\n        \r\n          \r\n          </Table>\r\n        }\r\n           </Container>\r\n        );\r\n    \r\n}\r\nexport default Details;","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Courses\\Update.js",["272","273"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport {  Button, Form, Input, Radio, Container ,Divider, Icon} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst Update = () => {\r\n  var [crses, setcrses] = useState([]);\r\n  const { id } = useParams();\r\n  useEffect(async () => {\r\n    const course = await axios.get(\r\n      \"http://localhost:4000/courses/update/\" + id\r\n    );\r\n    setcrses(course.data);\r\n    crses = course.data;\r\n    console.log(course.data, crses);\r\n  }, []);\r\n\r\n  const CREATE_COURSE = {\r\n    Course_code: crses.Course_code,\r\n    course_name: crses.course_name,\r\n    Total_Hours: crses.Total_Hours,\r\n    Description: crses.Description,\r\n    credits: crses.credits,\r\n    available: crses.available,\r\n    Semester_Nb: crses.Semester_Nb,\r\n    Course_Type: crses.Course_Type,\r\n    Course_hours: crses.Course_hours,\r\n    Lab_hours: crses.Lab_hours,\r\n    Exercise_hours: crses.Exercise_hours,\r\n  };\r\n  const [create_course, set_create_course] = useState(CREATE_COURSE);\r\n\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    set_create_course((prev) => ({ ...prev, [name]: value }));\r\n    console.log(create_course);\r\n  };\r\n  const handleSubmit = async () => {\r\n    const x = await axios.put(\r\n      \"http://localhost:4000/courses/update/\" + id,\r\n      create_course\r\n    );\r\n    console.log(x);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form method=\"POST\" onSubmit={handleSubmit}>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field>\r\n            <label>Course Code</label>\r\n            <Input\r\n              required\r\n              placeholder={CREATE_COURSE.Course_code}\r\n              name=\"Course_code\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label> Course Name</label>\r\n            <Input\r\n              required\r\n              name=\"course_name\"\r\n              onChange={handleInput}\r\n              placeholder={CREATE_COURSE.course_name}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Total Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              placeholder={CREATE_COURSE.Total_Hours}\r\n              name=\"Total_Hours\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n         \r\n        </Form.Group>\r\n        <Divider section/>\r\n        <Form.Group widths=\"3\">\r\n        <Form.Field>\r\n            <label>Description</label>\r\n            <Input\r\n              required\r\n              placeholder={CREATE_COURSE.Description}\r\n              name=\"Description\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field value={CREATE_COURSE.available} >\r\n            <lable style={{marginLeft:\"50%\"}}>Available</lable>\r\n            <Radio\r\n              style={{marginLeft:\"50%\"}}\r\n              toggle\r\n              name=\"available\"\r\n              checked={create_course.available}\r\n              onChange={handleInput}\r\n              value={CREATE_COURSE.available}\r\n              onClick={() =>\r\n                (create_course.available = !create_course.available)\r\n              }\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n              <label>Credits</label>\r\n              <input\r\n                name=\"credits\"\r\n                placeholder={CREATE_COURSE.credits}\r\n                required\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"30\"\r\n                onChange={handleInput}\r\n              />\r\n            </Form.Field>\r\n\r\n        </Form.Group>\r\n        <Divider section/>\r\n          <Form.Group widths=\"equal\">\r\n            \r\n            <Form.Field>\r\n              <label>Semester Number</label>\r\n\r\n              <select\r\n                name=\"Semester_Nb\"\r\n                placeholder={create_course.Semester_Nb}\r\n                onChange={handleInput}\r\n              >\r\n                <option value=\"S1\">S1</option>\r\n                <option value=\"S2\">S2</option>\r\n                <option value=\"S3\">S3</option>\r\n                <option value=\"S4\">S4</option>\r\n                <option value=\"S5\">S5</option>\r\n                <option value=\"S6\">S6</option>\r\n                <option value=\"S7\">S7</option>\r\n                <option value=\"S8\">S8</option>\r\n              </select>\r\n            </Form.Field>\r\n\r\n            <Form.Field name=\"Course_Type\">\r\n              <label>Course Type</label>\r\n              <select\r\n                onChange={handleInput}\r\n                name=\"Course_Type\"\r\n                placeholder={create_course.Course_Type}\r\n              >\r\n                <option value=\"Obligatory\">Obligatory</option>\r\n                <option value=\"Elective\">Elective</option>\r\n              </select>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Divider section/>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field value={CREATE_COURSE.Course_hours}>\r\n            <label>Course Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              name=\"Course_hours\"\r\n              placeholder={CREATE_COURSE.Course_hours}\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Lab Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              placeholder={CREATE_COURSE.Lab_hours}\r\n              name=\"Lab_hours\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field value={CREATE_COURSE.Exercise_hours}>\r\n            <label>Exercise Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              placeholder={CREATE_COURSE.Exercise_hours}\r\n              name=\"Exercise_hours\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field>\r\n          <Button floated=\"right\"  color=\"red\">\r\n            <Icon name=\"redo\"/>\r\n            update</Button>\r\n        </Form.Field>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Create.js",[],"D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Doctors.js",["274","275"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Icon, Table ,Container,Message} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Doctor = () => {\r\n    const [doctors,setDoctors]=useState([]);\r\n    const[loading,setLoading]=useState(false);\r\n    useEffect(async ()=>{\r\n        setLoading(true)\r\n        const Drs=await axios.get('http://localhost:4000/doctors');\r\n        setDoctors(Drs.data);\r\n        setLoading(false);\r\n        console.log(Drs.data);\r\n        \r\n    },[])\r\n\r\n\r\n    return(\r\n        <Container style={{marginTop:'2em'}}>\r\n        {\r\n            (loading)? \r\n            <Message icon>\r\n    <Icon name='circle notched' loading />\r\n    <Message.Content>\r\n      <Message.Header>Just one second</Message.Header>\r\n      We are fetching that content for you.\r\n    </Message.Content>\r\n  </Message>\r\n            :\r\n            <Table compact celled style={{fontSize:\"15px\"}}>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell textAlign=\"center\">First name</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Last name</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Email</Table.HeaderCell>\r\n                <Table.HeaderCell />\r\n              </Table.Row>\r\n            </Table.Header>\r\n        \r\n            <Table.Body>\r\n                {\r\n                    doctors.map(d=>{\r\n                          return(\r\n                              <Table.Row>\r\n                                   <Table.Cell textAlign=\"center\">\r\n                                  <Link to={`/doctors/details/${d._id}`}>\r\n                                  {d.Fname}\r\n                                  </Link>\r\n                              </Table.Cell>\r\n                              <Table.Cell textAlign=\"center\">{d.Lname}</Table.Cell>\r\n                              <Table.Cell textAlign=\"center\">{d.Email}</Table.Cell>\r\n                              <Table.Cell collapsing>\r\n                                <Link to={`/doctors/update/${d._id}` }>\r\n                              <Button \r\n                              content=\"Update\" \r\n                              color=\"blue\"\r\n                              \r\n                              size='small'\r\n                              icon=\"redo\"\r\n                              />\r\n                              </Link>\r\n                              <Button\r\n                               content=\"Delete\" \r\n                               icon=\"trash\"\r\n                               color=\"red\"\r\n                               size='small'\r\n                               onClick={()=>{\r\n                                 setLoading(true);\r\n                                 const req =axios.delete('http://localhost:4000/doctors/'+d._id);\r\n                                 setLoading(false);\r\n                                 window.location.reload();\r\n                               }}\r\n                               />\r\n  \r\n  \r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                    })\r\n                   \r\n                }\r\n             \r\n            </Table.Body>\r\n        \r\n            <Table.Footer fullWidth>\r\n              <Table.Row>\r\n                <Table.HeaderCell colSpan='12'>\r\n                    <Link to='/doctors/create'>\r\n                  <Button\r\n                    floated='right'\r\n                    icon\r\n                    labelPosition='left'\r\n                    color=\"green\"\r\n                    size='small'\r\n                  >\r\n                    <Icon name='add' />\r\n                    Add Course \r\n                  </Button>\r\n                  </Link>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n          </Table>\r\n        }\r\n        \r\n        \r\n        </Container>\r\n        \r\n            \r\n    )\r\n            \r\n}\r\n   \r\n\r\n\r\nexport default Doctor;","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Update.js",[],"D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Doctors\\Details.js",["276","277"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport {Container,Message,Table,Icon} from 'semantic-ui-react'\r\n\r\nconst Details=()=> {\r\n    const [doctor,setdoctor]=useState([]);\r\n    const [loading,setLoading]=useState(false);\r\n    const {id}=useParams();\r\n    useEffect(async()=>{\r\n        setLoading(true);\r\n        const Dr=await axios.get('http://localhost:4000/doctors/details/'+id);\r\n        setdoctor(Dr.data);\r\n        setLoading(false);\r\n        \r\n    },[]);\r\n\r\n        return (\r\n            <Container>\r\n                 {\r\n            (loading)? \r\n            <Message icon style={{marginTop:\"20%\"}}>\r\n    <Icon name='circle notched' loading />\r\n    <Message.Content>\r\n      <Message.Header>Just one second</Message.Header>\r\n      We are fetching that content for you.\r\n    </Message.Content>\r\n  </Message>\r\n            :\r\n            <Table    >\r\n            <Table.Header>\r\n              <Table.Row >\r\n                  \r\n                <Table.HeaderCell >First name</Table.HeaderCell>\r\n                <Table.HeaderCell >Middle name</Table.HeaderCell>\r\n                <Table.HeaderCell >Last name</Table.HeaderCell>\r\n                <Table.HeaderCell >File number</Table.HeaderCell>\r\n                <Table.HeaderCell >Email</Table.HeaderCell>\r\n                <Table.HeaderCell >Phone number</Table.HeaderCell>\r\n                <Table.HeaderCell >Rank</Table.HeaderCell>\r\n                <Table.HeaderCell >Contract type</Table.HeaderCell>\r\n                \r\n              </Table.Row>\r\n            </Table.Header>\r\n        \r\n            <Table.Body>\r\n                \r\n               \r\n                              <Table.Row>\r\n                              <Table.Cell >{doctor.Fname}</Table.Cell>\r\n                              <Table.Cell >{doctor.Mname}</Table.Cell>\r\n                              <Table.Cell >{doctor.Lname}</Table.Cell>\r\n                              <Table.Cell >{doctor.File_Number}</Table.Cell>\r\n                              <Table.Cell >{doctor.Email}</Table.Cell>\r\n                              <Table.Cell >{doctor.phone_Number}</Table.Cell>\r\n                              <Table.Cell >{doctor.Rank}</Table.Cell>\r\n                              <Table.Cell >{doctor.Contract_Type}</Table.Cell>\r\n                             \r\n                            </Table.Row>\r\n                          \r\n                   \r\n                \r\n             \r\n            </Table.Body>\r\n        \r\n          \r\n          </Table>\r\n        }\r\n           </Container>\r\n        );\r\n    \r\n}\r\nexport default Details;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\index.js",[],["278","279"],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\App.js",[],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Navbar.js",["280"],"import React, { useEffect } from 'react'\r\nimport {Menu,Icon} from 'semantic-ui-react'\r\nimport {Link, useLocation} from 'react-router-dom'\r\nimport cookie from 'js-cookies';\r\n\r\nconst Navbar=()=>{\r\n const Location=useLocation();\r\n  const isactive=(url)=>{\r\n    if(Location.pathname.startsWith(url))\r\n      return true;\r\n    else\r\n      return false\r\n  }\r\n \r\n    return(\r\n    \r\n        \r\n      <Menu pointing inverted stackable >\r\n          <Link to='/courses'>\r\n      <Menu.Item\r\n        name='Courses'\r\n        active={isactive('/courses')}\r\n        \r\n      >\r\n         <Icon color=\"red\" size=\"large\" name=\"book\"/>\r\n      Courses\r\n        </Menu.Item>\r\n      </Link>\r\n        <Link to='/doctors'>\r\n      <Menu.Item\r\n        name='Doctors'\r\n        active={isactive('/doctors')}\r\n        \r\n      >\r\n      <Icon color=\"red\" size=\"large\" name=\"users\"/>\r\n      Doctors\r\n      </Menu.Item>\r\n      </Link>\r\n      <Link to='/registrations'>\r\n      <Menu.Item\r\n        name='Course assignments'\r\n        active={isactive('/registrations')}\r\n       \r\n      >\r\n         <Icon color=\"red\" size=\"large\" name=\"book\"/>\r\n         Course assigmnets\r\n        </Menu.Item>\r\n\r\n      </Link>\r\n      <Link to='/distributions'>\r\n      <Menu.Item\r\n        name='Distributions'\r\n        active={isactive('/distributions')}\r\n        \r\n      >\r\n         <Icon color=\"red\" size=\"large\" name=\"list\"/>\r\n          Distributions\r\n        </Menu.Item>\r\n      </Link>\r\n    \r\n     \r\n      <Menu.Menu position='right'>\r\n      <Link to=\"/logout\">\r\n        <Menu.Item\r\n          name='logout'\r\n          active={isactive('/logout')}\r\n          onClick={()=>{\r\n              cookie.removeItem('token');\r\n              window.location.href=\"/\";  \r\n        }}\r\n        />\r\n        </Link>\r\n      </Menu.Menu>\r\n     \r\n    </Menu>\r\n\r\n   \r\n    \r\n    )\r\n}\r\nexport default Navbar;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Update.js",["281"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Divider, Form, Icon, Input } from \"semantic-ui-react\";\r\nimport {useParams,Link} from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport cookies from 'js-cookies';\r\nconst Update = () => {\r\n  const [dr, setdr] = useState([]);\r\n  const [Loading, setLoading] = useState(false);\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    const token=cookies.getItem(\"token\");\r\n    const payload={headers:{Authorization:token}};\r\n      axios.get(\"http://localhost:4000/doctors/update/\"+id,payload)\r\n      .then((res) => {\r\n        setdr(res.data);\r\n      })\r\n      .catch((err) => {\r\n        window.location.href=\"/error\"\r\n      });\r\n  });\r\n\r\n  const CREATE_DOCTOR = {\r\n    Fname: dr.Fname,\r\n    Email: dr.Email,\r\n    phone_Number: dr.phone_Number,\r\n    File_Number: dr.File_Number,\r\n    Lname: dr.Lname,\r\n    Mname: dr.Mname,\r\n    Rank: dr.Rank,\r\n    Contract_Type: dr.Contract_Type,\r\n  };\r\n  const [create_doc, set_update_doc] = useState(CREATE_DOCTOR);\r\n\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(e);\r\n    set_update_doc((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n  const handleSubmit = async () => {\r\n    axios.put(\"http://localhost:4000/doctors/update/\"+id, create_doc)\r\n    .then(res=>{\r\n      window.location.href=\"/doctors\";\r\n    })\r\n    .catch(err=>{\r\n      console.log(err)\r\n    })\r\n    \r\n     \r\n\r\n  };\r\n  return (\r\n   \r\n    <Container>\r\n    <Form  loading={Loading}>\r\n      <Form.Group widths=\"equal\">\r\n        <Form.Field value={CREATE_DOCTOR.Fname}>\r\n          <label>First Name</label>\r\n          <Input\r\n            required\r\n            placeholder={CREATE_DOCTOR.Fname}\r\n            name=\"Fname\"\r\n            onChange={handleInput}\r\n\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field value={CREATE_DOCTOR.Mname}>\r\n          <label> Middle Name</label>\r\n          <Input\r\n            required\r\n            name=\"Mname\"\r\n            onChange={handleInput}\r\n            placeholder={CREATE_DOCTOR.Mname}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field value={CREATE_DOCTOR.Lname}>\r\n          <label>Last Name:</label>\r\n          <Input\r\n            required\r\n            placeholder={CREATE_DOCTOR.Lname}\r\n            name=\"Lname\"\r\n            onChange={handleInput}\r\n          />\r\n        </Form.Field>\r\n      </Form.Group>\r\n      <Divider section/>\r\n      <Form.Group widths=\"3\">\r\n        <Form.Field value={CREATE_DOCTOR.Email}>\r\n          <label>Email</label>\r\n          <Input\r\n            required\r\n            type=\"email\"\r\n            control={Input}\r\n            placeholder={CREATE_DOCTOR.Email}\r\n            name=\"Email\"\r\n            onChange={handleInput}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field value={CREATE_DOCTOR.phone_Number}>\r\n          <label>Phone Number</label>\r\n          <Input\r\n            required\r\n            align=\"center\"\r\n            width=\"4\"\r\n            placeholder={CREATE_DOCTOR.phone_Number}\r\n            name=\"phone_Number\"\r\n            onChange={handleInput}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field value={CREATE_DOCTOR.File_Number}>\r\n          <label>File Number</label>\r\n          <Input\r\n            required\r\n            type=\"number\"\r\n            name=\"File_Number\"\r\n            onChange={handleInput}\r\n            width=\"4\"\r\n            placeholder={CREATE_DOCTOR.File_Number}\r\n          />\r\n        </Form.Field>\r\n      </Form.Group>\r\n      <Divider section/>\r\n      <Form.Group widths=\"equal\">\r\n       \r\n\r\n        <Form.Field value={CREATE_DOCTOR.Rank}>\r\n          <label>Rank</label>\r\n          \r\n            <select name=\"Rank\" onChange={handleInput} >\r\n            <option value=\"\" selected disabled hidden>Select Rank</option>\r\n              <option value=\"Doctor\" >Doctor</option>\r\n              <option value=\"Head of Department\" >Head of Department</option>\r\n              <option value=\"Doctor Assistant\" >Doctor Assistant</option>\r\n              </select>\r\n        </Form.Field>\r\n\r\n        <Form.Field value={CREATE_DOCTOR.Contract_Type}>\r\n          <label>Contract Type</label>\r\n        \r\n           <select name=\"Contract_Type\" onChange={handleInput}>\r\n           <option value=\"\" selected disabled hidden>Select contract type</option>\r\n              <option value=\"Full Time\" >Full Time</option>\r\n              <option value=\"Part Time\" >Part Time</option>\r\n              <option value=\"Mallak\" >Mallak</option>\r\n              </select>\r\n        </Form.Field>\r\n      </Form.Group>\r\n      <Divider section/>\r\n      <Form.Field>\r\n        <Button color=\"green\" onClick={handleSubmit}  floated=\"right\">\r\n          <Icon name=\"redo\"/>\r\n          Update Doctor</Button>\r\n      </Form.Field>\r\n    </Form>\r\n    <Link to=\"/doctors\">\r\n       <Button\r\n        content=\"Back\"\r\n         icon=\"arrow left\"\r\n         color=\"red\" \r\n         \r\n         /></Link>\r\n  </Container>\r\n  );\r\n};\r\nexport default Update;\r\n","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Create.js",[],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Doctors.js",["282","283","284","285","286","287"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Icon, Table ,Container,Message, Radio, Modal} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport cookies from 'js-cookies';\r\nimport ReactToExcel from 'react-html-table-to-excel';\r\n\r\nconst Doctor = () => {\r\n    const [doctors,setDoctors]=useState([]);\r\n    const[loading,setLoading]=useState(false);\r\n    const[open,setOpen]=useState(false);\r\n    const [search,setSearch]=useState([]);\r\n    const [searchInput,setSearchInput]=useState('');\r\n    const x=false;\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        const token=cookies.getItem(\"token\");\r\n        const payload={headers:{Authorization:token}};\r\n         axios.get('http://localhost:4000/doctors',payload)\r\n        .then(Drs=>{\r\n          setDoctors(Drs.data);\r\n          setSearch(Drs.data)\r\n          setLoading(false);\r\n          console.log(Drs.data);\r\n        })\r\n        .catch(err=>{\r\n          window.location.href=\"/error\"\r\n        })\r\n       \r\n        \r\n    },[])\r\n\r\n    const handleSearch=(e)=>{\r\n      const {name,value}=e.target;\r\n      setSearchInput(value);\r\n      const x=doctors.filter(i=>i.File_Number.startsWith(value));\r\n      x.length!==0?setSearch(x):setSearch(doctors)\r\n         }\r\n\r\n\r\n\r\n    return(\r\n        <Container style={{marginTop:'2em'}}>\r\n        {\r\n        \r\n            (loading)? \r\n            <Message icon style={{marginTop:\"20%\"}}>\r\n    <Icon name='circle notched' loading />\r\n    <Message.Content>\r\n      <Message.Header>Just one second</Message.Header>\r\n      We are fetching that content for you.\r\n    </Message.Content>\r\n  </Message>\r\n            :\r\n            <div>\r\n              <div>\r\n              <input type=\"search\" onChange={handleSearch} value={searchInput}\r\n              style={{\r\n                width:250,\r\n                height:35,\r\n                borderRadius:15,\r\n                borderWidth:1,\r\n                textAlign:\"center\",\r\n                marginLeft:\"40%\",\r\n                borderColor:\"#eee\",\r\n                outline:\"none\"\r\n              }}\r\n              placeholder=\"Search by Dr. ID \"\r\n              />\r\n              <Icon name=\"search\" size='big' />\r\n              </div>\r\n            <Table compact celled style={{fontSize:\"15px\"}} id=\"doctors\">\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell textAlign=\"center\">Archived</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">First name</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Last name</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Email</Table.HeaderCell>\r\n                <Table.HeaderCell />\r\n              </Table.Row>\r\n            </Table.Header>\r\n        \r\n            <Table.Body>\r\n                {\r\n                    search.map(d=>{\r\n                          return(\r\n\r\n                              <Table.Row  >  \r\n                                <Table.Cell>\r\n                                <Radio toggle\r\n                                  checked={d.Archived}\r\n                                onClick={async ()=>{\r\n                                  setLoading(true);\r\n                                  const archived=!d.Archived;\r\n                                  const data=axios.put(\"http://localhost:4000/doctors/update-archived/\"+d._id,{archived,d});\r\n                                  window.location.reload();\r\n                                  setLoading(false);\r\n                                }}\r\n                                />\r\n                                </Table.Cell>\r\n                               \r\n                                   <Table.Cell textAlign=\"center\">\r\n                                  <Link to={`/doctors/details/${d._id}`}>\r\n                                  {d.Fname}\r\n                                  </Link>\r\n                              </Table.Cell>\r\n                      \r\n                              <Table.Cell textAlign=\"center\">{d.Lname}</Table.Cell>\r\n                              <Table.Cell textAlign=\"center\">{d.Email}</Table.Cell>\r\n                              <Table.Cell collapsing>\r\n                                <Link to={`/doctors/update/${d._id}` }>\r\n                              <Button \r\n                              content=\"Update\" \r\n                              color=\"blue\"\r\n                              \r\n                              size='small'\r\n                              icon=\"redo\"\r\n                              />\r\n                              </Link>\r\n                              <Button\r\n                            content=\"Delete\" \r\n                            labelPosition='right'\r\n                            icon='trash'\r\n                            onClick={() =>{ \r\n                              setOpen(false)\r\n                              setLoading(true);\r\n                              console.log(d.fname);\r\n                              const req =axios.delete(`http://localhost:4000/doctors/${d._id}`);\r\n                              setLoading(false);\r\n                              window.location.reload();\r\n                            }}\r\n                            color=\"red\"\r\n                          />\r\n                             \r\n\r\n  \r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                            \r\n                          )\r\n                    })\r\n                   \r\n                }\r\n             \r\n            </Table.Body>\r\n        \r\n            <Table.Footer fullWidth>\r\n              <Table.Row>\r\n                <Table.HeaderCell colSpan='12'>\r\n                    <Link to='/doctors/create'>\r\n                  <Button\r\n                    floated='right'\r\n                    icon\r\n                    labelPosition='left'\r\n                    color=\"green\"\r\n                    size='small'\r\n                  >\r\n                    <Icon name='add' />\r\n                    Add Doctor\r\n                  </Button>\r\n                  </Link>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n          </Table>\r\n            <ReactToExcel \r\n            table=\"doctors\"\r\n            filename=\"Doctors Table\"\r\n            sheet=\"Sheet\"\r\n            buttonText=\"Export To Excel\"\r\n            className=\"ui primary button\"\r\n            />\r\n            </div>\r\n        }\r\n        \r\n        \r\n        </Container>\r\n        \r\n            \r\n    )\r\n            \r\n}\r\n   \r\n\r\n\r\nexport default Doctor;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Create.js",["288","289"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Divider, Form, Icon, Input } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport {Link,useHistory} from 'react-router-dom';\r\n//import { Helmet } from 'react-helmet';\r\n\r\nconst CREATE_DOCTOR = {\r\n  Fname: \"\",\r\n  Email: \"\",\r\n  phone_Number: \"\",\r\n  File_Number: 0,\r\n  Lname: \"\",\r\n  Mname: \"\",\r\n  Rank: \"\",\r\n  Contract_Type: \"\",\r\n};\r\nconst Create = () => {\r\n  const [create_doc, set_create_doc] = useState(CREATE_DOCTOR);\r\n  const [Loading,setLoading]=useState(false);\r\n  const history=useHistory();\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(e);\r\n    set_create_doc((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n     axios.post(\"http://localhost:4000/doctors/create\", create_doc)\r\n     .then(res=>{\r\n       window.location.href='/doctors';\r\n     })\r\n     .catch(err=>{\r\n       alert(\"File number already exists \");\r\n     })\r\n     setLoading(false);\r\n   \r\n     \r\n  };\r\n  return (\r\n   \r\n      <Container>\r\n        <Form onSubmit={handleSubmit} loading={Loading}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field value={CREATE_DOCTOR.Fname}>\r\n              <label>First Name</label>\r\n              <Input\r\n                required\r\n                placeholder=\"First Name\"\r\n                name=\"Fname\"\r\n                onChange={handleInput}\r\n\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Field value={CREATE_DOCTOR.Mname}>\r\n              <label> Middle Name</label>\r\n              <Input\r\n                required\r\n                name=\"Mname\"\r\n                onChange={handleInput}\r\n                placeholder=\"Middle Name\"\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Field value={CREATE_DOCTOR.Lname}>\r\n              <label>Last Name:</label>\r\n              <Input\r\n                required\r\n                placeholder=\"Last Name\"\r\n                name=\"Lname\"\r\n                onChange={handleInput}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Divider section/>\r\n          <Form.Group widths=\"3\">\r\n            <Form.Field value={CREATE_DOCTOR.Email}>\r\n              <label>Email</label>\r\n              <Input\r\n                required\r\n                type=\"email\"\r\n                control={Input}\r\n                placeholder=\"Email\"\r\n                name=\"Email\"\r\n                onChange={handleInput}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field value={CREATE_DOCTOR.phone_Number}>\r\n              <label>Phone Number</label>\r\n              <Input\r\n                required\r\n                align=\"center\"\r\n                width=\"4\"\r\n                placeholder=\"Phone Number\"\r\n                name=\"phone_Number\"\r\n                onChange={handleInput}\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Field value={CREATE_DOCTOR.File_Number}>\r\n              <label>File Number</label>\r\n              <Input\r\n                required\r\n                type=\"number\"\r\n                name=\"File_Number\"\r\n                onChange={handleInput}\r\n                width=\"4\"\r\n                placeholder=\"File Number\"\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Divider section/>\r\n          <Form.Group widths=\"equal\">\r\n           \r\n\r\n            <Form.Field value={CREATE_DOCTOR.Rank}>\r\n              <label>Rank</label>\r\n              \r\n                <select name=\"Rank\" onChange={handleInput}>\r\n                <option value=\"\" selected disabled hidden>Select Rank</option>\r\n                  <option value=\"Doctor\" >Doctor</option>\r\n                  <option value=\"Head of Department\" >Head of Department</option>\r\n                  <option value=\"Doctor Assistant\" >Doctor Assistant</option>\r\n                  </select>\r\n            </Form.Field>\r\n\r\n            <Form.Field value={CREATE_DOCTOR.Contract_Type}>\r\n              <label>Contract Type</label>\r\n            \r\n               <select name=\"Contract_Type\" onChange={handleInput}>\r\n               <option value=\"\" selected disabled hidden>Select contract type</option>\r\n                  <option value=\"Full Time\" >Full Time</option>\r\n                  <option value=\"Part Time\" >Part Time</option>\r\n                  <option value=\"Mallak\" >Mallak</option>\r\n                  </select>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Divider section/>\r\n          <Form.Field>\r\n            <Button color=\"green\" floated=\"right\">\r\n              <Icon name=\"add\"/>\r\n              Create Doctor</Button>\r\n          </Form.Field>\r\n        </Form>\r\n        <Link to=\"/doctors\">\r\n           <Button\r\n            content=\"Back\"\r\n             icon=\"arrow left\"\r\n             color=\"red\" \r\n             /></Link>\r\n      </Container>\r\n  );\r\n};\r\nexport default Create;\r\n","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Doctors\\Details.js",["290","291"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport { Container, Message, Table, Icon, Divider, Button } from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom'\r\nimport cookies from 'js-cookies';\r\n\r\nconst Details = () => {\r\n  const [doctor, setdoctor] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [Reg, setReg] = useState([]);\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const token=cookies.getItem(\"token\");\r\n    const payload={headers:{Authorization:token}};\r\n    axios.get('http://localhost:4000/doctors/details/' + id)\r\n    .then(Dr=>{\r\n      console.log(Dr.data.Reg);\r\n      let x = Dr.data.Reg.sort((a, b) => (a.Facility_year < b.Facility_year  ? 1 : -1));\r\n      setReg(x);\r\n      setdoctor(Dr.data.Doctor);\r\n      setLoading(false);\r\n    })\r\n    .catch(err=>{\r\n\r\n      window.location.href=\"/error\"\r\n    })\r\n  \r\n\r\n  }, []);\r\n  console.log(Reg);\r\n  return (\r\n    <Container >\r\n      {\r\n        (loading) ?\r\n          <Message icon style={{ marginTop: \"20%\" }}>\r\n            <Icon name='circle notched' loading />\r\n            <Message.Content>\r\n              <Message.Header>Just one second</Message.Header>\r\n                We are fetching that content for you.\r\n              </Message.Content>\r\n          </Message>\r\n          :\r\n          (\r\n            <Container fluid>\r\n              <Divider section horizontal>Info</Divider>\r\n            <Table    >\r\n            <Table.Header>\r\n              <Table.Row >\r\n\r\n                <Table.HeaderCell >First name</Table.HeaderCell>\r\n                <Table.HeaderCell >Middle name</Table.HeaderCell>\r\n                <Table.HeaderCell >Last name</Table.HeaderCell>\r\n                <Table.HeaderCell >File number</Table.HeaderCell>\r\n                <Table.HeaderCell >Email</Table.HeaderCell>\r\n                <Table.HeaderCell >Phone number</Table.HeaderCell>\r\n                <Table.HeaderCell >Rank</Table.HeaderCell>\r\n                <Table.HeaderCell >Contract type</Table.HeaderCell>\r\n\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n\r\n\r\n              <Table.Row>\r\n                <Table.Cell >{doctor.Fname}</Table.Cell>\r\n                <Table.Cell >{doctor.Mname}</Table.Cell>\r\n                <Table.Cell >{doctor.Lname}</Table.Cell>\r\n                <Table.Cell >{doctor.File_Number}</Table.Cell>\r\n                <Table.Cell >{doctor.Email}</Table.Cell>\r\n                <Table.Cell >{doctor.phone_Number}</Table.Cell>\r\n                <Table.Cell >{doctor.Rank}</Table.Cell>\r\n                <Table.Cell >{doctor.Contract_Type}</Table.Cell>\r\n\r\n              </Table.Row>\r\n\r\n\r\n\r\n\r\n            </Table.Body>\r\n\r\n\r\n          </Table>\r\n          <Divider horizontal section>Registrations</Divider>\r\n           <Table>\r\n           <Table.Header>\r\n             <Table.Row >\r\n   \r\n               <Table.HeaderCell >Course Code</Table.HeaderCell>\r\n               <Table.HeaderCell >Faculity year</Table.HeaderCell>\r\n               <Table.HeaderCell >Language</Table.HeaderCell>\r\n              \r\n               <Table.HeaderCell >Lab - Course - Exercise</Table.HeaderCell>\r\n               <Table.HeaderCell >Course hours</Table.HeaderCell>\r\n               <Table.HeaderCell >Exercise hours</Table.HeaderCell>\r\n               <Table.HeaderCell >Lab hours</Table.HeaderCell>\r\n               <Table.HeaderCell >Section ID</Table.HeaderCell>\r\n   \r\n             </Table.Row>\r\n           </Table.Header>\r\n   \r\n           <Table.Body>\r\n   \r\n             {\r\n               Reg.map((R) => {\r\n                 return (\r\n   \r\n                   <Table.Row>\r\n                     <Table.Cell textAlign=\"center\">{R.Course_Code}</Table.Cell>\r\n                     <Table.Cell textAlign=\"center\">{R.Facility_year}</Table.Cell>\r\n                     <Table.Cell textAlign=\"center\">{(R.EN_Section) ? (R.FR_Section) ? \"A & F\" : \"A\" :\r\n                       (R.FR_Section) ? \"F\" : null\r\n                     }</Table.Cell>\r\n                     <Table.Cell textAlign=\"center\" >{(R.Course) ? (R.Lab) ? (R.Exercise)? \"C+L+E\":\"C+L\" :(R.Exercise)? \"C+E\":\"C\" :\r\n                                                    (R.Lab) ? (R.Exercise)? \"L+E\":\"L\" :(R.Exercise)? \"E\":null\r\n                                                    }</Table.Cell>\r\n                   \r\n                     <Table.Cell textAlign=\"center\">{R.Course_hours}</Table.Cell>\r\n                     <Table.Cell textAlign=\"center\">{R.Exercise_hours}</Table.Cell>\r\n                     <Table.Cell textAlign=\"center\">{R.Lab_hours}</Table.Cell>\r\n                     <Table.Cell textAlign=\"center\">{R.Section_ID}</Table.Cell>\r\n                   </Table.Row>\r\n                 )\r\n               }\r\n              \r\n               )\r\n             }\r\n   \r\n   \r\n   \r\n   \r\n           </Table.Body>\r\n   \r\n         </Table>\r\n         <Link to=\"/doctors\">\r\n           <Button\r\n            content=\"Back\"\r\n             icon=\"arrow left\"\r\n             color=\"red\" \r\n              /></Link>\r\n         </Container>\r\n          )\r\n         \r\n      }\r\n    \r\n    </Container>\r\n    \r\n  );\r\n\r\n}\r\nexport default Details;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Course.js",[],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Update.js",["292"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport {  Button, Form, Input, Radio, Container ,Divider, Icon} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cookies from 'js-cookies'\r\n\r\nconst Update = () => {\r\n  var [crses, setcrses] = useState([]);\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    const token=cookies.getItem(\"token\");\r\n    const payload={headers:{Authorization:token}};\r\n     axios.get(\r\n      \"http://localhost:4000/courses/update/\" + id,payload\r\n    ).then(course=>{\r\n      setcrses(course.data);\r\n      crses = course.data;\r\n      console.log(course.data, crses);\r\n    })\r\n    .catch(err=>{\r\n      window.location.href=\"/error\";\r\n    })\r\n   \r\n  }, []);\r\n\r\n  const CREATE_COURSE = {\r\n    Course_code: crses.Course_code,\r\n    course_name: crses.course_name,\r\n    Total_Hours: crses.Total_Hours,\r\n    Description: crses.Description,\r\n    credits: crses.credits,\r\n    available: crses.available,\r\n    Semester_Nb: crses.Semester_Nb,\r\n    Course_Type: crses.Course_Type,\r\n    Course_hours: crses.Course_hours,\r\n    Lab_hours: crses.Lab_hours,\r\n    Exercise_hours: crses.Exercise_hours,\r\n  };\r\n  const [create_course, set_create_course] = useState(CREATE_COURSE);\r\n\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    set_create_course((prev) => ({ ...prev, [name]: value }));\r\n    console.log(create_course);\r\n  };\r\n  const handleSubmit = async () => {\r\n    const x = await axios.put(\r\n      \"http://localhost:4000/courses/update/\" + id,\r\n      create_course\r\n    );\r\n  \r\n    console.log(x);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form method=\"POST\" onSubmit={()=>{handleSubmit();  window.location.href=\"/courses\"}}>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field>\r\n            <label>Course Code</label>\r\n            <Input\r\n              required\r\n              placeholder={CREATE_COURSE.Course_code}\r\n              name=\"Course_code\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label> Course Name</label>\r\n            <Input\r\n              required\r\n              name=\"course_name\"\r\n              onChange={handleInput}\r\n              placeholder={CREATE_COURSE.course_name}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Total Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              placeholder={CREATE_COURSE.Total_Hours}\r\n              name=\"Total_Hours\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n         \r\n        </Form.Group>\r\n        <Divider section/>\r\n        <Form.Group widths=\"3\">\r\n        <Form.Field>\r\n            <label>Description</label>\r\n            <Input\r\n              required\r\n              placeholder={CREATE_COURSE.Description}\r\n              name=\"Description\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field value={CREATE_COURSE.available} >\r\n            <lable style={{marginLeft:\"50%\"}}>Available</lable>\r\n            <Radio\r\n              style={{marginLeft:\"50%\"}}\r\n              toggle\r\n              name=\"available\"\r\n              checked={create_course.available}\r\n              onChange={handleInput}\r\n              value={CREATE_COURSE.available}\r\n              onClick={() =>\r\n                (create_course.available = !create_course.available)\r\n              }\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n              <label>Credits</label>\r\n              <input\r\n                name=\"credits\"\r\n                placeholder={CREATE_COURSE.credits}\r\n                required\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"30\"\r\n                onChange={handleInput}\r\n              />\r\n            </Form.Field>\r\n\r\n        </Form.Group>\r\n        <Divider section/>\r\n          <Form.Group widths=\"equal\">\r\n            \r\n            <Form.Field>\r\n              <label>Semester Number</label>\r\n\r\n              <select\r\n                name=\"Semester_Nb\"\r\n                placeholder={create_course.Semester_Nb}\r\n                onChange={handleInput}\r\n              >\r\n                <option value=\"S1\">S1</option>\r\n                <option value=\"S2\">S2</option>\r\n                <option value=\"S3\">S3</option>\r\n                <option value=\"S4\">S4</option>\r\n                <option value=\"S5\">S5</option>\r\n                <option value=\"S6\">S6</option>\r\n                <option value=\"S7\">S7</option>\r\n                <option value=\"S8\">S8</option>\r\n              </select>\r\n            </Form.Field>\r\n\r\n            <Form.Field name=\"Course_Type\">\r\n              <label>Course Type</label>\r\n              <select\r\n                onChange={handleInput}\r\n                name=\"Course_Type\"\r\n                placeholder={create_course.Course_Type}\r\n              >\r\n                <option value=\"Obligatory\">Obligatory</option>\r\n                <option value=\"Elective\">Elective</option>\r\n              </select>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Divider section/>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field value={CREATE_COURSE.Course_hours}>\r\n            <label>Course Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              name=\"Course_hours\"\r\n              placeholder={CREATE_COURSE.Course_hours}\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Lab Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              placeholder={CREATE_COURSE.Lab_hours}\r\n              name=\"Lab_hours\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field value={CREATE_COURSE.Exercise_hours}>\r\n            <label>Exercise Hours</label>\r\n            <Input\r\n              required\r\n              type=\"number\"\r\n              placeholder={CREATE_COURSE.Exercise_hours}\r\n              name=\"Exercise_hours\"\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field>\r\n          <Button floated=\"right\"  color=\"green\">\r\n            <Icon name=\"redo\"/>\r\n            update</Button>\r\n        </Form.Field>\r\n      </Form>\r\n      <Link to=\"/courses\"><Button icon=\"left arrow\" content=\"Back\" color=\"red\" /></Link>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Courses\\Details.js",["293","294","295"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport {Container,Message,Table,Icon,Divider} from 'semantic-ui-react'\r\nimport cookies from 'js-cookies';\r\n\r\nconst Details=()=> {\r\n    const [crses,setcrses]=useState([]);\r\n\r\n    const [Doctors,setDoctors]=useState([]);\r\n    const [Reg,setReg]=useState([]);\r\n    const [loading,setLoading]=useState(false);\r\n    const {id}=useParams();\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n       \r\n        const token=cookies.getItem(\"token\");\r\n        const payload={headers:{Authorization:token}};\r\n\r\n        axios.get('http://localhost:4000/courses/details/'+id,payload)\r\n        .then(req=>{\r\n          let x = req.data.Reg.sort((a, b) => (a.Facility_year < b.Facility_year  ? 1 : -1));\r\n          setDoctors(req.data.Doc)\r\n          setcrses(req.data.course);\r\n          setReg(x);\r\n          setLoading(false);\r\n        })\r\n       .catch(err=>{\r\n        \r\n        console.log(err);\r\n      })\r\n\r\n        \r\n    },[]);\r\n    \r\n\r\n    var name,contracttype,Rank;\r\n    const findDoctor=(Fnumber)=>{\r\n     \r\n        const data=Doctors.filter(i=>i.File_Number === Fnumber);\r\n        console.log(data)\r\n        name=data[0].Fname;\r\n        contracttype=data[0].Contract_Type;\r\n        Rank=data[0].Rank;\r\n    }\r\n  \r\nconsole.log(Reg)\r\n        return (\r\n            <Container>\r\n                 {\r\n            (loading)? \r\n            <Message icon style={{marginTop:\"20%\"}}>\r\n    <Icon name='circle notched' loading />\r\n    <Message.Content>\r\n      <Message.Header>Just one second</Message.Header>\r\n      We are fetching that content for you.\r\n    </Message.Content>\r\n  </Message>\r\n            :\r\n            <div>\r\n              <Divider horizontal content=\"INFO\"/>\r\n            <Table    >\r\n            <Table.Header>\r\n              <Table.Row >\r\n                  \r\n                <Table.HeaderCell >Code</Table.HeaderCell>\r\n                <Table.HeaderCell >Name</Table.HeaderCell>\r\n                <Table.HeaderCell >Credits</Table.HeaderCell>\r\n                <Table.HeaderCell >Type</Table.HeaderCell>\r\n                <Table.HeaderCell >Semester Nb</Table.HeaderCell>\r\n                <Table.HeaderCell >Total hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Course hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Exercise hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Lab hrs</Table.HeaderCell>\r\n                <Table.HeaderCell >Available</Table.HeaderCell>\r\n                <Table.HeaderCell >Description</Table.HeaderCell>\r\n                \r\n              </Table.Row>\r\n            </Table.Header>\r\n        \r\n            <Table.Body>\r\n                \r\n               \r\n                              <Table.Row>\r\n                              <Table.Cell>{crses.Course_code}</Table.Cell>\r\n                              <Table.Cell>{crses.course_name}</Table.Cell>\r\n                              <Table.Cell>{crses.credits}</Table.Cell>\r\n                              <Table.Cell>{crses.Course_Type}</Table.Cell>\r\n                              <Table.Cell>{crses.Semester_Nb}</Table.Cell>\r\n                              <Table.Cell>{crses.Total_Hours}</Table.Cell>\r\n                              <Table.Cell>{crses.Course_hours}</Table.Cell>\r\n                              <Table.Cell>{crses.Exercise_hours}</Table.Cell>\r\n                              <Table.Cell>{crses.Lab_hours}</Table.Cell>\r\n                              <Table.Cell>{crses.available?'true':'false'}</Table.Cell>\r\n                              <Table.Cell>{crses.Description}</Table.Cell>\r\n                             \r\n                            </Table.Row>\r\n                          \r\n                   \r\n                \r\n             \r\n            </Table.Body>\r\n        \r\n          \r\n          </Table>\r\n          <Divider horizontal content=\"Registrations\"/>\r\n          <Table celled>\r\n                <Table.Header>\r\n                    <Table.Row >\r\n    \r\n                        <Table.HeaderCell >Course Code</Table.HeaderCell>\r\n                        <Table.HeaderCell >Doctor name</Table.HeaderCell>\r\n                        <Table.HeaderCell >Faculity year</Table.HeaderCell>\r\n                        <Table.HeaderCell >Language</Table.HeaderCell>\r\n                        <Table.HeaderCell >Lab - Exercise - Course</Table.HeaderCell>\r\n                       \r\n                        <Table.HeaderCell >Lab_hours</Table.HeaderCell>\r\n                        <Table.HeaderCell >Exercise_hours</Table.HeaderCell>\r\n                        <Table.HeaderCell >Course_hours</Table.HeaderCell>\r\n                        <Table.HeaderCell >Section_ID</Table.HeaderCell>\r\n                        <Table.HeaderCell >Location</Table.HeaderCell>\r\n                  \r\n                    </Table.Row>\r\n                </Table.Header>\r\n    \r\n                <Table.Body>\r\n                    {\r\n                      \r\n                        Reg.map((i, index) => {\r\n                           findDoctor(i.DFile_number)\r\n                        \r\n                            return (\r\n                                \r\n                                <Table.Row>\r\n    \r\n                                    <Table.Cell >{i.Course_Code}</Table.Cell>\r\n                                    <Table.Cell >{name}</Table.Cell>\r\n                                    <Table.Cell >{i.Facility_year}</Table.Cell>\r\n                                    <Table.Cell >{i.Language}</Table.Cell>\r\n                                    <Table.Cell >{(i.Course) ? (i.Lab) ? (i.Exercise)? \"C+L+E\":\"C+L\" :(i.Exercise)? \"C+E\":\"C\" :\r\n                                                    (i.Lab) ? (i.Exercise)? \"L+E\":\"L\" :(i.Exercise)? \"E\":null\r\n                                                    }</Table.Cell>\r\n                                    \r\n                                    <Table.Cell >{i.Lab_hours}</Table.Cell>\r\n                                    <Table.Cell >{i.Exercise_hours}</Table.Cell>\r\n                                    <Table.Cell >{i.Course_hours}</Table.Cell>\r\n                                    <Table.Cell >{i.Section_ID}</Table.Cell>\r\n                                    <Table.Cell >{i.Location}</Table.Cell>\r\n                                  \r\n                                </Table.Row>\r\n                                \r\n                            )\r\n                        })\r\n    \r\n                    }\r\n    \r\n    \r\n                </Table.Body>\r\n                </Table>\r\n          </div>\r\n        }\r\n           </Container>\r\n        );\r\n    \r\n}\r\nexport default Details;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Distributions.js",["296","297"],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Create.js",["298","299","300","301","302","303","304","305","306"],"D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Distributions\\Distributions.js",["307","308"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Icon, Table ,Container,Message} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Distribution = () => {\r\n    const [distributions,setDistributions]=useState([]);\r\n    const[loading,setLoading]=useState(false);\r\n    useEffect(async ()=>{\r\n        setLoading(true)\r\n        const Ds=await axios.get('http://localhost:4000/distributions');\r\n        setDistributions(Ds.data);\r\n        setLoading(false);\r\n        console.log(Ds.data);\r\n        \r\n    },[])\r\n\r\n\r\n    return(\r\n        <Container style={{marginTop:'2em'}}>\r\n        {\r\n            (loading)? \r\n            <Message icon>\r\n    <Icon name='circle notched' loading />\r\n    <Message.Content>\r\n      <Message.Header>Just one second</Message.Header>\r\n      We are fetching that content for you.\r\n    </Message.Content>\r\n  </Message>\r\n            :\r\n            <Table compact celled style={{fontSize:\"15px\"}}>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell textAlign=\"center\">Distribution name</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Date</Table.HeaderCell>\r\n                <Table.HeaderCell textAlign=\"center\">Version</Table.HeaderCell>\r\n                <Table.HeaderCell />\r\n              </Table.Row>\r\n            </Table.Header>\r\n        \r\n            <Table.Body>\r\n                {\r\n                    distributions.map(d=>{\r\n                          return(\r\n                              <Table.Row>\r\n                                   <Table.Cell textAlign=\"center\">\r\n                                  <Link to={`/distributions/details/${d._id}`}>\r\n                                  {d.Name}\r\n                                  </Link>\r\n                              </Table.Cell>\r\n                              <Table.Cell textAlign=\"center\">{d.Date}</Table.Cell>\r\n                              <Table.Cell textAlign=\"center\">{(d.Version)? \"Final\":\"Not Complete\"}</Table.Cell>\r\n                              <Table.Cell collapsing>\r\n                                <Link to={`/distributions/update/${d._id}` }>\r\n                              <Button \r\n                              content=\"Update\" \r\n                              color=\"blue\"\r\n                              \r\n                              size='small'\r\n                              icon=\"redo\"\r\n                              />\r\n                              </Link>\r\n                              <Button\r\n                               content=\"Delete\" \r\n                               icon=\"trash\"\r\n                               color=\"red\"\r\n                               size='small'\r\n                               onClick={()=>{\r\n                                 setLoading(true);\r\n                                 const req =axios.delete('http://localhost:4000/distributions/'+d._id);\r\n                                 setLoading(false);\r\n                                 window.location.reload();\r\n                               }}\r\n                               />\r\n  \r\n  \r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                    })\r\n                   \r\n                }\r\n             \r\n            </Table.Body>\r\n        \r\n            <Table.Footer fullWidth>\r\n              <Table.Row>\r\n                <Table.HeaderCell colSpan='12'>\r\n                    <Link to='/doctors/create'>\r\n                  <Button\r\n                    floated='right'\r\n                    icon\r\n                    labelPosition='left'\r\n                    color=\"green\"\r\n                    size='small'\r\n                  >\r\n                    <Icon name='add' />\r\n                    Add Course \r\n                  </Button>\r\n                  </Link>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n          </Table>\r\n        }\r\n        \r\n        \r\n        </Container>\r\n        \r\n            \r\n    )\r\n            \r\n}\r\n   \r\n\r\n\r\nexport default Distribution;","D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Distributions\\Create.js",["309","310","311","312","313","314","315"],"D:\\Course-distribution\\Senior_project-master\\Senior_project-master\\course-distribution\\src\\Distributions\\Details.js",["316","317"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport { Container, Message, Table, Icon } from 'semantic-ui-react'\r\n\r\nconst Details = () => {\r\n    const [Distributions, setDistributions] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const { id } = useParams();\r\n    useEffect(async () => {\r\n        setLoading(true);\r\n        const Ds = await axios.get('http://localhost:4000/distributions/details/' + id);\r\n        console.log(Ds.data.Registrations);\r\n        setDistributions(Ds.data.Registrations);\r\n        setLoading(false);\r\n        console.log(Ds.data.Registrations);\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                (loading) ?\r\n                    <Message icon style={{ marginTop: \"20%\" }}>\r\n                        <Icon name='circle notched' loading />\r\n                        <Message.Content>\r\n                            <Message.Header>Just one second</Message.Header>\r\n                            We are fetching that content for you.\r\n                            </Message.Content>\r\n                    </Message>\r\n                    :\r\n\r\n                            <Table    >\r\n                                <Table.Header>\r\n                                    <Table.Row >\r\n\r\n                                        <Table.HeaderCell >Course Code</Table.HeaderCell>\r\n                                        <Table.HeaderCell >DFile number</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Facility year</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Section</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Lab</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Exercise</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Course</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Lab_hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Exercise_hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Course_hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Section_ID</Table.HeaderCell>\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n\r\n                                <Table.Body>\r\n                                    {\r\n                                        Distributions.map(i => {\r\n                                            return (\r\n                                                <Table.Row>\r\n\r\n                                                    <Table.Cell >{i.Course_Code}</Table.Cell>\r\n                                                    <Table.Cell >{i.DFile_number}</Table.Cell>\r\n                                                    <Table.Cell >{i.Facility_year}</Table.Cell>\r\n                                                    <Table.Cell >{i.Section_ID}</Table.Cell>\r\n                                                    <Table.Cell >{(i.Lab)?<Icon name=\"check\" color=\"green\"/>:<Icon name=\"cancel\" color=\"red\"/>}</Table.Cell>\r\n                                                    <Table.Cell >{i.Exercise ?<Icon name=\"check\" color=\"green\"/>:<Icon name=\"cancel\" color=\"red\"/>}</Table.Cell>\r\n                                                    <Table.Cell >{i.Course ?<Icon name=\"check\" color=\"green\"/>:<Icon name=\"cancel\" color=\"red\"/>}</Table.Cell>\r\n                                                    <Table.Cell >{i.Lab_hours}</Table.Cell>\r\n                                                    <Table.Cell >{i.Exercise_hours}</Table.Cell>\r\n                                                    <Table.Cell >{i.Course_hours}</Table.Cell>\r\n                                                    <Table.Cell >{i.Section_ID}</Table.Cell>\r\n\r\n                                                </Table.Row>\r\n                                            )\r\n                                        })\r\n\r\n                                    }\r\n\r\n\r\n\r\n\r\n                                </Table.Body>\r\n\r\n\r\n                            </Table>\r\n                    \r\n                    \r\n            }\r\n\r\n        </Container>\r\n    );\r\n\r\n}\r\nexport default Details;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Details.js",["318","319","320","321","322"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport { Container, Message, Table, Icon ,Divider} from 'semantic-ui-react'\r\nimport ReactToExcel from 'react-html-table-to-excel';\r\nimport cookies from 'js-cookies';\r\n\r\n\r\n\r\nconst Details = () => {\r\n    const [Distributions, setDistributions] = useState([]);\r\n    const [Distributions2, setDistributions2] = useState([]);\r\n    const [Courses, setCourses] = useState([]);\r\n    const [Doctors, setDoctors] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const token=cookies.getItem(\"token\");\r\n        console.log(\"my token : \"+token);\r\n        const payload={headers:{Authorization:token}};\r\n        axios.get('http://localhost:4000/distributions/details/' + id,payload)\r\n        .then(Ds=>{\r\n            const myData = [].concat(Ds.data.Dist.Registrations)\r\n            .sort((a, b) => a.Course_Code  > b.Course_Code  ? 1 : -1);\r\n            const myData2 = [].concat(Ds.data.Dist.Registrations)\r\n            .sort((a, b) => a.DFile_number  > b.DFile_number  ? 1 : -1);\r\n\r\n         \r\n            setDistributions(myData);         \r\n            setDistributions2(myData2);\r\n            setDoctors(Ds.data.Drs);\r\n            setCourses(Ds.data.Crs);\r\n            setLoading(false);\r\n           \r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n            window.location.href=\"/error\"\r\n        })\r\n      \r\n    }, []);\r\n    var name,SemesterNb,coursename,contracttype,courseTotalhours=0,hourstaken=0,emptyhours=0,Rank;\r\n    \r\n    const findDoctor=(Fnumber)=>{\r\n        const data=Doctors.filter(i=>i.File_Number === Fnumber);\r\n        console.log(data[0].Fname)\r\n        name=data[0].Fname;\r\n        contracttype=data[0].Contract_Type;\r\n        Rank=data[0].Rank;\r\n    }\r\n\r\n    const findCourse=(code)=>{\r\n        courseTotalhours=0\r\n        const data=Courses.filter(i=>i.Course_code === code);\r\n        const data2=Distributions.filter(i=>i.Course_Code === code);\r\n        SemesterNb=data[0].Semester_Nb;\r\n        coursename=data[0].course_name;\r\n        data2.map(i=>{\r\n            courseTotalhours+=i.Course_hours+i.Lab_hours+i.Exercise_hours;\r\n        })\r\n       \r\n    }\r\n    // const findhours=(code)=>{\r\n    //     hourstaken=0;\r\n    //     const data=Distributions.filter(i=>i.Course_Code === code);\r\n    //     data.map(i=>{\r\n    //         hourstaken+=i.Lab_hours + i.Course_hours+i.Exercise_hours;\r\n    //     })\r\n    //     emptyhours=courseTotalhours-hourstaken;\r\n       \r\n\r\n    // }\r\n    var Teachinghouurs=0;\r\n    const  findteachinghours=(Fnb)=>{\r\n        Teachinghouurs=0\r\n        const data=Distributions.filter(i=>i.DFile_number === Fnb);\r\n        data.map(i=>{\r\n            Teachinghouurs+=i.Lab_hours + i.Course_hours+i.Exercise_hours;\r\n        })\r\n       \r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                (loading) ?\r\n                    <Message icon style={{ marginTop: \"20%\" }}>\r\n                        <Icon name='circle notched' loading />\r\n                        <Message.Content>\r\n                            <Message.Header>Just one second</Message.Header>\r\n                            We are fetching that content for you.\r\n                            </Message.Content>\r\n                    </Message>\r\n                    :\r\n                            <div>\r\n                                <Divider section horizontal >By Courses</Divider>\r\n                            <Table  id=\"distribution-details-table\">\r\n                                <Table.Header>\r\n                                    <Table.Row >\r\n\r\n                                        <Table.HeaderCell >Course Code</Table.HeaderCell>\r\n                                       \r\n                                        <Table.HeaderCell >Semester Number</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Course Name</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Lab_hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Exercise_hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Course_hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Language</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Section_ID</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Doctor Name</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Contract Type</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Total hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Location</Table.HeaderCell>\r\n\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n\r\n                                <Table.Body>\r\n                                    {\r\n                                        Distributions.map((i,index) => {\r\n                                            findDoctor(i.DFile_number);\r\n                                            findCourse(i.Course_Code);\r\n                                            //findhours(i.Course_Code)\r\n                                            return (\r\n                                                <Table.Row>\r\n\r\n                                                    <Table.Cell >{i.Course_Code}</Table.Cell>\r\n                                                    \r\n                                                    <Table.Cell >\r\n                                                    { SemesterNb }\r\n                                                    </Table.Cell>\r\n                                                    <Table.Cell >{coursename}</Table.Cell>\r\n                                                    <Table.Cell >{i.Lab_hours}</Table.Cell>\r\n                                                    <Table.Cell >{i.Exercise_hours}</Table.Cell>\r\n                                                    <Table.Cell >{i.Course_hours}</Table.Cell>\r\n                                                    <Table.Cell >{i.Language}</Table.Cell>\r\n                                                    <Table.Cell >{i.Section_ID}</Table.Cell>\r\n                                                    <Table.Cell >{name}</Table.Cell>\r\n                                                    <Table.Cell >{contracttype}</Table.Cell>\r\n                                                    <Table.Cell >{courseTotalhours}</Table.Cell>\r\n                                                    <Table.Cell >{ i.Location}</Table.Cell>\r\n\r\n                                                </Table.Row>\r\n                                            )\r\n                                        })\r\n\r\n                                    }\r\n\r\n\r\n\r\n\r\n                                </Table.Body>\r\n\r\n\r\n                            </Table>\r\n                            <ReactToExcel \r\n                            table=\"distribution-details-table\"\r\n                            filename=\"Distribution details \"\r\n                            sheet=\"Sheet\"\r\n                            buttonText=\"Export To Excel\"\r\n                            className=\"ui primary button\"\r\n                            />\r\n\r\n\r\n                            <Divider section horizontal>By Doctors</Divider>\r\n                            <Table  id=\"distribution2-details-table\">\r\n                                <Table.Header>\r\n                                    <Table.Row >\r\n\r\n                                        <Table.HeaderCell >Doctor Name</Table.HeaderCell>\r\n                                       \r\n                                        <Table.HeaderCell >Rank</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Contract Type</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Course name</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Semester Nb</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Course Code</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Lab - Course -Exercise</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Teaching Hours</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Language</Table.HeaderCell>\r\n                                        <Table.HeaderCell >Total hours</Table.HeaderCell>\r\n\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n\r\n                                <Table.Body>\r\n                                    {\r\n                                        Distributions2.map((i,index) => {\r\n                                            findDoctor(i.DFile_number);\r\n                                            findCourse(i.Course_Code);\r\n                                            findteachinghours(i.DFile_number)\r\n                                            var h=i.Exercise_hours+i.Lab_hours+i.Course_hours;\r\n                                            return (\r\n                                                <Table.Row>\r\n\r\n                                                    <Table.Cell >{name}</Table.Cell>\r\n                                                    \r\n                                                    <Table.Cell >\r\n                                                    { Rank }\r\n                                                    </Table.Cell>\r\n                                                    <Table.Cell >{contracttype}</Table.Cell>\r\n                                                    <Table.Cell >{coursename}</Table.Cell>\r\n                                                    <Table.Cell >{SemesterNb}</Table.Cell>\r\n                                                    <Table.Cell >{i.Course_Code}</Table.Cell>\r\n\r\n\r\n\r\n                                                    <Table.Cell>{(i.Course) ? (i.Lab) ? (i.Exercise)? \"C+L+E\":\"C+L\" :(i.Exercise)? \"C+E\":\"C\" :\r\n                                                    (i.Lab) ? (i.Exercise)? \"L+E\":\"L\" :(i.Exercise)? \"E\":null\r\n                                                    }</Table.Cell>\r\n\r\n                                                    <Table.Cell >{h}</Table.Cell>\r\n\r\n                                                    <Table.Cell >{i.Language}</Table.Cell>\r\n                                                   \r\n                                                    <Table.Cell >{ Teachinghouurs}</Table.Cell>\r\n\r\n                                                </Table.Row>\r\n                                            )\r\n                                        })\r\n\r\n                                    }\r\n\r\n\r\n\r\n\r\n                                </Table.Body>\r\n\r\n\r\n                            </Table>\r\n                            <ReactToExcel \r\n                            table=\"distribution2-details-table\"\r\n                            filename=\"Distribution details \"\r\n                            sheet=\"Sheet\"\r\n                            buttonText=\"Export To Excel\"\r\n                            className=\"ui primary button\"\r\n                            />\r\n                            </div>\r\n                    \r\n                    \r\n            }\r\n           \r\n\r\n        </Container>\r\n    );\r\n\r\n}\r\nexport default Details;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\Registrations.js",["323","324","325","326"],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\Create.js",["327","328","329","330","331"],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\update.js",["332","333","334"],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Registrations\\Update.js",["335","336","337","338","339"],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Distributions\\Update.js",["340","341","342","343","344","345","346","347"],"D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Signup.js",["348","349","350"],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Form, Icon, Message, Segment,Container } from 'semantic-ui-react'\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport cookie from 'js-cookies';\r\n\r\nconst INITIAL_USER={\r\n    Fname:\"\",\r\n    Email:\"\",\r\n    phone_Number:\"\",\r\n    File_Number:\"\",\r\n    Lname:\"\",\r\n    Mname:\"\",\r\n    Rank:\"\",\r\n    Contract_Type:\"\",\r\n    Email:\"\",\r\n    password:\"\"\r\n  }\r\nconst Signup = () => {\r\n               \r\n  const [user,setUser]=useState(INITIAL_USER);\r\n  const [disabled,setDisabled]=useState(false);\r\n  const [Loading,setLoading]=useState(false);\r\n\r\n  useEffect(()=>{\r\n    const isuser=Object.values(user).every(el=>Boolean(el));\r\n    isuser?setDisabled(false) : setDisabled(true);\r\n  });\r\n  \r\n  const handleChange=(e)=>{\r\n    const {name,value}=e.target;\r\n    setUser(prevstate=>({...prevstate,[name]:value}))\r\n    console.log(user);\r\n  }\r\n  const handlelogin=(token)=>{\r\n    cookie.setItem('token',token);\r\n    window.location.href=\"/distributions\"\r\n    }\r\n\r\n  const handleSubmit=async(e)=>{\r\n      e.preventDefault();\r\n    try{\r\n        setLoading(true);\r\n        const payload={...user}\r\n        const res=await axios.post( \"http://localhost:4000/signup\",payload);\r\n        console.log(res.data);\r\n        handlelogin(res.data)\r\n      }catch(err){\r\n      console.log(err)\r\n    }\r\n    finally{\r\n      setLoading(false); \r\n    }\r\n  }\r\n\r\n    return (\r\n        <Container text>\r\n    <Message \r\n    attached\r\n    header=\"Get Started !\"\r\n    icon=\"settings\"\r\n    content=\"Create a new account\"\r\n    color=\"teal\"\r\n    />\r\n    <Form onSubmit={handleSubmit} loading={Loading}>\r\n      <Segment>\r\n        <Form.Input \r\n        fluid\r\n        icon=\"user\"\r\n        iconPosition=\"left\"\r\n        label=\"First name\"\r\n        placeholder=\"Name\"\r\n        name=\"Fname\"\r\n        onChange={handleChange}\r\n        value={user.Fname}\r\n        />\r\n       \r\n            <Form.Input \r\n        fluid\r\n        icon=\"user\"\r\n        iconPosition=\"left\"\r\n        label=\"Middle name\"\r\n        placeholder=\"Middle name\"\r\n        name=\"Mname\"\r\n        onChange={handleChange}\r\n        value={user.Mname}\r\n        />\r\n            <Form.Input \r\n        fluid\r\n        icon=\"user\"\r\n        iconPosition=\"left\"\r\n        label=\"Last name\"\r\n        placeholder=\"Name\"\r\n        name=\"Lname\"\r\n        onChange={handleChange}\r\n        value={user.Lname}\r\n        />\r\n            <Form.Input \r\n        fluid\r\n        icon=\"user\"\r\n        iconPosition=\"left\"\r\n        label=\"Name\"\r\n        placeholder=\"Phone\"\r\n        name=\"phone_Number\"\r\n        onChange={handleChange}\r\n        value={user.phone_Number}\r\n        />\r\n            <Form.Input \r\n        fluid\r\n        icon=\"user\"\r\n        iconPosition=\"left\"\r\n        label=\"File Number\"\r\n        placeholder=\"File Number\"\r\n        name=\"File_Number\"\r\n        onChange={handleChange}\r\n        value={user.File_Number}\r\n        />\r\n            <Form.Input \r\n        fluid\r\n        icon=\"user\"\r\n        iconPosition=\"left\"\r\n        label=\"Rank\"\r\n        placeholder=\"Rank\"\r\n        name=\"Rank\"\r\n        onChange={handleChange}\r\n        value={user.Rank}\r\n        />\r\n            <Form.Input \r\n        fluid\r\n        icon=\"user\"\r\n        iconPosition=\"left\"\r\n        label=\"Contract Type\"\r\n        placeholder=\"Contract Type\"\r\n        name=\"Contract_Type\"\r\n        onChange={handleChange}\r\n        value={user.Contract_Type}\r\n        />\r\n       \r\n         <Form.Input \r\n        fluid\r\n        icon=\"envelope\"\r\n        iconPosition=\"left\"\r\n        label=\"Email\"\r\n        placeholder=\"Email\"\r\n        type=\"email\"\r\n        name=\"Email\"\r\n        onChange={handleChange}\r\n        value={user.Email}\r\n        />\r\n        <Form.Input \r\n        fluid\r\n        type=\"password\"\r\n        icon=\"lock\"\r\n        iconPosition=\"left\"\r\n        label=\"Password\"\r\n        placeholder=\"Password\"\r\n        name=\"password\"\r\n        onChange={handleChange}\r\n        value={user.password}\r\n        />\r\n         <Button\r\n        icon=\"signup\"\r\n        type=\"submit\"\r\n        color=\"orange\"\r\n        content=\"Signup\"\r\n        disabled={disabled || Loading}\r\n        />\r\n      </Segment>\r\n    </Form>\r\n    <Message attached=\"bottom\" warning>\r\n      <Icon name=\"help\"/>\r\n      Existing user?{\" \"}\r\n      <Link href=\"/login\">\r\n        <a>Log in here</a>\r\n      </Link>{\" \"}instead\r\n    </Message>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Signup;","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Login.js",["351","352","353"],"\r\nimport {Icon} from 'semantic-ui-react'\r\nimport  { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport cookie from \"js-cookies\"\r\nimport React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst INITIAL_USER={\r\n  Email:\"\",\r\n  password:\"\"\r\n}\r\nconst Login = () => {\r\n  const [user,setUser]=useState(INITIAL_USER);\r\n      const [disabled,setDisabled]=useState(false);\r\n      useEffect(()=>{\r\n        const isuser=Object.values(user).every(el=>Boolean(el));\r\n        isuser?setDisabled(false) : setDisabled(true);\r\n      });\r\n      const [Loading,setLoading]=useState(false);\r\n      const handleChange=(e)=>{\r\n        const {name,value}=e.target;\r\n        setUser(prevstate=>({...prevstate,[name]:value}))\r\n        console.log(user);\r\n      }\r\n  \r\n      const handlelogin=(token)=>{\r\n          cookie.setItem('token',token);\r\n          window.location.href=\"/distributions\"\r\n          }\r\n  \r\n      const handleSubmit=async(e)=>{\r\n          e.preventDefault();\r\n        try{\r\n            setLoading(true);\r\n            const payload={...user};\r\n            const res=await axios.post(\"http://localhost:4000/\",payload);\r\n            handlelogin(res.data);\r\n            setLoading(false)\r\n        }catch(err){\r\n          alert(\"Please enter a valid account !!\")\r\n          setLoading(false)\r\n        }\r\n      }\r\n    \r\n    function Copyright() {\r\n        return (\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link target=\"_blank\" color=\"inherit\" href=\"https://www.ul.edu.lb/faculte/faculties.aspx\">\r\n                Lebanese University \r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n            </Typography>\r\n        );\r\n    }\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            height: '100vh',\r\n        },\r\n        image: {\r\n            backgroundImage: 'url(https://media-exp1.licdn.com/dms/image/C561BAQGPwXzf4VJ3FQ/company-background_10000/0/1567058449070?e=2159024400&v=beta&t=cTkNrc_5eOxk98-FeX5tdVkgA5p1aP-hGIhwQL8TuIo)',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundColor:theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n        },\r\n        paper: {\r\n            margin: theme.spacing(8, 4),\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n        avatar: {\r\n            margin: theme.spacing(1),\r\n            backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n            width: '100%', // Fix IE 11 issue.\r\n            marginTop: theme.spacing(1),\r\n        },\r\n        submit: {\r\n            margin: theme.spacing(3, 0, 2),\r\n        },\r\n    }));\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n    return (  \r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n            <h1>Emial: Admin@gmail.com</h1>\r\n            <h1>Password : 03234376x</h1>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                       <Icon name=\"lock\" />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"Email\"\r\n                            onChange={handleChange}\r\n                              value={user.Email}\r\n                            autoComplete=\"email\"\r\n                        autoFocus\r\n                        />    \r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                             onChange={handleChange}\r\n                           value={user.password}\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                       \r\n                        <Button\r\n                            type=\"submit\"\r\n                            onClick={handleSubmit} loading={Loading}\r\n                            disabled={disabled || Loading}\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                      \r\n                        <Box mt={5}>\r\n                            <Copyright />\r\n                        </Box>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n      </Grid>\r\n\r\n\r\n    );\r\n}\r\n \r\nexport default Login;\r\n","D:\\Course-distribution\\Senior_Project-master\\Senior_Project-master\\course-distribution\\src\\Error.js",[],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\index.js",[],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\App.js",[],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Error.js",[],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Signup.js",["354","355","356"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Navbar.js",["357"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Login.js",["358","359","360"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Registrations\\Registrations.js",["361","362"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Registrations\\Create.js",["363","364","365","366"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Create.js",["367","368"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Doctors.js",["369","370","371","372","373"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Create.js",["374"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Course.js",["375","376","377","378","379"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Registrations\\Update.js",["380","381","382"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Update.js",["383"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Details.js",["384","385"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Doctors\\Update.js",["386"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Distributions.js",["387","388","389","390","391","392","393"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Courses\\Details.js",["394","395"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Update.js",["396","397","398","399","400"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Details.js",["401","402","403"],"D:\\Course-distribution\\senior_Project-master\\senior_Project-master\\course-distribution\\src\\Distributions\\Create.js",["404","405","406","407","408"],{"ruleId":"409","replacedBy":"410"},{"ruleId":"411","replacedBy":"412"},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":26},{"ruleId":"417","severity":1,"message":"418","line":9,"column":15,"nodeType":"419","endLine":16,"endColumn":6},{"ruleId":"417","severity":1,"message":"420","line":16,"column":7,"nodeType":"421","endLine":16,"endColumn":9,"suggestions":"422"},{"ruleId":"413","severity":1,"message":"423","line":73,"column":40,"nodeType":"415","messageId":"416","endLine":73,"endColumn":43},{"ruleId":"413","severity":1,"message":"424","line":3,"column":9,"nodeType":"415","messageId":"416","endLine":3,"endColumn":17},{"ruleId":"413","severity":1,"message":"425","line":7,"column":9,"nodeType":"415","messageId":"416","endLine":7,"endColumn":12},{"ruleId":"417","severity":1,"message":"418","line":11,"column":15,"nodeType":"419","endLine":17,"endColumn":6},{"ruleId":"417","severity":1,"message":"426","line":17,"column":7,"nodeType":"421","endLine":17,"endColumn":9,"suggestions":"427"},{"ruleId":"417","severity":1,"message":"418","line":10,"column":13,"nodeType":"419","endLine":17,"endColumn":4},{"ruleId":"417","severity":1,"message":"428","line":15,"column":13,"nodeType":"429","endLine":15,"endColumn":24},{"ruleId":"417","severity":1,"message":"418","line":9,"column":15,"nodeType":"419","endLine":16,"endColumn":6},{"ruleId":"413","severity":1,"message":"423","line":70,"column":40,"nodeType":"415","messageId":"416","endLine":70,"endColumn":43},{"ruleId":"417","severity":1,"message":"418","line":10,"column":15,"nodeType":"419","endLine":16,"endColumn":6},{"ruleId":"417","severity":1,"message":"426","line":16,"column":7,"nodeType":"421","endLine":16,"endColumn":9,"suggestions":"430"},{"ruleId":"409","replacedBy":"431"},{"ruleId":"411","replacedBy":"432"},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":26},{"ruleId":"413","severity":1,"message":"433","line":8,"column":19,"nodeType":"415","messageId":"416","endLine":8,"endColumn":29},{"ruleId":"413","severity":1,"message":"434","line":2,"column":57,"nodeType":"415","messageId":"416","endLine":2,"endColumn":62},{"ruleId":"413","severity":1,"message":"435","line":11,"column":11,"nodeType":"415","messageId":"416","endLine":11,"endColumn":15},{"ruleId":"413","severity":1,"message":"436","line":14,"column":11,"nodeType":"415","messageId":"416","endLine":14,"endColumn":12},{"ruleId":"413","severity":1,"message":"437","line":35,"column":14,"nodeType":"415","messageId":"416","endLine":35,"endColumn":18},{"ruleId":"413","severity":1,"message":"438","line":96,"column":41,"nodeType":"415","messageId":"416","endLine":96,"endColumn":45},{"ruleId":"413","severity":1,"message":"423","line":129,"column":37,"nodeType":"415","messageId":"416","endLine":129,"endColumn":40},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":26},{"ruleId":"413","severity":1,"message":"439","line":20,"column":9,"nodeType":"415","messageId":"416","endLine":20,"endColumn":16},{"ruleId":"413","severity":1,"message":"440","line":16,"column":11,"nodeType":"415","messageId":"416","endLine":16,"endColumn":18},{"ruleId":"417","severity":1,"message":"426","line":31,"column":6,"nodeType":"421","endLine":31,"endColumn":8,"suggestions":"441"},{"ruleId":"417","severity":1,"message":"428","line":19,"column":15,"nodeType":"429","endLine":19,"endColumn":26},{"ruleId":"417","severity":1,"message":"426","line":34,"column":7,"nodeType":"421","endLine":34,"endColumn":9,"suggestions":"442"},{"ruleId":"413","severity":1,"message":"443","line":37,"column":14,"nodeType":"415","messageId":"416","endLine":37,"endColumn":26},{"ruleId":"413","severity":1,"message":"444","line":37,"column":27,"nodeType":"415","messageId":"416","endLine":37,"endColumn":31},{"ruleId":"413","severity":1,"message":"445","line":2,"column":50,"nodeType":"415","messageId":"416","endLine":2,"endColumn":57},{"ruleId":"413","severity":1,"message":"423","line":111,"column":40,"nodeType":"415","messageId":"416","endLine":111,"endColumn":43},{"ruleId":"446","severity":1,"message":"447","line":13,"column":29,"nodeType":"448","messageId":"449","endLine":13,"endColumn":30},{"ruleId":"417","severity":1,"message":"418","line":34,"column":15,"nodeType":"419","endLine":52,"endColumn":6},{"ruleId":"417","severity":1,"message":"450","line":52,"column":8,"nodeType":"421","endLine":52,"endColumn":10,"suggestions":"451"},{"ruleId":"413","severity":1,"message":"437","line":54,"column":17,"nodeType":"415","messageId":"416","endLine":54,"endColumn":21},{"ruleId":"452","severity":1,"message":"453","line":66,"column":31,"nodeType":"419","messageId":"454","endLine":66,"endColumn":33},{"ruleId":"413","severity":1,"message":"423","line":84,"column":15,"nodeType":"415","messageId":"416","endLine":84,"endColumn":18},{"ruleId":"413","severity":1,"message":"455","line":89,"column":23,"nodeType":"415","messageId":"416","endLine":89,"endColumn":24},{"ruleId":"413","severity":1,"message":"437","line":234,"column":53,"nodeType":"415","messageId":"416","endLine":234,"endColumn":57},{"ruleId":"413","severity":1,"message":"437","line":243,"column":53,"nodeType":"415","messageId":"416","endLine":243,"endColumn":57},{"ruleId":"417","severity":1,"message":"418","line":9,"column":15,"nodeType":"419","endLine":16,"endColumn":6},{"ruleId":"413","severity":1,"message":"423","line":70,"column":40,"nodeType":"415","messageId":"416","endLine":70,"endColumn":43},{"ruleId":"413","severity":1,"message":"456","line":4,"column":8,"nodeType":"415","messageId":"416","endLine":4,"endColumn":18},{"ruleId":"417","severity":1,"message":"418","line":15,"column":15,"nodeType":"419","endLine":19,"endColumn":6},{"ruleId":"413","severity":1,"message":"423","line":39,"column":15,"nodeType":"415","messageId":"416","endLine":39,"endColumn":18},{"ruleId":"413","severity":1,"message":"437","line":144,"column":41,"nodeType":"415","messageId":"416","endLine":144,"endColumn":45},{"ruleId":"413","severity":1,"message":"437","line":154,"column":41,"nodeType":"415","messageId":"416","endLine":154,"endColumn":45},{"ruleId":"413","severity":1,"message":"437","line":165,"column":33,"nodeType":"415","messageId":"416","endLine":165,"endColumn":37},{"ruleId":"413","severity":1,"message":"457","line":165,"column":39,"nodeType":"415","messageId":"416","endLine":165,"endColumn":44},{"ruleId":"417","severity":1,"message":"418","line":10,"column":15,"nodeType":"419","endLine":17,"endColumn":6},{"ruleId":"417","severity":1,"message":"426","line":17,"column":8,"nodeType":"421","endLine":17,"endColumn":10,"suggestions":"458"},{"ruleId":"417","severity":1,"message":"426","line":42,"column":8,"nodeType":"421","endLine":42,"endColumn":10,"suggestions":"459"},{"ruleId":"413","severity":1,"message":"460","line":43,"column":68,"nodeType":"415","messageId":"416","endLine":43,"endColumn":78},{"ruleId":"413","severity":1,"message":"461","line":43,"column":81,"nodeType":"415","messageId":"416","endLine":43,"endColumn":91},{"ruleId":"452","severity":1,"message":"453","line":59,"column":20,"nodeType":"419","messageId":"454","endLine":59,"endColumn":22},{"ruleId":"452","severity":1,"message":"453","line":78,"column":19,"nodeType":"419","messageId":"454","endLine":78,"endColumn":21},{"ruleId":"413","severity":1,"message":"462","line":2,"column":48,"nodeType":"415","messageId":"416","endLine":2,"endColumn":59},{"ruleId":"417","severity":1,"message":"450","line":41,"column":7,"nodeType":"421","endLine":41,"endColumn":9,"suggestions":"463"},{"ruleId":"413","severity":1,"message":"437","line":51,"column":12,"nodeType":"415","messageId":"416","endLine":51,"endColumn":16},{"ruleId":"413","severity":1,"message":"423","line":217,"column":44,"nodeType":"415","messageId":"416","endLine":217,"endColumn":47},{"ruleId":"413","severity":1,"message":"464","line":2,"column":9,"nodeType":"415","messageId":"416","endLine":2,"endColumn":18},{"ruleId":"446","severity":1,"message":"447","line":13,"column":19,"nodeType":"448","messageId":"449","endLine":13,"endColumn":20},{"ruleId":"413","severity":1,"message":"465","line":52,"column":10,"nodeType":"415","messageId":"416","endLine":52,"endColumn":16},{"ruleId":"452","severity":1,"message":"453","line":71,"column":19,"nodeType":"419","messageId":"454","endLine":71,"endColumn":21},{"ruleId":"417","severity":1,"message":"466","line":118,"column":6,"nodeType":"421","endLine":118,"endColumn":8,"suggestions":"467"},{"ruleId":"417","severity":1,"message":"418","line":32,"column":13,"nodeType":"419","endLine":53,"endColumn":4},{"ruleId":"417","severity":1,"message":"468","line":53,"column":6,"nodeType":"421","endLine":53,"endColumn":8,"suggestions":"469"},{"ruleId":"413","severity":1,"message":"438","line":78,"column":11,"nodeType":"415","messageId":"416","endLine":78,"endColumn":15},{"ruleId":"446","severity":1,"message":"447","line":24,"column":21,"nodeType":"448","messageId":"449","endLine":24,"endColumn":22},{"ruleId":"413","severity":1,"message":"465","line":72,"column":10,"nodeType":"415","messageId":"416","endLine":72,"endColumn":16},{"ruleId":"413","severity":1,"message":"470","line":77,"column":10,"nodeType":"415","messageId":"416","endLine":77,"endColumn":14},{"ruleId":"452","severity":1,"message":"453","line":91,"column":19,"nodeType":"419","messageId":"454","endLine":91,"endColumn":21},{"ruleId":"417","severity":1,"message":"471","line":151,"column":6,"nodeType":"421","endLine":151,"endColumn":8,"suggestions":"472"},{"ruleId":"446","severity":1,"message":"447","line":14,"column":29,"nodeType":"448","messageId":"449","endLine":14,"endColumn":30},{"ruleId":"417","severity":1,"message":"418","line":36,"column":16,"nodeType":"419","endLine":70,"endColumn":6},{"ruleId":"417","severity":1,"message":"473","line":70,"column":8,"nodeType":"421","endLine":70,"endColumn":10,"suggestions":"474"},{"ruleId":"413","severity":1,"message":"423","line":96,"column":15,"nodeType":"415","messageId":"416","endLine":96,"endColumn":18},{"ruleId":"413","severity":1,"message":"437","line":101,"column":17,"nodeType":"415","messageId":"416","endLine":101,"endColumn":21},{"ruleId":"452","severity":1,"message":"453","line":109,"column":31,"nodeType":"419","messageId":"454","endLine":109,"endColumn":33},{"ruleId":"413","severity":1,"message":"437","line":261,"column":53,"nodeType":"415","messageId":"416","endLine":261,"endColumn":57},{"ruleId":"413","severity":1,"message":"437","line":269,"column":53,"nodeType":"415","messageId":"416","endLine":269,"endColumn":57},{"ruleId":"475","severity":1,"message":"476","line":16,"column":5,"nodeType":"477","messageId":"478","endLine":16,"endColumn":10},{"ruleId":"417","severity":1,"message":"479","line":25,"column":3,"nodeType":"415","endLine":25,"endColumn":12,"suggestions":"480"},{"ruleId":"481","severity":1,"message":"482","line":174,"column":9,"nodeType":"483","endLine":174,"endColumn":12},{"ruleId":"413","severity":1,"message":"484","line":11,"column":8,"nodeType":"415","messageId":"416","endLine":11,"endColumn":24},{"ruleId":"413","severity":1,"message":"424","line":12,"column":8,"nodeType":"415","messageId":"416","endLine":12,"endColumn":16},{"ruleId":"417","severity":1,"message":"479","line":28,"column":7,"nodeType":"415","endLine":28,"endColumn":16,"suggestions":"485"},{"ruleId":"475","severity":1,"message":"476","line":16,"column":5,"nodeType":"477","messageId":"478","endLine":16,"endColumn":10},{"ruleId":"417","severity":1,"message":"479","line":25,"column":3,"nodeType":"415","endLine":25,"endColumn":12,"suggestions":"486"},{"ruleId":"481","severity":1,"message":"482","line":174,"column":9,"nodeType":"483","endLine":174,"endColumn":12},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":26},{"ruleId":"413","severity":1,"message":"484","line":11,"column":8,"nodeType":"415","messageId":"416","endLine":11,"endColumn":24},{"ruleId":"413","severity":1,"message":"424","line":12,"column":8,"nodeType":"415","messageId":"416","endLine":12,"endColumn":16},{"ruleId":"417","severity":1,"message":"479","line":28,"column":7,"nodeType":"415","endLine":28,"endColumn":16,"suggestions":"487"},{"ruleId":"413","severity":1,"message":"462","line":2,"column":48,"nodeType":"415","messageId":"416","endLine":2,"endColumn":59},{"ruleId":"413","severity":1,"message":"423","line":104,"column":44,"nodeType":"415","messageId":"416","endLine":104,"endColumn":47},{"ruleId":"417","severity":1,"message":"466","line":69,"column":6,"nodeType":"421","endLine":69,"endColumn":8,"suggestions":"488"},{"ruleId":"413","severity":1,"message":"438","line":79,"column":11,"nodeType":"415","messageId":"416","endLine":79,"endColumn":15},{"ruleId":"413","severity":1,"message":"489","line":88,"column":7,"nodeType":"415","messageId":"416","endLine":88,"endColumn":13},{"ruleId":"452","severity":1,"message":"453","line":89,"column":17,"nodeType":"419","messageId":"454","endLine":89,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":26},{"ruleId":"413","severity":1,"message":"439","line":20,"column":9,"nodeType":"415","messageId":"416","endLine":20,"endColumn":16},{"ruleId":"413","severity":1,"message":"434","line":2,"column":57,"nodeType":"415","messageId":"416","endLine":2,"endColumn":62},{"ruleId":"413","severity":1,"message":"435","line":11,"column":11,"nodeType":"415","messageId":"416","endLine":11,"endColumn":15},{"ruleId":"413","severity":1,"message":"436","line":12,"column":11,"nodeType":"415","messageId":"416","endLine":12,"endColumn":12},{"ruleId":"413","severity":1,"message":"438","line":69,"column":41,"nodeType":"415","messageId":"416","endLine":69,"endColumn":45},{"ruleId":"413","severity":1,"message":"423","line":102,"column":37,"nodeType":"415","messageId":"416","endLine":102,"endColumn":40},{"ruleId":"413","severity":1,"message":"424","line":3,"column":9,"nodeType":"415","messageId":"416","endLine":3,"endColumn":17},{"ruleId":"413","severity":1,"message":"434","line":2,"column":55,"nodeType":"415","messageId":"416","endLine":2,"endColumn":60},{"ruleId":"413","severity":1,"message":"435","line":12,"column":11,"nodeType":"415","messageId":"416","endLine":12,"endColumn":15},{"ruleId":"413","severity":1,"message":"436","line":13,"column":9,"nodeType":"415","messageId":"416","endLine":13,"endColumn":10},{"ruleId":"413","severity":1,"message":"438","line":73,"column":41,"nodeType":"415","messageId":"416","endLine":73,"endColumn":45},{"ruleId":"413","severity":1,"message":"423","line":107,"column":41,"nodeType":"415","messageId":"416","endLine":107,"endColumn":44},{"ruleId":"417","severity":1,"message":"468","line":95,"column":6,"nodeType":"421","endLine":95,"endColumn":8,"suggestions":"490"},{"ruleId":"413","severity":1,"message":"489","line":119,"column":9,"nodeType":"415","messageId":"416","endLine":119,"endColumn":15},{"ruleId":"452","severity":1,"message":"453","line":121,"column":19,"nodeType":"419","messageId":"454","endLine":121,"endColumn":21},{"ruleId":"417","severity":1,"message":"428","line":19,"column":15,"nodeType":"429","endLine":19,"endColumn":26},{"ruleId":"413","severity":1,"message":"440","line":16,"column":11,"nodeType":"415","messageId":"416","endLine":16,"endColumn":18},{"ruleId":"417","severity":1,"message":"426","line":31,"column":6,"nodeType":"421","endLine":31,"endColumn":8,"suggestions":"491"},{"ruleId":"413","severity":1,"message":"433","line":8,"column":19,"nodeType":"415","messageId":"416","endLine":8,"endColumn":29},{"ruleId":"413","severity":1,"message":"445","line":2,"column":50,"nodeType":"415","messageId":"416","endLine":2,"endColumn":57},{"ruleId":"413","severity":1,"message":"492","line":28,"column":11,"nodeType":"415","messageId":"416","endLine":28,"endColumn":23},{"ruleId":"493","severity":2,"message":"494","line":30,"column":17,"nodeType":"415","messageId":"495","endLine":30,"endColumn":22},{"ruleId":"493","severity":2,"message":"496","line":32,"column":19,"nodeType":"415","messageId":"495","endLine":32,"endColumn":24},{"ruleId":"493","severity":2,"message":"497","line":33,"column":17,"nodeType":"415","messageId":"495","endLine":33,"endColumn":21},{"ruleId":"413","severity":1,"message":"423","line":36,"column":13,"nodeType":"415","messageId":"416","endLine":36,"endColumn":16},{"ruleId":"413","severity":1,"message":"423","line":95,"column":40,"nodeType":"415","messageId":"416","endLine":95,"endColumn":43},{"ruleId":"413","severity":1,"message":"425","line":8,"column":9,"nodeType":"415","messageId":"416","endLine":8,"endColumn":12},{"ruleId":"417","severity":1,"message":"426","line":25,"column":7,"nodeType":"421","endLine":25,"endColumn":9,"suggestions":"498"},{"ruleId":"417","severity":1,"message":"418","line":18,"column":15,"nodeType":"419","endLine":60,"endColumn":6},{"ruleId":"417","severity":1,"message":"426","line":60,"column":8,"nodeType":"421","endLine":60,"endColumn":10,"suggestions":"499"},{"ruleId":"413","severity":1,"message":"423","line":81,"column":15,"nodeType":"415","messageId":"416","endLine":81,"endColumn":18},{"ruleId":"413","severity":1,"message":"437","line":216,"column":41,"nodeType":"415","messageId":"416","endLine":216,"endColumn":45},{"ruleId":"413","severity":1,"message":"437","line":226,"column":41,"nodeType":"415","messageId":"416","endLine":226,"endColumn":45},{"ruleId":"417","severity":1,"message":"426","line":42,"column":8,"nodeType":"421","endLine":42,"endColumn":10,"suggestions":"500"},{"ruleId":"452","severity":1,"message":"453","line":61,"column":19,"nodeType":"419","messageId":"454","endLine":61,"endColumn":21},{"ruleId":"452","severity":1,"message":"453","line":72,"column":19,"nodeType":"419","messageId":"454","endLine":72,"endColumn":21},{"ruleId":"413","severity":1,"message":"456","line":4,"column":8,"nodeType":"415","messageId":"416","endLine":4,"endColumn":18},{"ruleId":"417","severity":1,"message":"418","line":19,"column":15,"nodeType":"419","endLine":36,"endColumn":6},{"ruleId":"413","severity":1,"message":"423","line":57,"column":15,"nodeType":"415","messageId":"416","endLine":57,"endColumn":18},{"ruleId":"413","severity":1,"message":"437","line":181,"column":41,"nodeType":"415","messageId":"416","endLine":181,"endColumn":45},{"ruleId":"413","severity":1,"message":"437","line":191,"column":41,"nodeType":"415","messageId":"416","endLine":191,"endColumn":45},"no-native-reassign",["501"],"no-negated-in-lhs",["502"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'courses'. Either include it or remove the dependency array.","ArrayExpression",["503"],"'req' is assigned a value but never used.","'Checkbox' is defined but never used.","'crs' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["504"],"Assignments to the 'crses' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression",["505"],["501"],["502"],"'setLoading' is assigned a value but never used.","'Modal' is defined but never used.","'open' is assigned a value but never used.","'x' is assigned a value but never used.","'name' is assigned a value but never used.","'data' is assigned a value but never used.","'history' is assigned a value but never used.","'payload' is assigned a value but never used.",["506"],["507"],"'contracttype' is assigned a value but never used.","'Rank' is assigned a value but never used.","'Divider' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'searchInput'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSearch' needs the current value of 'searchInput'.",["508"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'i' is assigned a value but never used.","'DatePicker' is defined but never used.","'value' is assigned a value but never used.",["509"],["510"],"'hourstaken' is assigned a value but never used.","'emptyhours' is assigned a value but never used.","'TableFooter' is defined but never used.",["511"],"'useParams' is defined but never used.","'allReg' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handledisabled'. Either include it or remove the dependency array.",["512"],"React Hook useEffect has missing dependencies: 'handledisabled' and 'id'. Either include them or remove the dependency array.",["513"],"'Init' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Reg.Course_Code', 'findmax', 'handledisabled', and 'id'. Either include them or remove the dependency array.",["514"],"React Hook useEffect has missing dependencies: 'id' and 'searchInput'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSearch' needs the current value of 'searchInput'.",["515"],"no-dupe-keys","Duplicate key 'Email'.","ObjectExpression","unexpected","React Hook useEffect contains a call to 'setDisabled'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user] as a second argument to the useEffect Hook.",["516"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'FormControlLabel' is defined but never used.",["517"],["518"],["519"],["520"],"'course' is assigned a value but never used.",["521"],["522"],"'handleSubmit' is assigned a value but never used.","no-undef","'title' is not defined.","undef","'final' is not defined.","'date' is not defined.",["523"],["524"],["525"],"no-global-assign","no-unsafe-negation",{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"528","fix":"530"},{"desc":"528","fix":"531"},{"desc":"528","fix":"532"},{"desc":"533","fix":"534"},{"desc":"528","fix":"535"},{"desc":"528","fix":"536"},{"desc":"533","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"546","fix":"547"},{"desc":"546","fix":"548"},{"desc":"546","fix":"549"},{"desc":"546","fix":"550"},{"desc":"538","fix":"551"},{"desc":"540","fix":"552"},{"desc":"528","fix":"553"},{"desc":"528","fix":"554"},{"desc":"528","fix":"555"},{"desc":"528","fix":"556"},"Update the dependencies array to be: [courses]",{"range":"557","text":"558"},"Update the dependencies array to be: [id]",{"range":"559","text":"560"},{"range":"561","text":"560"},{"range":"562","text":"560"},{"range":"563","text":"560"},"Update the dependencies array to be: [searchInput]",{"range":"564","text":"565"},{"range":"566","text":"560"},{"range":"567","text":"560"},{"range":"568","text":"565"},"Update the dependencies array to be: [handledisabled]",{"range":"569","text":"570"},"Update the dependencies array to be: [handledisabled, id]",{"range":"571","text":"572"},"Update the dependencies array to be: [Reg.Course_Code, findmax, handledisabled, id]",{"range":"573","text":"574"},"Update the dependencies array to be: [id, searchInput]",{"range":"575","text":"576"},"Add dependencies array: [user]",{"range":"577","text":"578"},{"range":"579","text":"578"},{"range":"580","text":"578"},{"range":"581","text":"578"},{"range":"582","text":"570"},{"range":"583","text":"572"},{"range":"584","text":"560"},{"range":"585","text":"560"},{"range":"586","text":"560"},{"range":"587","text":"560"},[547,549],"[courses]",[559,561],"[id]",[540,542],[980,982],[1037,1039],[2063,2065],"[searchInput]",[687,689],[1564,1566],[1520,1522],[3006,3008],"[handledisabled]",[1430,1432],"[handledisabled, id]",[3824,3826],"[Reg.Course_Code, findmax, handledisabled, id]",[2590,2592],"[id, searchInput]",[762,762],", [user]",[1125,1125],[762,762],[1125,1125],[1999,2001],[2503,2505],[980,982],[790,792],[2246,2248],[1564,1566]]